

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Oct 06 19:10:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x220,48
    52                           	dabs	1,0x1BC,52
    53                           	dabs	1,0x210C,0,_transiente
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 09/02/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1827 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0014                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     008C                     	;# 
   120     008D                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009B                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     0111                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0115                     	;# 
   143     0116                     	;# 
   144     0117                     	;# 
   145     0118                     	;# 
   146     0119                     	;# 
   147     011A                     	;# 
   148     011B                     	;# 
   149     011D                     	;# 
   150     011E                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0191                     	;# 
   154     0191                     	;# 
   155     0192                     	;# 
   156     0193                     	;# 
   157     0193                     	;# 
   158     0193                     	;# 
   159     0194                     	;# 
   160     0195                     	;# 
   161     0196                     	;# 
   162     0199                     	;# 
   163     019A                     	;# 
   164     019B                     	;# 
   165     019B                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019C                     	;# 
   169     019C                     	;# 
   170     019D                     	;# 
   171     019E                     	;# 
   172     019F                     	;# 
   173     020C                     	;# 
   174     020D                     	;# 
   175     0211                     	;# 
   176     0211                     	;# 
   177     0212                     	;# 
   178     0212                     	;# 
   179     0213                     	;# 
   180     0213                     	;# 
   181     0214                     	;# 
   182     0214                     	;# 
   183     0215                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0216                     	;# 
   187     0216                     	;# 
   188     0217                     	;# 
   189     0217                     	;# 
   190     0219                     	;# 
   191     021A                     	;# 
   192     021B                     	;# 
   193     021C                     	;# 
   194     021D                     	;# 
   195     021E                     	;# 
   196     021F                     	;# 
   197     0291                     	;# 
   198     0291                     	;# 
   199     0292                     	;# 
   200     0293                     	;# 
   201     0294                     	;# 
   202     0295                     	;# 
   203     0295                     	;# 
   204     0296                     	;# 
   205     0298                     	;# 
   206     0298                     	;# 
   207     0299                     	;# 
   208     029A                     	;# 
   209     029B                     	;# 
   210     029C                     	;# 
   211     029C                     	;# 
   212     029D                     	;# 
   213     029E                     	;# 
   214     029E                     	;# 
   215     0311                     	;# 
   216     0311                     	;# 
   217     0312                     	;# 
   218     0313                     	;# 
   219     0318                     	;# 
   220     0318                     	;# 
   221     0319                     	;# 
   222     031A                     	;# 
   223     0394                     	;# 
   224     0395                     	;# 
   225     0396                     	;# 
   226     039A                     	;# 
   227     039C                     	;# 
   228     039D                     	;# 
   229     039E                     	;# 
   230     039F                     	;# 
   231     0415                     	;# 
   232     0416                     	;# 
   233     0417                     	;# 
   234     041C                     	;# 
   235     041D                     	;# 
   236     041E                     	;# 
   237     0FE4                     	;# 
   238     0FE5                     	;# 
   239     0FE6                     	;# 
   240     0FE7                     	;# 
   241     0FE8                     	;# 
   242     0FE9                     	;# 
   243     0FEA                     	;# 
   244     0FEB                     	;# 
   245     0FED                     	;# 
   246     0FEE                     	;# 
   247     0FEF                     	;# 
   248     0000                     	;# 
   249     0001                     	;# 
   250     0002                     	;# 
   251     0003                     	;# 
   252     0004                     	;# 
   253     0005                     	;# 
   254     0006                     	;# 
   255     0007                     	;# 
   256     0008                     	;# 
   257     0009                     	;# 
   258     000A                     	;# 
   259     000B                     	;# 
   260     000C                     	;# 
   261     000D                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001E                     	;# 
   276     001F                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     010C                     	;# 
   295     010D                     	;# 
   296     0111                     	;# 
   297     0112                     	;# 
   298     0113                     	;# 
   299     0114                     	;# 
   300     0115                     	;# 
   301     0116                     	;# 
   302     0117                     	;# 
   303     0118                     	;# 
   304     0119                     	;# 
   305     011A                     	;# 
   306     011B                     	;# 
   307     011D                     	;# 
   308     011E                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0191                     	;# 
   312     0191                     	;# 
   313     0192                     	;# 
   314     0193                     	;# 
   315     0193                     	;# 
   316     0193                     	;# 
   317     0194                     	;# 
   318     0195                     	;# 
   319     0196                     	;# 
   320     0199                     	;# 
   321     019A                     	;# 
   322     019B                     	;# 
   323     019B                     	;# 
   324     019B                     	;# 
   325     019B                     	;# 
   326     019C                     	;# 
   327     019C                     	;# 
   328     019D                     	;# 
   329     019E                     	;# 
   330     019F                     	;# 
   331     020C                     	;# 
   332     020D                     	;# 
   333     0211                     	;# 
   334     0211                     	;# 
   335     0212                     	;# 
   336     0212                     	;# 
   337     0213                     	;# 
   338     0213                     	;# 
   339     0214                     	;# 
   340     0214                     	;# 
   341     0215                     	;# 
   342     0215                     	;# 
   343     0215                     	;# 
   344     0216                     	;# 
   345     0216                     	;# 
   346     0217                     	;# 
   347     0217                     	;# 
   348     0219                     	;# 
   349     021A                     	;# 
   350     021B                     	;# 
   351     021C                     	;# 
   352     021D                     	;# 
   353     021E                     	;# 
   354     021F                     	;# 
   355     0291                     	;# 
   356     0291                     	;# 
   357     0292                     	;# 
   358     0293                     	;# 
   359     0294                     	;# 
   360     0295                     	;# 
   361     0295                     	;# 
   362     0296                     	;# 
   363     0298                     	;# 
   364     0298                     	;# 
   365     0299                     	;# 
   366     029A                     	;# 
   367     029B                     	;# 
   368     029C                     	;# 
   369     029C                     	;# 
   370     029D                     	;# 
   371     029E                     	;# 
   372     029E                     	;# 
   373     0311                     	;# 
   374     0311                     	;# 
   375     0312                     	;# 
   376     0313                     	;# 
   377     0318                     	;# 
   378     0318                     	;# 
   379     0319                     	;# 
   380     031A                     	;# 
   381     0394                     	;# 
   382     0395                     	;# 
   383     0396                     	;# 
   384     039A                     	;# 
   385     039C                     	;# 
   386     039D                     	;# 
   387     039E                     	;# 
   388     039F                     	;# 
   389     0415                     	;# 
   390     0416                     	;# 
   391     0417                     	;# 
   392     041C                     	;# 
   393     041D                     	;# 
   394     041E                     	;# 
   395     0FE4                     	;# 
   396     0FE5                     	;# 
   397     0FE6                     	;# 
   398     0FE7                     	;# 
   399     0FE8                     	;# 
   400     0FE9                     	;# 
   401     0FEA                     	;# 
   402     0FEB                     	;# 
   403     0FED                     	;# 
   404     0FEE                     	;# 
   405     0FEF                     	;# 
   406     0000                     	;# 
   407     0001                     	;# 
   408     0002                     	;# 
   409     0003                     	;# 
   410     0004                     	;# 
   411     0005                     	;# 
   412     0006                     	;# 
   413     0007                     	;# 
   414     0008                     	;# 
   415     0009                     	;# 
   416     000A                     	;# 
   417     000B                     	;# 
   418     000C                     	;# 
   419     000D                     	;# 
   420     0011                     	;# 
   421     0012                     	;# 
   422     0013                     	;# 
   423     0014                     	;# 
   424     0015                     	;# 
   425     0016                     	;# 
   426     0016                     	;# 
   427     0017                     	;# 
   428     0018                     	;# 
   429     0019                     	;# 
   430     001A                     	;# 
   431     001B                     	;# 
   432     001C                     	;# 
   433     001E                     	;# 
   434     001F                     	;# 
   435     008C                     	;# 
   436     008D                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009B                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     010C                     	;# 
   453     010D                     	;# 
   454     0111                     	;# 
   455     0112                     	;# 
   456     0113                     	;# 
   457     0114                     	;# 
   458     0115                     	;# 
   459     0116                     	;# 
   460     0117                     	;# 
   461     0118                     	;# 
   462     0119                     	;# 
   463     011A                     	;# 
   464     011B                     	;# 
   465     011D                     	;# 
   466     011E                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469     0191                     	;# 
   470     0191                     	;# 
   471     0192                     	;# 
   472     0193                     	;# 
   473     0193                     	;# 
   474     0193                     	;# 
   475     0194                     	;# 
   476     0195                     	;# 
   477     0196                     	;# 
   478     0199                     	;# 
   479     019A                     	;# 
   480     019B                     	;# 
   481     019B                     	;# 
   482     019B                     	;# 
   483     019B                     	;# 
   484     019C                     	;# 
   485     019C                     	;# 
   486     019D                     	;# 
   487     019E                     	;# 
   488     019F                     	;# 
   489     020C                     	;# 
   490     020D                     	;# 
   491     0211                     	;# 
   492     0211                     	;# 
   493     0212                     	;# 
   494     0212                     	;# 
   495     0213                     	;# 
   496     0213                     	;# 
   497     0214                     	;# 
   498     0214                     	;# 
   499     0215                     	;# 
   500     0215                     	;# 
   501     0215                     	;# 
   502     0216                     	;# 
   503     0216                     	;# 
   504     0217                     	;# 
   505     0217                     	;# 
   506     0219                     	;# 
   507     021A                     	;# 
   508     021B                     	;# 
   509     021C                     	;# 
   510     021D                     	;# 
   511     021E                     	;# 
   512     021F                     	;# 
   513     0291                     	;# 
   514     0291                     	;# 
   515     0292                     	;# 
   516     0293                     	;# 
   517     0294                     	;# 
   518     0295                     	;# 
   519     0295                     	;# 
   520     0296                     	;# 
   521     0298                     	;# 
   522     0298                     	;# 
   523     0299                     	;# 
   524     029A                     	;# 
   525     029B                     	;# 
   526     029C                     	;# 
   527     029C                     	;# 
   528     029D                     	;# 
   529     029E                     	;# 
   530     029E                     	;# 
   531     0311                     	;# 
   532     0311                     	;# 
   533     0312                     	;# 
   534     0313                     	;# 
   535     0318                     	;# 
   536     0318                     	;# 
   537     0319                     	;# 
   538     031A                     	;# 
   539     0394                     	;# 
   540     0395                     	;# 
   541     0396                     	;# 
   542     039A                     	;# 
   543     039C                     	;# 
   544     039D                     	;# 
   545     039E                     	;# 
   546     039F                     	;# 
   547     0415                     	;# 
   548     0416                     	;# 
   549     0417                     	;# 
   550     041C                     	;# 
   551     041D                     	;# 
   552     041E                     	;# 
   553     0FE4                     	;# 
   554     0FE5                     	;# 
   555     0FE6                     	;# 
   556     0FE7                     	;# 
   557     0FE8                     	;# 
   558     0FE9                     	;# 
   559     0FEA                     	;# 
   560     0FEB                     	;# 
   561     0FED                     	;# 
   562     0FEE                     	;# 
   563     0FEF                     	;# 
   564     0000                     	;# 
   565     0001                     	;# 
   566     0002                     	;# 
   567     0003                     	;# 
   568     0004                     	;# 
   569     0005                     	;# 
   570     0006                     	;# 
   571     0007                     	;# 
   572     0008                     	;# 
   573     0009                     	;# 
   574     000A                     	;# 
   575     000B                     	;# 
   576     000C                     	;# 
   577     000D                     	;# 
   578     0011                     	;# 
   579     0012                     	;# 
   580     0013                     	;# 
   581     0014                     	;# 
   582     0015                     	;# 
   583     0016                     	;# 
   584     0016                     	;# 
   585     0017                     	;# 
   586     0018                     	;# 
   587     0019                     	;# 
   588     001A                     	;# 
   589     001B                     	;# 
   590     001C                     	;# 
   591     001E                     	;# 
   592     001F                     	;# 
   593     008C                     	;# 
   594     008D                     	;# 
   595     0091                     	;# 
   596     0092                     	;# 
   597     0093                     	;# 
   598     0094                     	;# 
   599     0095                     	;# 
   600     0096                     	;# 
   601     0097                     	;# 
   602     0098                     	;# 
   603     0099                     	;# 
   604     009A                     	;# 
   605     009B                     	;# 
   606     009B                     	;# 
   607     009C                     	;# 
   608     009D                     	;# 
   609     009E                     	;# 
   610     010C                     	;# 
   611     010D                     	;# 
   612     0111                     	;# 
   613     0112                     	;# 
   614     0113                     	;# 
   615     0114                     	;# 
   616     0115                     	;# 
   617     0116                     	;# 
   618     0117                     	;# 
   619     0118                     	;# 
   620     0119                     	;# 
   621     011A                     	;# 
   622     011B                     	;# 
   623     011D                     	;# 
   624     011E                     	;# 
   625     018C                     	;# 
   626     018D                     	;# 
   627     0191                     	;# 
   628     0191                     	;# 
   629     0192                     	;# 
   630     0193                     	;# 
   631     0193                     	;# 
   632     0193                     	;# 
   633     0194                     	;# 
   634     0195                     	;# 
   635     0196                     	;# 
   636     0199                     	;# 
   637     019A                     	;# 
   638     019B                     	;# 
   639     019B                     	;# 
   640     019B                     	;# 
   641     019B                     	;# 
   642     019C                     	;# 
   643     019C                     	;# 
   644     019D                     	;# 
   645     019E                     	;# 
   646     019F                     	;# 
   647     020C                     	;# 
   648     020D                     	;# 
   649     0211                     	;# 
   650     0211                     	;# 
   651     0212                     	;# 
   652     0212                     	;# 
   653     0213                     	;# 
   654     0213                     	;# 
   655     0214                     	;# 
   656     0214                     	;# 
   657     0215                     	;# 
   658     0215                     	;# 
   659     0215                     	;# 
   660     0216                     	;# 
   661     0216                     	;# 
   662     0217                     	;# 
   663     0217                     	;# 
   664     0219                     	;# 
   665     021A                     	;# 
   666     021B                     	;# 
   667     021C                     	;# 
   668     021D                     	;# 
   669     021E                     	;# 
   670     021F                     	;# 
   671     0291                     	;# 
   672     0291                     	;# 
   673     0292                     	;# 
   674     0293                     	;# 
   675     0294                     	;# 
   676     0295                     	;# 
   677     0295                     	;# 
   678     0296                     	;# 
   679     0298                     	;# 
   680     0298                     	;# 
   681     0299                     	;# 
   682     029A                     	;# 
   683     029B                     	;# 
   684     029C                     	;# 
   685     029C                     	;# 
   686     029D                     	;# 
   687     029E                     	;# 
   688     029E                     	;# 
   689     0311                     	;# 
   690     0311                     	;# 
   691     0312                     	;# 
   692     0313                     	;# 
   693     0318                     	;# 
   694     0318                     	;# 
   695     0319                     	;# 
   696     031A                     	;# 
   697     0394                     	;# 
   698     0395                     	;# 
   699     0396                     	;# 
   700     039A                     	;# 
   701     039C                     	;# 
   702     039D                     	;# 
   703     039E                     	;# 
   704     039F                     	;# 
   705     0415                     	;# 
   706     0416                     	;# 
   707     0417                     	;# 
   708     041C                     	;# 
   709     041D                     	;# 
   710     041E                     	;# 
   711     0FE4                     	;# 
   712     0FE5                     	;# 
   713     0FE6                     	;# 
   714     0FE7                     	;# 
   715     0FE8                     	;# 
   716     0FE9                     	;# 
   717     0FEA                     	;# 
   718     0FEB                     	;# 
   719     0FED                     	;# 
   720     0FEE                     	;# 
   721     0FEF                     	;# 
   722     0000                     	;# 
   723     0001                     	;# 
   724     0002                     	;# 
   725     0003                     	;# 
   726     0004                     	;# 
   727     0005                     	;# 
   728     0006                     	;# 
   729     0007                     	;# 
   730     0008                     	;# 
   731     0009                     	;# 
   732     000A                     	;# 
   733     000B                     	;# 
   734     000C                     	;# 
   735     000D                     	;# 
   736     0011                     	;# 
   737     0012                     	;# 
   738     0013                     	;# 
   739     0014                     	;# 
   740     0015                     	;# 
   741     0016                     	;# 
   742     0016                     	;# 
   743     0017                     	;# 
   744     0018                     	;# 
   745     0019                     	;# 
   746     001A                     	;# 
   747     001B                     	;# 
   748     001C                     	;# 
   749     001E                     	;# 
   750     001F                     	;# 
   751     008C                     	;# 
   752     008D                     	;# 
   753     0091                     	;# 
   754     0092                     	;# 
   755     0093                     	;# 
   756     0094                     	;# 
   757     0095                     	;# 
   758     0096                     	;# 
   759     0097                     	;# 
   760     0098                     	;# 
   761     0099                     	;# 
   762     009A                     	;# 
   763     009B                     	;# 
   764     009B                     	;# 
   765     009C                     	;# 
   766     009D                     	;# 
   767     009E                     	;# 
   768     010C                     	;# 
   769     010D                     	;# 
   770     0111                     	;# 
   771     0112                     	;# 
   772     0113                     	;# 
   773     0114                     	;# 
   774     0115                     	;# 
   775     0116                     	;# 
   776     0117                     	;# 
   777     0118                     	;# 
   778     0119                     	;# 
   779     011A                     	;# 
   780     011B                     	;# 
   781     011D                     	;# 
   782     011E                     	;# 
   783     018C                     	;# 
   784     018D                     	;# 
   785     0191                     	;# 
   786     0191                     	;# 
   787     0192                     	;# 
   788     0193                     	;# 
   789     0193                     	;# 
   790     0193                     	;# 
   791     0194                     	;# 
   792     0195                     	;# 
   793     0196                     	;# 
   794     0199                     	;# 
   795     019A                     	;# 
   796     019B                     	;# 
   797     019B                     	;# 
   798     019B                     	;# 
   799     019B                     	;# 
   800     019C                     	;# 
   801     019C                     	;# 
   802     019D                     	;# 
   803     019E                     	;# 
   804     019F                     	;# 
   805     020C                     	;# 
   806     020D                     	;# 
   807     0211                     	;# 
   808     0211                     	;# 
   809     0212                     	;# 
   810     0212                     	;# 
   811     0213                     	;# 
   812     0213                     	;# 
   813     0214                     	;# 
   814     0214                     	;# 
   815     0215                     	;# 
   816     0215                     	;# 
   817     0215                     	;# 
   818     0216                     	;# 
   819     0216                     	;# 
   820     0217                     	;# 
   821     0217                     	;# 
   822     0219                     	;# 
   823     021A                     	;# 
   824     021B                     	;# 
   825     021C                     	;# 
   826     021D                     	;# 
   827     021E                     	;# 
   828     021F                     	;# 
   829     0291                     	;# 
   830     0291                     	;# 
   831     0292                     	;# 
   832     0293                     	;# 
   833     0294                     	;# 
   834     0295                     	;# 
   835     0295                     	;# 
   836     0296                     	;# 
   837     0298                     	;# 
   838     0298                     	;# 
   839     0299                     	;# 
   840     029A                     	;# 
   841     029B                     	;# 
   842     029C                     	;# 
   843     029C                     	;# 
   844     029D                     	;# 
   845     029E                     	;# 
   846     029E                     	;# 
   847     0311                     	;# 
   848     0311                     	;# 
   849     0312                     	;# 
   850     0313                     	;# 
   851     0318                     	;# 
   852     0318                     	;# 
   853     0319                     	;# 
   854     031A                     	;# 
   855     0394                     	;# 
   856     0395                     	;# 
   857     0396                     	;# 
   858     039A                     	;# 
   859     039C                     	;# 
   860     039D                     	;# 
   861     039E                     	;# 
   862     039F                     	;# 
   863     0415                     	;# 
   864     0416                     	;# 
   865     0417                     	;# 
   866     041C                     	;# 
   867     041D                     	;# 
   868     041E                     	;# 
   869     0FE4                     	;# 
   870     0FE5                     	;# 
   871     0FE6                     	;# 
   872     0FE7                     	;# 
   873     0FE8                     	;# 
   874     0FE9                     	;# 
   875     0FEA                     	;# 
   876     0FEB                     	;# 
   877     0FED                     	;# 
   878     0FEE                     	;# 
   879     0FEF                     	;# 
   880     0000                     	;# 
   881     0001                     	;# 
   882     0002                     	;# 
   883     0003                     	;# 
   884     0004                     	;# 
   885     0005                     	;# 
   886     0006                     	;# 
   887     0007                     	;# 
   888     0008                     	;# 
   889     0009                     	;# 
   890     000A                     	;# 
   891     000B                     	;# 
   892     000C                     	;# 
   893     000D                     	;# 
   894     0011                     	;# 
   895     0012                     	;# 
   896     0013                     	;# 
   897     0014                     	;# 
   898     0015                     	;# 
   899     0016                     	;# 
   900     0016                     	;# 
   901     0017                     	;# 
   902     0018                     	;# 
   903     0019                     	;# 
   904     001A                     	;# 
   905     001B                     	;# 
   906     001C                     	;# 
   907     001E                     	;# 
   908     001F                     	;# 
   909     008C                     	;# 
   910     008D                     	;# 
   911     0091                     	;# 
   912     0092                     	;# 
   913     0093                     	;# 
   914     0094                     	;# 
   915     0095                     	;# 
   916     0096                     	;# 
   917     0097                     	;# 
   918     0098                     	;# 
   919     0099                     	;# 
   920     009A                     	;# 
   921     009B                     	;# 
   922     009B                     	;# 
   923     009C                     	;# 
   924     009D                     	;# 
   925     009E                     	;# 
   926     010C                     	;# 
   927     010D                     	;# 
   928     0111                     	;# 
   929     0112                     	;# 
   930     0113                     	;# 
   931     0114                     	;# 
   932     0115                     	;# 
   933     0116                     	;# 
   934     0117                     	;# 
   935     0118                     	;# 
   936     0119                     	;# 
   937     011A                     	;# 
   938     011B                     	;# 
   939     011D                     	;# 
   940     011E                     	;# 
   941     018C                     	;# 
   942     018D                     	;# 
   943     0191                     	;# 
   944     0191                     	;# 
   945     0192                     	;# 
   946     0193                     	;# 
   947     0193                     	;# 
   948     0193                     	;# 
   949     0194                     	;# 
   950     0195                     	;# 
   951     0196                     	;# 
   952     0199                     	;# 
   953     019A                     	;# 
   954     019B                     	;# 
   955     019B                     	;# 
   956     019B                     	;# 
   957     019B                     	;# 
   958     019C                     	;# 
   959     019C                     	;# 
   960     019D                     	;# 
   961     019E                     	;# 
   962     019F                     	;# 
   963     020C                     	;# 
   964     020D                     	;# 
   965     0211                     	;# 
   966     0211                     	;# 
   967     0212                     	;# 
   968     0212                     	;# 
   969     0213                     	;# 
   970     0213                     	;# 
   971     0214                     	;# 
   972     0214                     	;# 
   973     0215                     	;# 
   974     0215                     	;# 
   975     0215                     	;# 
   976     0216                     	;# 
   977     0216                     	;# 
   978     0217                     	;# 
   979     0217                     	;# 
   980     0219                     	;# 
   981     021A                     	;# 
   982     021B                     	;# 
   983     021C                     	;# 
   984     021D                     	;# 
   985     021E                     	;# 
   986     021F                     	;# 
   987     0291                     	;# 
   988     0291                     	;# 
   989     0292                     	;# 
   990     0293                     	;# 
   991     0294                     	;# 
   992     0295                     	;# 
   993     0295                     	;# 
   994     0296                     	;# 
   995     0298                     	;# 
   996     0298                     	;# 
   997     0299                     	;# 
   998     029A                     	;# 
   999     029B                     	;# 
  1000     029C                     	;# 
  1001     029C                     	;# 
  1002     029D                     	;# 
  1003     029E                     	;# 
  1004     029E                     	;# 
  1005     0311                     	;# 
  1006     0311                     	;# 
  1007     0312                     	;# 
  1008     0313                     	;# 
  1009     0318                     	;# 
  1010     0318                     	;# 
  1011     0319                     	;# 
  1012     031A                     	;# 
  1013     0394                     	;# 
  1014     0395                     	;# 
  1015     0396                     	;# 
  1016     039A                     	;# 
  1017     039C                     	;# 
  1018     039D                     	;# 
  1019     039E                     	;# 
  1020     039F                     	;# 
  1021     0415                     	;# 
  1022     0416                     	;# 
  1023     0417                     	;# 
  1024     041C                     	;# 
  1025     041D                     	;# 
  1026     041E                     	;# 
  1027     0FE4                     	;# 
  1028     0FE5                     	;# 
  1029     0FE6                     	;# 
  1030     0FE7                     	;# 
  1031     0FE8                     	;# 
  1032     0FE9                     	;# 
  1033     0FEA                     	;# 
  1034     0FEB                     	;# 
  1035     0FED                     	;# 
  1036     0FEE                     	;# 
  1037     0FEF                     	;# 
  1038     0000                     	;# 
  1039     0001                     	;# 
  1040     0002                     	;# 
  1041     0003                     	;# 
  1042     0004                     	;# 
  1043     0005                     	;# 
  1044     0006                     	;# 
  1045     0007                     	;# 
  1046     0008                     	;# 
  1047     0009                     	;# 
  1048     000A                     	;# 
  1049     000B                     	;# 
  1050     000C                     	;# 
  1051     000D                     	;# 
  1052     0011                     	;# 
  1053     0012                     	;# 
  1054     0013                     	;# 
  1055     0014                     	;# 
  1056     0015                     	;# 
  1057     0016                     	;# 
  1058     0016                     	;# 
  1059     0017                     	;# 
  1060     0018                     	;# 
  1061     0019                     	;# 
  1062     001A                     	;# 
  1063     001B                     	;# 
  1064     001C                     	;# 
  1065     001E                     	;# 
  1066     001F                     	;# 
  1067     008C                     	;# 
  1068     008D                     	;# 
  1069     0091                     	;# 
  1070     0092                     	;# 
  1071     0093                     	;# 
  1072     0094                     	;# 
  1073     0095                     	;# 
  1074     0096                     	;# 
  1075     0097                     	;# 
  1076     0098                     	;# 
  1077     0099                     	;# 
  1078     009A                     	;# 
  1079     009B                     	;# 
  1080     009B                     	;# 
  1081     009C                     	;# 
  1082     009D                     	;# 
  1083     009E                     	;# 
  1084     010C                     	;# 
  1085     010D                     	;# 
  1086     0111                     	;# 
  1087     0112                     	;# 
  1088     0113                     	;# 
  1089     0114                     	;# 
  1090     0115                     	;# 
  1091     0116                     	;# 
  1092     0117                     	;# 
  1093     0118                     	;# 
  1094     0119                     	;# 
  1095     011A                     	;# 
  1096     011B                     	;# 
  1097     011D                     	;# 
  1098     011E                     	;# 
  1099     018C                     	;# 
  1100     018D                     	;# 
  1101     0191                     	;# 
  1102     0191                     	;# 
  1103     0192                     	;# 
  1104     0193                     	;# 
  1105     0193                     	;# 
  1106     0193                     	;# 
  1107     0194                     	;# 
  1108     0195                     	;# 
  1109     0196                     	;# 
  1110     0199                     	;# 
  1111     019A                     	;# 
  1112     019B                     	;# 
  1113     019B                     	;# 
  1114     019B                     	;# 
  1115     019B                     	;# 
  1116     019C                     	;# 
  1117     019C                     	;# 
  1118     019D                     	;# 
  1119     019E                     	;# 
  1120     019F                     	;# 
  1121     020C                     	;# 
  1122     020D                     	;# 
  1123     0211                     	;# 
  1124     0211                     	;# 
  1125     0212                     	;# 
  1126     0212                     	;# 
  1127     0213                     	;# 
  1128     0213                     	;# 
  1129     0214                     	;# 
  1130     0214                     	;# 
  1131     0215                     	;# 
  1132     0215                     	;# 
  1133     0215                     	;# 
  1134     0216                     	;# 
  1135     0216                     	;# 
  1136     0217                     	;# 
  1137     0217                     	;# 
  1138     0219                     	;# 
  1139     021A                     	;# 
  1140     021B                     	;# 
  1141     021C                     	;# 
  1142     021D                     	;# 
  1143     021E                     	;# 
  1144     021F                     	;# 
  1145     0291                     	;# 
  1146     0291                     	;# 
  1147     0292                     	;# 
  1148     0293                     	;# 
  1149     0294                     	;# 
  1150     0295                     	;# 
  1151     0295                     	;# 
  1152     0296                     	;# 
  1153     0298                     	;# 
  1154     0298                     	;# 
  1155     0299                     	;# 
  1156     029A                     	;# 
  1157     029B                     	;# 
  1158     029C                     	;# 
  1159     029C                     	;# 
  1160     029D                     	;# 
  1161     029E                     	;# 
  1162     029E                     	;# 
  1163     0311                     	;# 
  1164     0311                     	;# 
  1165     0312                     	;# 
  1166     0313                     	;# 
  1167     0318                     	;# 
  1168     0318                     	;# 
  1169     0319                     	;# 
  1170     031A                     	;# 
  1171     0394                     	;# 
  1172     0395                     	;# 
  1173     0396                     	;# 
  1174     039A                     	;# 
  1175     039C                     	;# 
  1176     039D                     	;# 
  1177     039E                     	;# 
  1178     039F                     	;# 
  1179     0415                     	;# 
  1180     0416                     	;# 
  1181     0417                     	;# 
  1182     041C                     	;# 
  1183     041D                     	;# 
  1184     041E                     	;# 
  1185     0FE4                     	;# 
  1186     0FE5                     	;# 
  1187     0FE6                     	;# 
  1188     0FE7                     	;# 
  1189     0FE8                     	;# 
  1190     0FE9                     	;# 
  1191     0FEA                     	;# 
  1192     0FEB                     	;# 
  1193     0FED                     	;# 
  1194     0FEE                     	;# 
  1195     0FEF                     	;# 
  1196     0000                     	;# 
  1197     0001                     	;# 
  1198     0002                     	;# 
  1199     0003                     	;# 
  1200     0004                     	;# 
  1201     0005                     	;# 
  1202     0006                     	;# 
  1203     0007                     	;# 
  1204     0008                     	;# 
  1205     0009                     	;# 
  1206     000A                     	;# 
  1207     000B                     	;# 
  1208     000C                     	;# 
  1209     000D                     	;# 
  1210     0011                     	;# 
  1211     0012                     	;# 
  1212     0013                     	;# 
  1213     0014                     	;# 
  1214     0015                     	;# 
  1215     0016                     	;# 
  1216     0016                     	;# 
  1217     0017                     	;# 
  1218     0018                     	;# 
  1219     0019                     	;# 
  1220     001A                     	;# 
  1221     001B                     	;# 
  1222     001C                     	;# 
  1223     001E                     	;# 
  1224     001F                     	;# 
  1225     008C                     	;# 
  1226     008D                     	;# 
  1227     0091                     	;# 
  1228     0092                     	;# 
  1229     0093                     	;# 
  1230     0094                     	;# 
  1231     0095                     	;# 
  1232     0096                     	;# 
  1233     0097                     	;# 
  1234     0098                     	;# 
  1235     0099                     	;# 
  1236     009A                     	;# 
  1237     009B                     	;# 
  1238     009B                     	;# 
  1239     009C                     	;# 
  1240     009D                     	;# 
  1241     009E                     	;# 
  1242     010C                     	;# 
  1243     010D                     	;# 
  1244     0111                     	;# 
  1245     0112                     	;# 
  1246     0113                     	;# 
  1247     0114                     	;# 
  1248     0115                     	;# 
  1249     0116                     	;# 
  1250     0117                     	;# 
  1251     0118                     	;# 
  1252     0119                     	;# 
  1253     011A                     	;# 
  1254     011B                     	;# 
  1255     011D                     	;# 
  1256     011E                     	;# 
  1257     018C                     	;# 
  1258     018D                     	;# 
  1259     0191                     	;# 
  1260     0191                     	;# 
  1261     0192                     	;# 
  1262     0193                     	;# 
  1263     0193                     	;# 
  1264     0193                     	;# 
  1265     0194                     	;# 
  1266     0195                     	;# 
  1267     0196                     	;# 
  1268     0199                     	;# 
  1269     019A                     	;# 
  1270     019B                     	;# 
  1271     019B                     	;# 
  1272     019B                     	;# 
  1273     019B                     	;# 
  1274     019C                     	;# 
  1275     019C                     	;# 
  1276     019D                     	;# 
  1277     019E                     	;# 
  1278     019F                     	;# 
  1279     020C                     	;# 
  1280     020D                     	;# 
  1281     0211                     	;# 
  1282     0211                     	;# 
  1283     0212                     	;# 
  1284     0212                     	;# 
  1285     0213                     	;# 
  1286     0213                     	;# 
  1287     0214                     	;# 
  1288     0214                     	;# 
  1289     0215                     	;# 
  1290     0215                     	;# 
  1291     0215                     	;# 
  1292     0216                     	;# 
  1293     0216                     	;# 
  1294     0217                     	;# 
  1295     0217                     	;# 
  1296     0219                     	;# 
  1297     021A                     	;# 
  1298     021B                     	;# 
  1299     021C                     	;# 
  1300     021D                     	;# 
  1301     021E                     	;# 
  1302     021F                     	;# 
  1303     0291                     	;# 
  1304     0291                     	;# 
  1305     0292                     	;# 
  1306     0293                     	;# 
  1307     0294                     	;# 
  1308     0295                     	;# 
  1309     0295                     	;# 
  1310     0296                     	;# 
  1311     0298                     	;# 
  1312     0298                     	;# 
  1313     0299                     	;# 
  1314     029A                     	;# 
  1315     029B                     	;# 
  1316     029C                     	;# 
  1317     029C                     	;# 
  1318     029D                     	;# 
  1319     029E                     	;# 
  1320     029E                     	;# 
  1321     0311                     	;# 
  1322     0311                     	;# 
  1323     0312                     	;# 
  1324     0313                     	;# 
  1325     0318                     	;# 
  1326     0318                     	;# 
  1327     0319                     	;# 
  1328     031A                     	;# 
  1329     0394                     	;# 
  1330     0395                     	;# 
  1331     0396                     	;# 
  1332     039A                     	;# 
  1333     039C                     	;# 
  1334     039D                     	;# 
  1335     039E                     	;# 
  1336     039F                     	;# 
  1337     0415                     	;# 
  1338     0416                     	;# 
  1339     0417                     	;# 
  1340     041C                     	;# 
  1341     041D                     	;# 
  1342     041E                     	;# 
  1343     0FE4                     	;# 
  1344     0FE5                     	;# 
  1345     0FE6                     	;# 
  1346     0FE7                     	;# 
  1347     0FE8                     	;# 
  1348     0FE9                     	;# 
  1349     0FEA                     	;# 
  1350     0FEB                     	;# 
  1351     0FED                     	;# 
  1352     0FEE                     	;# 
  1353     0FEF                     	;# 
  1354     0000                     	;# 
  1355     0001                     	;# 
  1356     0002                     	;# 
  1357     0003                     	;# 
  1358     0004                     	;# 
  1359     0005                     	;# 
  1360     0006                     	;# 
  1361     0007                     	;# 
  1362     0008                     	;# 
  1363     0009                     	;# 
  1364     000A                     	;# 
  1365     000B                     	;# 
  1366     000C                     	;# 
  1367     000D                     	;# 
  1368     0011                     	;# 
  1369     0012                     	;# 
  1370     0013                     	;# 
  1371     0014                     	;# 
  1372     0015                     	;# 
  1373     0016                     	;# 
  1374     0016                     	;# 
  1375     0017                     	;# 
  1376     0018                     	;# 
  1377     0019                     	;# 
  1378     001A                     	;# 
  1379     001B                     	;# 
  1380     001C                     	;# 
  1381     001E                     	;# 
  1382     001F                     	;# 
  1383     008C                     	;# 
  1384     008D                     	;# 
  1385     0091                     	;# 
  1386     0092                     	;# 
  1387     0093                     	;# 
  1388     0094                     	;# 
  1389     0095                     	;# 
  1390     0096                     	;# 
  1391     0097                     	;# 
  1392     0098                     	;# 
  1393     0099                     	;# 
  1394     009A                     	;# 
  1395     009B                     	;# 
  1396     009B                     	;# 
  1397     009C                     	;# 
  1398     009D                     	;# 
  1399     009E                     	;# 
  1400     010C                     	;# 
  1401     010D                     	;# 
  1402     0111                     	;# 
  1403     0112                     	;# 
  1404     0113                     	;# 
  1405     0114                     	;# 
  1406     0115                     	;# 
  1407     0116                     	;# 
  1408     0117                     	;# 
  1409     0118                     	;# 
  1410     0119                     	;# 
  1411     011A                     	;# 
  1412     011B                     	;# 
  1413     011D                     	;# 
  1414     011E                     	;# 
  1415     018C                     	;# 
  1416     018D                     	;# 
  1417     0191                     	;# 
  1418     0191                     	;# 
  1419     0192                     	;# 
  1420     0193                     	;# 
  1421     0193                     	;# 
  1422     0193                     	;# 
  1423     0194                     	;# 
  1424     0195                     	;# 
  1425     0196                     	;# 
  1426     0199                     	;# 
  1427     019A                     	;# 
  1428     019B                     	;# 
  1429     019B                     	;# 
  1430     019B                     	;# 
  1431     019B                     	;# 
  1432     019C                     	;# 
  1433     019C                     	;# 
  1434     019D                     	;# 
  1435     019E                     	;# 
  1436     019F                     	;# 
  1437     020C                     	;# 
  1438     020D                     	;# 
  1439     0211                     	;# 
  1440     0211                     	;# 
  1441     0212                     	;# 
  1442     0212                     	;# 
  1443     0213                     	;# 
  1444     0213                     	;# 
  1445     0214                     	;# 
  1446     0214                     	;# 
  1447     0215                     	;# 
  1448     0215                     	;# 
  1449     0215                     	;# 
  1450     0216                     	;# 
  1451     0216                     	;# 
  1452     0217                     	;# 
  1453     0217                     	;# 
  1454     0219                     	;# 
  1455     021A                     	;# 
  1456     021B                     	;# 
  1457     021C                     	;# 
  1458     021D                     	;# 
  1459     021E                     	;# 
  1460     021F                     	;# 
  1461     0291                     	;# 
  1462     0291                     	;# 
  1463     0292                     	;# 
  1464     0293                     	;# 
  1465     0294                     	;# 
  1466     0295                     	;# 
  1467     0295                     	;# 
  1468     0296                     	;# 
  1469     0298                     	;# 
  1470     0298                     	;# 
  1471     0299                     	;# 
  1472     029A                     	;# 
  1473     029B                     	;# 
  1474     029C                     	;# 
  1475     029C                     	;# 
  1476     029D                     	;# 
  1477     029E                     	;# 
  1478     029E                     	;# 
  1479     0311                     	;# 
  1480     0311                     	;# 
  1481     0312                     	;# 
  1482     0313                     	;# 
  1483     0318                     	;# 
  1484     0318                     	;# 
  1485     0319                     	;# 
  1486     031A                     	;# 
  1487     0394                     	;# 
  1488     0395                     	;# 
  1489     0396                     	;# 
  1490     039A                     	;# 
  1491     039C                     	;# 
  1492     039D                     	;# 
  1493     039E                     	;# 
  1494     039F                     	;# 
  1495     0415                     	;# 
  1496     0416                     	;# 
  1497     0417                     	;# 
  1498     041C                     	;# 
  1499     041D                     	;# 
  1500     041E                     	;# 
  1501     0FE4                     	;# 
  1502     0FE5                     	;# 
  1503     0FE6                     	;# 
  1504     0FE7                     	;# 
  1505     0FE8                     	;# 
  1506     0FE9                     	;# 
  1507     0FEA                     	;# 
  1508     0FEB                     	;# 
  1509     0FED                     	;# 
  1510     0FEE                     	;# 
  1511     0FEF                     	;# 
  1512     0000                     	;# 
  1513     0001                     	;# 
  1514     0002                     	;# 
  1515     0003                     	;# 
  1516     0004                     	;# 
  1517     0005                     	;# 
  1518     0006                     	;# 
  1519     0007                     	;# 
  1520     0008                     	;# 
  1521     0009                     	;# 
  1522     000A                     	;# 
  1523     000B                     	;# 
  1524     000C                     	;# 
  1525     000D                     	;# 
  1526     0011                     	;# 
  1527     0012                     	;# 
  1528     0013                     	;# 
  1529     0014                     	;# 
  1530     0015                     	;# 
  1531     0016                     	;# 
  1532     0016                     	;# 
  1533     0017                     	;# 
  1534     0018                     	;# 
  1535     0019                     	;# 
  1536     001A                     	;# 
  1537     001B                     	;# 
  1538     001C                     	;# 
  1539     001E                     	;# 
  1540     001F                     	;# 
  1541     008C                     	;# 
  1542     008D                     	;# 
  1543     0091                     	;# 
  1544     0092                     	;# 
  1545     0093                     	;# 
  1546     0094                     	;# 
  1547     0095                     	;# 
  1548     0096                     	;# 
  1549     0097                     	;# 
  1550     0098                     	;# 
  1551     0099                     	;# 
  1552     009A                     	;# 
  1553     009B                     	;# 
  1554     009B                     	;# 
  1555     009C                     	;# 
  1556     009D                     	;# 
  1557     009E                     	;# 
  1558     010C                     	;# 
  1559     010D                     	;# 
  1560     0111                     	;# 
  1561     0112                     	;# 
  1562     0113                     	;# 
  1563     0114                     	;# 
  1564     0115                     	;# 
  1565     0116                     	;# 
  1566     0117                     	;# 
  1567     0118                     	;# 
  1568     0119                     	;# 
  1569     011A                     	;# 
  1570     011B                     	;# 
  1571     011D                     	;# 
  1572     011E                     	;# 
  1573     018C                     	;# 
  1574     018D                     	;# 
  1575     0191                     	;# 
  1576     0191                     	;# 
  1577     0192                     	;# 
  1578     0193                     	;# 
  1579     0193                     	;# 
  1580     0193                     	;# 
  1581     0194                     	;# 
  1582     0195                     	;# 
  1583     0196                     	;# 
  1584     0199                     	;# 
  1585     019A                     	;# 
  1586     019B                     	;# 
  1587     019B                     	;# 
  1588     019B                     	;# 
  1589     019B                     	;# 
  1590     019C                     	;# 
  1591     019C                     	;# 
  1592     019D                     	;# 
  1593     019E                     	;# 
  1594     019F                     	;# 
  1595     020C                     	;# 
  1596     020D                     	;# 
  1597     0211                     	;# 
  1598     0211                     	;# 
  1599     0212                     	;# 
  1600     0212                     	;# 
  1601     0213                     	;# 
  1602     0213                     	;# 
  1603     0214                     	;# 
  1604     0214                     	;# 
  1605     0215                     	;# 
  1606     0215                     	;# 
  1607     0215                     	;# 
  1608     0216                     	;# 
  1609     0216                     	;# 
  1610     0217                     	;# 
  1611     0217                     	;# 
  1612     0219                     	;# 
  1613     021A                     	;# 
  1614     021B                     	;# 
  1615     021C                     	;# 
  1616     021D                     	;# 
  1617     021E                     	;# 
  1618     021F                     	;# 
  1619     0291                     	;# 
  1620     0291                     	;# 
  1621     0292                     	;# 
  1622     0293                     	;# 
  1623     0294                     	;# 
  1624     0295                     	;# 
  1625     0295                     	;# 
  1626     0296                     	;# 
  1627     0298                     	;# 
  1628     0298                     	;# 
  1629     0299                     	;# 
  1630     029A                     	;# 
  1631     029B                     	;# 
  1632     029C                     	;# 
  1633     029C                     	;# 
  1634     029D                     	;# 
  1635     029E                     	;# 
  1636     029E                     	;# 
  1637     0311                     	;# 
  1638     0311                     	;# 
  1639     0312                     	;# 
  1640     0313                     	;# 
  1641     0318                     	;# 
  1642     0318                     	;# 
  1643     0319                     	;# 
  1644     031A                     	;# 
  1645     0394                     	;# 
  1646     0395                     	;# 
  1647     0396                     	;# 
  1648     039A                     	;# 
  1649     039C                     	;# 
  1650     039D                     	;# 
  1651     039E                     	;# 
  1652     039F                     	;# 
  1653     0415                     	;# 
  1654     0416                     	;# 
  1655     0417                     	;# 
  1656     041C                     	;# 
  1657     041D                     	;# 
  1658     041E                     	;# 
  1659     0FE4                     	;# 
  1660     0FE5                     	;# 
  1661     0FE6                     	;# 
  1662     0FE7                     	;# 
  1663     0FE8                     	;# 
  1664     0FE9                     	;# 
  1665     0FEA                     	;# 
  1666     0FEB                     	;# 
  1667     0FED                     	;# 
  1668     0FEE                     	;# 
  1669     0FEF                     	;_transiente
  1670                           
  1671 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1672     0000                     
  1673 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1674     0000                     
  1675 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1676     0000                     
  1677                           	psect	nvBANK1
  1678     00D4                     __pnvBANK1:
  1679     00D4                     _TMR2_InterruptHandler:
  1680     00D4                     	ds	2
  1681     00D6                     _CCP3_CallBack:
  1682     00D6                     	ds	2
  1683     00D8                     _EUSART_ErrorHandler:
  1684     00D8                     	ds	2
  1685     00DA                     _EUSART_OverrunErrorHandler:
  1686     00DA                     	ds	2
  1687     00DC                     _EUSART_FramingErrorHandler:
  1688     00DC                     	ds	2
  1689     00DE                     _TMR0_InterruptHandler:
  1690     00DE                     	ds	2
  1691     001C                     _T2CONbits	set	28
  1692     001C                     _T2CON	set	28
  1693     001A                     _TMR2	set	26
  1694     001B                     _PR2	set	27
  1695     000D                     _PORTBbits	set	13
  1696     0019                     _T1GCONbits	set	25
  1697     0018                     _T1CONbits	set	24
  1698     0018                     _T1CON	set	24
  1699     0016                     _TMR1L	set	22
  1700     0017                     _TMR1H	set	23
  1701     0019                     _T1GCON	set	25
  1702     0015                     _TMR0	set	21
  1703     0011                     _PIR1bits	set	17
  1704     0013                     _PIR3bits	set	19
  1705     000B                     _INTCONbits	set	11
  1706     0097                     _WDTCON	set	151
  1707     0098                     _OSCTUNE	set	152
  1708     0099                     _OSCCON	set	153
  1709     0095                     _OPTION_REG	set	149
  1710     0095                     _OPTION_REGbits	set	149
  1711     008D                     _TRISB	set	141
  1712     008C                     _TRISA	set	140
  1713     0091                     _PIE1bits	set	145
  1714     0093                     _PIE3bits	set	147
  1715     010D                     _LATBbits	set	269
  1716     0116                     _BORCON	set	278
  1717     011E                     _APFCON1	set	286
  1718     011D                     _APFCON0	set	285
  1719     010D                     _LATB	set	269
  1720     010C                     _LATA	set	268
  1721     019A                     _TXREG	set	410
  1722     0199                     _RCREG	set	409
  1723     019D                     _RCSTAbits	set	413
  1724     019E                     _TXSTAbits	set	414
  1725     019C                     _SPBRGH	set	412
  1726     019B                     _SPBRGL	set	411
  1727     019E                     _TXSTA	set	414
  1728     019D                     _RCSTA	set	413
  1729     019F                     _BAUDCON	set	415
  1730     018C                     _ANSELA	set	396
  1731     018D                     _ANSELB	set	397
  1732     020C                     _WPUA	set	524
  1733     020D                     _WPUB	set	525
  1734     0312                     _CCPR3H	set	786
  1735     0311                     _CCPR3L	set	785
  1736     0313                     _CCP3CON	set	787
  1737                           
  1738                           	psect	stringtext1
  1739     060D                     __pstringtext1:
  1740     060D                     STR_1:
  1741     060D  3425               	retlw	37	;'%'
  1742     060E  3464               	retlw	100	;'d'
  1743     060F  3420               	retlw	32	;' '
  1744     0610  3400               	retlw	0
  1745                           
  1746                           	psect	stringtext2
  1747     0000                     __pstringtext2:
  1748                           
  1749                           	psect	cinit
  1750     0036                     start_initialization:	
  1751                           ; #config settings
  1752                           
  1753     0036                     __initialization:	;BIGRAM
  1754                           
  1755                           ; Clear objects allocated to BIGRAM
  1756     0036  300C               	movlw	low (0+8460)
  1757     0037  0084               	movwf	4
  1758     0038  3021               	movlw	high (0+8460)
  1759     0039  0085               	movwf	5
  1760     003A  3064               	movlw	100
  1761     003B  00FE               	movwf	btemp
  1762     003C  3000               	movlw	0
  1763     003D  00FF               	movwf	btemp+1
  1764     003E  3185  25B3  3180   	fcall	clear_ram0
  1765                           
  1766                           ; Clear objects allocated to COMMON
  1767     0041  01F0               	clrf	__pbssCOMMON& (0+127)
  1768     0042  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1769     0043  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1770     0044  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1771     0045  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1772     0046  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1773     0047  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1774                           
  1775                           ; Clear objects allocated to BANK0
  1776     0048  0020               	movlb	0	; select bank0
  1777     0049  01EC               	clrf	__pbssBANK0& (0+127)
  1778     004A  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  1779     004B  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  1780     004C  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  1781                           
  1782                           ; Clear objects allocated to BANK1
  1783     004D  30A0               	movlw	low __pbssBANK1
  1784     004E  0084               	movwf	4
  1785     004F  3000               	movlw	high __pbssBANK1
  1786     0050  0085               	movwf	5
  1787     0051  3034               	movlw	52
  1788     0052  00FE               	movwf	btemp
  1789     0053  3000               	movlw	0
  1790     0054  00FF               	movwf	btemp+1
  1791     0055  3185  25B3  3180   	fcall	clear_ram0
  1792     0058                     end_of_initialization:	
  1793                           ;End of C runtime variable initialization code
  1794                           
  1795     0058                     __end_of__initialization:
  1796     0058  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1797     0059  0020               	movlb	0
  1798     005A  3181  2921         	ljmp	_main	;jump to C main() function
  1799                           
  1800                           	psect	bssCOMMON
  1801     0070                     __pbssCOMMON:
  1802     0070                     _i:
  1803     0070                     	ds	2
  1804     0072                     _timer1ReloadVal:
  1805     0072                     	ds	2
  1806     0074                     _flags:
  1807     0074                     	ds	1
  1808     0075                     _flag_startTX:
  1809     0075                     	ds	1
  1810     0076                     _flag_updateT:
  1811     0076                     	ds	1
  1812                           
  1813                           	psect	bssBANK0
  1814     006C                     __pbssBANK0:
  1815     006C                     _flag_capturar:
  1816     006C                     	ds	1
  1817     006D                     _eusartRxLastError:
  1818     006D                     	ds	1
  1819     006E                     _timer0ReloadVal:
  1820     006E                     	ds	1
  1821     006F                     _flag_blink:
  1822     006F                     	ds	1
  1823                           
  1824                           	psect	bssBANK1
  1825     00A0                     __pbssBANK1:
  1826     00A0                     _vel:
  1827     00A0                     	ds	4
  1828     00A4                     _a:
  1829     00A4                     	ds	4
  1830     00A8                     _width:
  1831     00A8                     	ds	2
  1832     00AA                     _prec:
  1833     00AA                     	ds	2
  1834     00AC                     _dir:
  1835     00AC                     	ds	2
  1836     00AE                     _pulses:
  1837     00AE                     	ds	2
  1838     00B0                     _interrupt_count:
  1839     00B0                     	ds	2
  1840     00B2                     _dbuf:
  1841     00B2                     	ds	32
  1842     00D2                     _T:
  1843     00D2                     	ds	2
  1844                           
  1845                           	psect	clrtext
  1846     05B3                     clear_ram0:	
  1847                           ;	Called with FSR0 containing the base address, and
  1848                           ;	btemp/btemp+1 has the size to clear
  1849                           
  1850     05B3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1851     05B4                     clrloop0:
  1852     05B4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1853     05B5  3101               	addfsr 0,1
  1854     05B6  3001               	movlw	1
  1855     05B7  02FE               	subwf	btemp,f
  1856     05B8  3000               	movlw	0
  1857     05B9  3BFF               	subwfb	btemp+1,f
  1858     05BA  087F               	movf	btemp+1,w
  1859     05BB  047E               	iorwf	btemp,w
  1860     05BC  1D03               	skipz
  1861     05BD  2DB4               	goto	clrloop0	;have we reached the end yet?
  1862     05BE  3400               	retlw	0	;all done for this memory range, return
  1863                           
  1864                           	psect	cstackCOMMON
  1865     0077                     __pcstackCOMMON:
  1866     0077                     ?_TMR0_ISR:
  1867     0077                     ?_CCP3_CaptureISR:	
  1868                           ; 1 bytes @ 0x0
  1869                           
  1870     0077                     ?_TMR2_ISR:	
  1871                           ; 1 bytes @ 0x0
  1872                           
  1873     0077                     ??_TMR2_ISR:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876     0077                     ?_TMR0_DefaultInterruptHandler:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879     0077                     ??_TMR0_DefaultInterruptHandler:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882     0077                     ?_OSCILLATOR_Initialize:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885     0077                     ?_WDT_Initialize:	
  1886                           ; 1 bytes @ 0x0
  1887                           
  1888     0077                     ?_CCP3_Initialize:	
  1889                           ; 1 bytes @ 0x0
  1890                           
  1891     0077                     ?_TMR2_Initialize:	
  1892                           ; 1 bytes @ 0x0
  1893                           
  1894     0077                     ?_TMR1_Initialize:	
  1895                           ; 1 bytes @ 0x0
  1896                           
  1897     0077                     ?_EUSART_Initialize:	
  1898                           ; 1 bytes @ 0x0
  1899                           
  1900     0077                     ?_TMR2_DefaultInterruptHandler:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903     0077                     ??_TMR2_DefaultInterruptHandler:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906     0077                     ?_INTERRUPT_InterruptManager:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909     0077                     ?_PIN_MANAGER_Initialize:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912     0077                     ?_TMR0_Initialize:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915     0077                     ?_SYSTEM_Initialize:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918     0077                     ?_EUSART_Write:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921     0077                     ?_putch:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924     0077                     ?_CCP3_DefaultCallBack:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927     0077                     ?_main:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930     0077                     CCP3_DefaultCallBack@capturedValue:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933                           
  1934                           ; 2 bytes @ 0x0
  1935     0077                     	ds	1
  1936     0078                     ??_TMR0_ISR:
  1937                           
  1938                           ; 1 bytes @ 0x1
  1939     0078                     	ds	1
  1940     0079                     ??_CCP3_DefaultCallBack:
  1941                           
  1942                           ; 1 bytes @ 0x2
  1943     0079                     	ds	3
  1944     007C                     ??_CCP3_CaptureISR:
  1945     007C                     CCP3_CaptureISR@module:	
  1946                           ; 1 bytes @ 0x5
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x5
  1950     007C                     	ds	2
  1951     007E                     ??_INTERRUPT_InterruptManager:
  1952                           
  1953                           	psect	cstackBANK0
  1954     0020                     __pcstackBANK0:	
  1955                           ; 1 bytes @ 0x7
  1956                           
  1957     0020                     ?_TMR0_SetInterruptHandler:
  1958     0020                     ??_OSCILLATOR_Initialize:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0020                     ??_WDT_Initialize:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0020                     ??_TMR1_Initialize:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0020                     ?_EUSART_SetFramingErrorHandler:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0020                     ?_EUSART_SetOverrunErrorHandler:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0020                     ?_EUSART_SetErrorHandler:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0020                     ?_CCP3_SetCallBack:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0020                     ?_TMR2_SetInterruptHandler:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0020                     ??_PIN_MANAGER_Initialize:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0020                     ??_EUSART_Write:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0020                     ?___awdiv:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991     0020                     ?___awmod:	
  1992                           ; 2 bytes @ 0x0
  1993                           
  1994     0020                     ?___aldiv:	
  1995                           ; 2 bytes @ 0x0
  1996                           
  1997     0020                     EUSART_Write@txData:	
  1998                           ; 4 bytes @ 0x0
  1999                           
  2000     0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2004                           ; 2 bytes @ 0x0
  2005                           
  2006     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2007                           ; 2 bytes @ 0x0
  2008                           
  2009     0020                     EUSART_SetErrorHandler@interruptHandler:	
  2010                           ; 2 bytes @ 0x0
  2011                           
  2012     0020                     CCP3_SetCallBack@customCallBack:	
  2013                           ; 2 bytes @ 0x0
  2014                           
  2015     0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  2016                           ; 2 bytes @ 0x0
  2017                           
  2018     0020                     ___awdiv@divisor:	
  2019                           ; 2 bytes @ 0x0
  2020                           
  2021     0020                     ___awmod@divisor:	
  2022                           ; 2 bytes @ 0x0
  2023                           
  2024     0020                     ___aldiv@divisor:	
  2025                           ; 2 bytes @ 0x0
  2026                           
  2027                           
  2028                           ; 4 bytes @ 0x0
  2029     0020                     	ds	1
  2030     0021                     ??_putch:
  2031     0021                     putch@txData:	
  2032                           ; 1 bytes @ 0x1
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0x1
  2036     0021                     	ds	1
  2037     0022                     ??_TMR0_SetInterruptHandler:
  2038     0022                     ??_CCP3_Initialize:	
  2039                           ; 1 bytes @ 0x2
  2040                           
  2041     0022                     ??_TMR2_Initialize:	
  2042                           ; 1 bytes @ 0x2
  2043                           
  2044     0022                     ??_EUSART_Initialize:	
  2045                           ; 1 bytes @ 0x2
  2046                           
  2047     0022                     ??_EUSART_SetFramingErrorHandler:	
  2048                           ; 1 bytes @ 0x2
  2049                           
  2050     0022                     ??_EUSART_SetOverrunErrorHandler:	
  2051                           ; 1 bytes @ 0x2
  2052                           
  2053     0022                     ??_EUSART_SetErrorHandler:	
  2054                           ; 1 bytes @ 0x2
  2055                           
  2056     0022                     ??_CCP3_SetCallBack:	
  2057                           ; 1 bytes @ 0x2
  2058                           
  2059     0022                     ??_TMR2_SetInterruptHandler:	
  2060                           ; 1 bytes @ 0x2
  2061                           
  2062     0022                     ??_TMR0_Initialize:	
  2063                           ; 1 bytes @ 0x2
  2064                           
  2065     0022                     ??_SYSTEM_Initialize:	
  2066                           ; 1 bytes @ 0x2
  2067                           
  2068     0022                     ?_fputc:	
  2069                           ; 1 bytes @ 0x2
  2070                           
  2071     0022                     ___awdiv@dividend:	
  2072                           ; 2 bytes @ 0x2
  2073                           
  2074     0022                     ___awmod@dividend:	
  2075                           ; 2 bytes @ 0x2
  2076                           
  2077     0022                     fputc@c:	
  2078                           ; 2 bytes @ 0x2
  2079                           
  2080                           
  2081                           ; 2 bytes @ 0x2
  2082     0022                     	ds	2
  2083     0024                     ??___awdiv:
  2084     0024                     ??___awmod:	
  2085                           ; 1 bytes @ 0x4
  2086                           
  2087     0024                     fputc@fp:	
  2088                           ; 1 bytes @ 0x4
  2089                           
  2090     0024                     ___aldiv@dividend:	
  2091                           ; 2 bytes @ 0x4
  2092                           
  2093                           
  2094                           ; 4 bytes @ 0x4
  2095     0024                     	ds	1
  2096     0025                     ___awdiv@counter:
  2097     0025                     ___awmod@counter:	
  2098                           ; 1 bytes @ 0x5
  2099                           
  2100                           
  2101                           ; 1 bytes @ 0x5
  2102     0025                     	ds	1
  2103     0026                     ??_fputc:
  2104     0026                     ___awdiv@sign:	
  2105                           ; 1 bytes @ 0x6
  2106                           
  2107     0026                     ___awmod@sign:	
  2108                           ; 1 bytes @ 0x6
  2109                           
  2110                           
  2111                           ; 1 bytes @ 0x6
  2112     0026                     	ds	1
  2113     0027                     ?_abs:
  2114     0027                     ___awdiv@quotient:	
  2115                           ; 2 bytes @ 0x7
  2116                           
  2117     0027                     abs@a:	
  2118                           ; 2 bytes @ 0x7
  2119                           
  2120                           
  2121                           ; 2 bytes @ 0x7
  2122     0027                     	ds	1
  2123     0028                     ??___aldiv:
  2124                           
  2125                           ; 1 bytes @ 0x8
  2126     0028                     	ds	1
  2127     0029                     ??_abs:
  2128     0029                     ___aldiv@counter:	
  2129                           ; 1 bytes @ 0x9
  2130                           
  2131                           
  2132                           ; 1 bytes @ 0x9
  2133     0029                     	ds	1
  2134     002A                     ___aldiv@sign:
  2135                           
  2136                           ; 1 bytes @ 0xA
  2137     002A                     	ds	1
  2138     002B                     ?_fputs:
  2139     002B                     fputs@fp:	
  2140                           ; 2 bytes @ 0xB
  2141                           
  2142     002B                     ___aldiv@quotient:	
  2143                           ; 2 bytes @ 0xB
  2144                           
  2145                           
  2146                           ; 4 bytes @ 0xB
  2147     002B                     	ds	2
  2148     002D                     ??_fputs:
  2149                           
  2150                           ; 1 bytes @ 0xD
  2151     002D                     	ds	2
  2152     002F                     fputs@s:
  2153                           
  2154                           ; 1 bytes @ 0xF
  2155     002F                     	ds	1
  2156     0030                     fputs@c:
  2157                           
  2158                           ; 1 bytes @ 0x10
  2159     0030                     	ds	1
  2160     0031                     fputs@i:
  2161                           
  2162                           ; 2 bytes @ 0x11
  2163     0031                     	ds	2
  2164     0033                     ?_pad:
  2165     0033                     pad@fp:	
  2166                           ; 1 bytes @ 0x13
  2167                           
  2168                           
  2169                           ; 2 bytes @ 0x13
  2170     0033                     	ds	2
  2171     0035                     pad@buf:
  2172                           
  2173                           ; 1 bytes @ 0x15
  2174     0035                     	ds	1
  2175     0036                     pad@p:
  2176                           
  2177                           ; 2 bytes @ 0x16
  2178     0036                     	ds	2
  2179     0038                     ??_pad:
  2180                           
  2181                           ; 1 bytes @ 0x18
  2182     0038                     	ds	1
  2183     0039                     pad@i:
  2184                           
  2185                           ; 2 bytes @ 0x19
  2186     0039                     	ds	2
  2187     003B                     pad@w:
  2188                           
  2189                           ; 2 bytes @ 0x1B
  2190     003B                     	ds	2
  2191     003D                     ?_dtoa:
  2192     003D                     dtoa@fp:	
  2193                           ; 1 bytes @ 0x1D
  2194                           
  2195                           
  2196                           ; 2 bytes @ 0x1D
  2197     003D                     	ds	2
  2198     003F                     dtoa@d:
  2199                           
  2200                           ; 2 bytes @ 0x1F
  2201     003F                     	ds	2
  2202     0041                     ??_dtoa:
  2203                           
  2204                           ; 1 bytes @ 0x21
  2205     0041                     	ds	1
  2206     0042                     _dtoa$1363:
  2207                           
  2208                           ; 2 bytes @ 0x22
  2209     0042                     	ds	2
  2210     0044                     dtoa@p:
  2211                           
  2212                           ; 2 bytes @ 0x24
  2213     0044                     	ds	2
  2214     0046                     dtoa@w:
  2215                           
  2216                           ; 2 bytes @ 0x26
  2217     0046                     	ds	2
  2218     0048                     dtoa@s:
  2219                           
  2220                           ; 1 bytes @ 0x28
  2221     0048                     	ds	1
  2222     0049                     dtoa@i:
  2223                           
  2224                           ; 2 bytes @ 0x29
  2225     0049                     	ds	2
  2226     004B                     ?_vfpfcnvrt:
  2227     004B                     vfpfcnvrt@fp:	
  2228                           ; 1 bytes @ 0x2B
  2229                           
  2230                           
  2231                           ; 2 bytes @ 0x2B
  2232     004B                     	ds	2
  2233     004D                     vfpfcnvrt@fmt:
  2234                           
  2235                           ; 1 bytes @ 0x2D
  2236     004D                     	ds	1
  2237     004E                     vfpfcnvrt@ap:
  2238                           
  2239                           ; 1 bytes @ 0x2E
  2240     004E                     	ds	1
  2241     004F                     ??_vfpfcnvrt:
  2242                           
  2243                           ; 1 bytes @ 0x2F
  2244     004F                     	ds	4
  2245     0053                     vfpfcnvrt@convarg:
  2246                           
  2247                           ; 4 bytes @ 0x33
  2248     0053                     	ds	4
  2249     0057                     vfpfcnvrt@cp:
  2250                           
  2251                           ; 2 bytes @ 0x37
  2252     0057                     	ds	2
  2253     0059                     ?_vfprintf:
  2254     0059                     vfprintf@fp:	
  2255                           ; 2 bytes @ 0x39
  2256                           
  2257                           
  2258                           ; 2 bytes @ 0x39
  2259     0059                     	ds	2
  2260     005B                     vfprintf@fmt:
  2261                           
  2262                           ; 2 bytes @ 0x3B
  2263     005B                     	ds	2
  2264     005D                     vfprintf@ap:
  2265                           
  2266                           ; 1 bytes @ 0x3D
  2267     005D                     	ds	1
  2268     005E                     ??_vfprintf:
  2269                           
  2270                           ; 1 bytes @ 0x3E
  2271     005E                     	ds	1
  2272     005F                     vfprintf@cfmt:
  2273                           
  2274                           ; 2 bytes @ 0x3F
  2275     005F                     	ds	2
  2276     0061                     ?_printf:
  2277     0061                     printf@fmt:	
  2278                           ; 2 bytes @ 0x41
  2279                           
  2280                           
  2281                           ; 2 bytes @ 0x41
  2282     0061                     	ds	4
  2283     0065                     ??_printf:
  2284     0065                     printf@ap:	
  2285                           ; 1 bytes @ 0x45
  2286                           
  2287                           
  2288                           ; 1 bytes @ 0x45
  2289     0065                     	ds	1
  2290     0066                     ??_main:
  2291                           
  2292                           ; 1 bytes @ 0x46
  2293     0066                     	ds	4
  2294     006A                     main@j:
  2295                           
  2296                           ; 2 bytes @ 0x4A
  2297     006A                     	ds	2
  2298                           
  2299                           	psect	maintext
  2300     0121                     __pmaintext:	
  2301 ;;
  2302 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2303 ;;
  2304 ;; *************** function _main *****************
  2305 ;; Defined at:
  2306 ;;		line 65 in file "main.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  j               2   74[BANK0 ] int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : B1F/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2320 ;;      Params:         0       0       0       0       0       0
  2321 ;;      Locals:         0       2       0       0       0       0
  2322 ;;      Temps:          0       4       0       0       0       0
  2323 ;;      Totals:         0       6       0       0       0       0
  2324 ;;Total ram usage:        6 bytes
  2325 ;; Hardware stack levels required when called: 12
  2326 ;; This function calls:
  2327 ;;		_SYSTEM_Initialize
  2328 ;;		___aldiv
  2329 ;;		_printf
  2330 ;; This function is called by:
  2331 ;;		Startup code after reset
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335     0121                     _main:	
  2336                           ;psect for function _main
  2337                           
  2338     0121                     l2410:	
  2339                           ;incstack = 0
  2340                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2341                           
  2342                           
  2343                           ;main.c: 68:     SYSTEM_Initialize();
  2344     0121  3184  24E1  3181   	fcall	_SYSTEM_Initialize
  2345     0124                     l2412:
  2346                           
  2347                           ;main.c: 74:     (INTCONbits.GIE = 1);
  2348     0124  178B               	bsf	11,7	;volatile
  2349     0125                     l2414:
  2350                           
  2351                           ;main.c: 77:     (INTCONbits.PEIE = 1);
  2352     0125  170B               	bsf	11,6	;volatile
  2353     0126                     l2416:
  2354     0126  0022               	movlb	2	; select bank2
  2355     0127  128D               	bcf	13,5	;volatile
  2356     0128                     l2418:
  2357     0128  120D               	bcf	13,4	;volatile
  2358     0129                     l2420:
  2359                           
  2360                           ;main.c: 89:     {;main.c: 92:          if (flag_blink){
  2361     0129  0020               	movlb	0	; select bank0
  2362     012A  086F               	movf	_flag_blink,w
  2363     012B  1903               	btfsc	3,2
  2364     012C  292E               	goto	u1721
  2365     012D  292F               	goto	u1720
  2366     012E                     u1721:
  2367     012E  2932               	goto	l2424
  2368     012F                     u1720:
  2369     012F                     l2422:
  2370                           
  2371                           ;main.c: 93:              i=0;
  2372     012F  01F0               	clrf	_i
  2373     0130  01F1               	clrf	_i+1
  2374                           
  2375                           ;main.c: 94:              flag_blink=0;
  2376     0131  01EF               	clrf	_flag_blink
  2377     0132                     l2424:
  2378                           
  2379                           ;main.c: 105:             if (flag_capturar && i<50) {
  2380     0132  086C               	movf	_flag_capturar,w
  2381     0133  1903               	btfsc	3,2
  2382     0134  2936               	goto	u1731
  2383     0135  2937               	goto	u1730
  2384     0136                     u1731:
  2385     0136  2995               	goto	l2436
  2386     0137                     u1730:
  2387     0137                     l2426:
  2388     0137  0871               	movf	_i+1,w
  2389     0138  3A80               	xorlw	128
  2390     0139  00E6               	movwf	??_main
  2391     013A  3080               	movlw	128
  2392     013B  0266               	subwf	??_main,w
  2393     013C  1D03               	skipz
  2394     013D  2940               	goto	u1745
  2395     013E  3032               	movlw	50
  2396     013F  0270               	subwf	_i,w
  2397     0140                     u1745:
  2398     0140  1803               	skipnc
  2399     0141  2943               	goto	u1741
  2400     0142  2944               	goto	u1740
  2401     0143                     u1741:
  2402     0143  2995               	goto	l2436
  2403     0144                     u1740:
  2404     0144                     l2428:
  2405                           
  2406                           ;main.c: 106:                 flag_capturar=0;
  2407     0144  0020               	movlb	0	; select bank0
  2408     0145  01EC               	clrf	_flag_capturar
  2409     0146                     l2430:
  2410                           
  2411                           ;main.c: 108:                 vel = (long) ((long) 2 * 314159200) / (T * (long) 32);
  2412     0146  0021               	movlb	1	; select bank1
  2413     0147  0852               	movf	_T^(0+128),w
  2414     0148  0020               	movlb	0	; select bank0
  2415     0149  00E6               	movwf	??_main
  2416     014A  0021               	movlb	1	; select bank1
  2417     014B  0853               	movf	(_T+1)^(0+128),w
  2418     014C  0020               	movlb	0	; select bank0
  2419     014D  00E7               	movwf	??_main+1
  2420     014E  01E8               	clrf	??_main+2
  2421     014F  01E9               	clrf	??_main+3
  2422     0150  3005               	movlw	5
  2423     0151                     u1755:
  2424     0151  35E6               	lslf	??_main,f
  2425     0152  0DE7               	rlf	??_main+1,f
  2426     0153  0DE8               	rlf	??_main+2,f
  2427     0154  0DE9               	rlf	??_main+3,f
  2428     0155                     u1750:
  2429     0155  0B89               	decfsz	9,f
  2430     0156  2951               	goto	u1755
  2431     0157  0869               	movf	??_main+3,w
  2432     0158  00A3               	movwf	___aldiv@divisor+3
  2433     0159  0868               	movf	??_main+2,w
  2434     015A  00A2               	movwf	___aldiv@divisor+2
  2435     015B  0867               	movf	??_main+1,w
  2436     015C  00A1               	movwf	___aldiv@divisor+1
  2437     015D  0866               	movf	??_main,w
  2438     015E  00A0               	movwf	___aldiv@divisor
  2439     015F  3025               	movlw	37
  2440     0160  00A7               	movwf	___aldiv@dividend+3
  2441     0161  3073               	movlw	115
  2442     0162  00A6               	movwf	___aldiv@dividend+2
  2443     0163  3060               	movlw	96
  2444     0164  00A5               	movwf	___aldiv@dividend+1
  2445     0165  30C0               	movlw	192
  2446     0166  00A4               	movwf	___aldiv@dividend
  2447     0167  3181  21C9  3181   	fcall	___aldiv
  2448     016A  0020               	movlb	0	; select bank0
  2449     016B  0823               	movf	?___aldiv+3,w
  2450     016C  0021               	movlb	1	; select bank1
  2451     016D  00A3               	movwf	(_vel+3)^(0+128)
  2452     016E  0020               	movlb	0	; select bank0
  2453     016F  0822               	movf	?___aldiv+2,w
  2454     0170  0021               	movlb	1	; select bank1
  2455     0171  00A2               	movwf	(_vel+2)^(0+128)
  2456     0172  0020               	movlb	0	; select bank0
  2457     0173  0821               	movf	?___aldiv+1,w
  2458     0174  0021               	movlb	1	; select bank1
  2459     0175  00A1               	movwf	(_vel+1)^(0+128)
  2460     0176  0020               	movlb	0	; select bank0
  2461     0177  0820               	movf	?___aldiv,w
  2462     0178  0021               	movlb	1	; select bank1
  2463     0179  00A0               	movwf	_vel^(0+128)
  2464     017A                     l2432:
  2465                           
  2466                           ;main.c: 109:                 transiente[i]=vel;
  2467     017A  0871               	movf	_i+1,w
  2468     017B  0020               	movlb	0	; select bank0
  2469     017C  00E7               	movwf	??_main+1
  2470     017D  0870               	movf	_i,w
  2471     017E  00E6               	movwf	??_main
  2472     017F  35E6               	lslf	??_main,f
  2473     0180  0DE7               	rlf	??_main+1,f
  2474     0181  300C               	movlw	12
  2475     0182  00E8               	movwf	??_main+2
  2476     0183  3021               	movlw	33
  2477     0184  00E9               	movwf	??_main+3
  2478     0185  0866               	movf	??_main,w
  2479     0186  0768               	addwf	??_main+2,w
  2480     0187  0086               	movwf	6
  2481     0188  0867               	movf	??_main+1,w
  2482     0189  3D69               	addwfc	??_main+3,w
  2483     018A  0087               	movwf	7
  2484     018B  0021               	movlb	1	; select bank1
  2485     018C  0820               	movf	_vel^(0+128),w
  2486     018D  3FC0               	movwi [0]fsr1
  2487     018E  0821               	movf	(_vel+1)^(0+128),w
  2488     018F  3FC1               	movwi [1]fsr1
  2489     0190                     l2434:
  2490                           
  2491                           ;main.c: 111:                 i++;
  2492     0190  3001               	movlw	1
  2493     0191  07F0               	addwf	_i,f
  2494     0192  3000               	movlw	0
  2495     0193  3DF1               	addwfc	_i+1,f
  2496                           
  2497                           ;main.c: 113:             }
  2498     0194  2929               	goto	l2420
  2499     0195                     l2436:
  2500     0195  3032               	movlw	50
  2501     0196  0670               	xorwf	_i,w
  2502     0197  0471               	iorwf	_i+1,w
  2503     0198  1D03               	btfss	3,2
  2504     0199  299B               	goto	u1761
  2505     019A  299C               	goto	u1760
  2506     019B                     u1761:
  2507     019B  2929               	goto	l2420
  2508     019C                     u1760:
  2509     019C                     l2438:
  2510                           
  2511                           ;main.c: 115:                 for(int j=0; j++; j<50){
  2512     019C  0020               	movlb	0	; select bank0
  2513     019D  01EA               	clrf	main@j
  2514     019E  01EB               	clrf	main@j+1
  2515     019F  29BB               	goto	l2442
  2516     01A0                     l2440:
  2517                           
  2518                           ;main.c: 116:                      printf("%d ", transiente[j]);
  2519     01A0  300D               	movlw	low (STR_1| (0+32768))
  2520     01A1  00E1               	movwf	printf@fmt
  2521     01A2  3086               	movlw	high (STR_1| (0+32768))
  2522     01A3  00E2               	movwf	printf@fmt+1
  2523     01A4  086B               	movf	main@j+1,w
  2524     01A5  00E7               	movwf	??_main+1
  2525     01A6  086A               	movf	main@j,w
  2526     01A7  00E6               	movwf	??_main
  2527     01A8  35E6               	lslf	??_main,f
  2528     01A9  0DE7               	rlf	??_main+1,f
  2529     01AA  300C               	movlw	12
  2530     01AB  00E8               	movwf	??_main+2
  2531     01AC  3021               	movlw	33
  2532     01AD  00E9               	movwf	??_main+3
  2533     01AE  0866               	movf	??_main,w
  2534     01AF  0768               	addwf	??_main+2,w
  2535     01B0  0086               	movwf	6
  2536     01B1  0867               	movf	??_main+1,w
  2537     01B2  3D69               	addwfc	??_main+3,w
  2538     01B3  0087               	movwf	7
  2539     01B4  3F40               	moviw [0]fsr1
  2540     01B5  00E3               	movwf	?_printf+2
  2541     01B6  3F41               	moviw [1]fsr1
  2542     01B7  00E4               	movwf	?_printf+3
  2543     01B8  3185  2586  3181   	fcall	_printf
  2544     01BB                     l2442:
  2545     01BB  3001               	movlw	1
  2546     01BC  0020               	movlb	0	; select bank0
  2547     01BD  07EA               	addwf	main@j,f
  2548     01BE  3000               	movlw	0
  2549     01BF  3DEB               	addwfc	main@j+1,f
  2550     01C0  036A               	decf	main@j,w
  2551     01C1  046B               	iorwf	main@j+1,w
  2552     01C2  1D03               	btfss	3,2
  2553     01C3  29C5               	goto	u1771
  2554     01C4  29C6               	goto	u1770
  2555     01C5                     u1771:
  2556     01C5  29A0               	goto	l2440
  2557     01C6                     u1770:
  2558     01C6  2929               	goto	l2420
  2559     01C7  3180  2834         	ljmp	start
  2560     01C9                     __end_of_main:
  2561                           
  2562                           	psect	text1
  2563     0586                     __ptext1:	
  2564 ;; *************** function _printf *****************
  2565 ;; Defined at:
  2566 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  fmt             2   65[BANK0 ] PTR const unsigned char 
  2569 ;;		 -> STR_1(4), 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  ret             2    0        int 
  2572 ;;  ap              1   69[BANK0 ] PTR void [1]
  2573 ;;		 -> ?_printf(2), 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2   65[BANK0 ] int 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2583 ;;      Params:         0       4       0       0       0       0
  2584 ;;      Locals:         0       1       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0
  2586 ;;      Totals:         0       5       0       0       0       0
  2587 ;;Total ram usage:        5 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 11
  2590 ;; This function calls:
  2591 ;;		_vfprintf
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597     0586                     _printf:	
  2598                           ;psect for function _printf
  2599                           
  2600     0586                     l2290:	
  2601                           ;incstack = 0
  2602                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2603                           
  2604     0586  3063               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2605     0587  0020               	movlb	0	; select bank0
  2606     0588  00E5               	movwf	printf@ap
  2607     0589                     l2292:
  2608     0589  3000               	movlw	0
  2609     058A  00D9               	movwf	vfprintf@fp
  2610     058B  00DA               	movwf	vfprintf@fp+1
  2611     058C  0862               	movf	printf@fmt+1,w
  2612     058D  00DC               	movwf	vfprintf@fmt+1
  2613     058E  0861               	movf	printf@fmt,w
  2614     058F  00DB               	movwf	vfprintf@fmt
  2615     0590  3065               	movlw	(low (printf@ap| 0))& (0+255)
  2616     0591  00DD               	movwf	vfprintf@ap
  2617     0592  3184  24A7  3185   	fcall	_vfprintf
  2618     0595                     l1027:
  2619     0595  0008               	return
  2620     0596                     __end_of_printf:
  2621                           
  2622                           	psect	text2
  2623     04A7                     __ptext2:	
  2624 ;; *************** function _vfprintf *****************
  2625 ;; Defined at:
  2626 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  2629 ;;		 -> NULL(0), 
  2630 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  2631 ;;		 -> STR_1(4), 
  2632 ;;  ap              1   61[BANK0 ] PTR PTR void 
  2633 ;;		 -> printf@ap(1), 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  cfmt            2   63[BANK0 ] PTR unsigned char 
  2636 ;;		 -> STR_1(4), 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2   57[BANK0 ] int 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2646 ;;      Params:         0       5       0       0       0       0
  2647 ;;      Locals:         0       2       0       0       0       0
  2648 ;;      Temps:          0       1       0       0       0       0
  2649 ;;      Totals:         0       8       0       0       0       0
  2650 ;;Total ram usage:        8 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 10
  2653 ;; This function calls:
  2654 ;;		_vfpfcnvrt
  2655 ;; This function is called by:
  2656 ;;		_printf
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660     04A7                     _vfprintf:	
  2661                           ;psect for function _vfprintf
  2662                           
  2663     04A7                     l2278:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2666                           
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2669     04A7  0020               	movlb	0	; select bank0
  2670     04A8  085C               	movf	vfprintf@fmt+1,w
  2671     04A9  00E0               	movwf	vfprintf@cfmt+1
  2672     04AA  085B               	movf	vfprintf@fmt,w
  2673     04AB  00DF               	movwf	vfprintf@cfmt
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2676     04AC  2CB8               	goto	l2282
  2677     04AD                     l2280:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2680     04AD  085A               	movf	vfprintf@fp+1,w
  2681     04AE  00CC               	movwf	vfpfcnvrt@fp+1
  2682     04AF  0859               	movf	vfprintf@fp,w
  2683     04B0  00CB               	movwf	vfpfcnvrt@fp
  2684     04B1  305F               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2685     04B2  00CD               	movwf	vfpfcnvrt@fmt
  2686     04B3  085D               	movf	vfprintf@ap,w
  2687     04B4  00CE               	movwf	vfpfcnvrt@ap
  2688     04B5  3182  2259  3184   	fcall	_vfpfcnvrt
  2689     04B8                     l2282:
  2690                           
  2691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2692     04B8  0020               	movlb	0	; select bank0
  2693     04B9  085F               	movf	vfprintf@cfmt,w
  2694     04BA  0084               	movwf	4
  2695     04BB  0860               	movf	vfprintf@cfmt+1,w
  2696     04BC  0085               	movwf	5
  2697     04BD  0012               	moviw fsr0++
  2698     04BE  1D03               	btfss	3,2
  2699     04BF  2CC1               	goto	u1451
  2700     04C0  2CC2               	goto	u1450
  2701     04C1                     u1451:
  2702     04C1  2CAD               	goto	l2280
  2703     04C2                     u1450:
  2704     04C2                     l2284:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2707     04C2  01D9               	clrf	?_vfprintf
  2708     04C3  01DA               	clrf	?_vfprintf+1
  2709     04C4                     l1085:
  2710     04C4  0008               	return
  2711     04C5                     __end_of_vfprintf:
  2712                           
  2713                           	psect	text3
  2714     0259                     __ptext3:	
  2715 ;; *************** function _vfpfcnvrt *****************
  2716 ;; Defined at:
  2717 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  fp              2   43[BANK0 ] PTR struct _IO_FILE
  2720 ;;		 -> NULL(0), 
  2721 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  2722 ;;		 -> vfprintf@cfmt(2), 
  2723 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2724 ;;		 -> printf@ap(1), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  convarg         4   51[BANK0 ] struct .
  2727 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  2728 ;;		 -> STR_1(4), 
  2729 ;;  i               2    0        int 
  2730 ;;  done            2    0        int 
  2731 ;;  c               1    0        unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2741 ;;      Params:         0       4       0       0       0       0
  2742 ;;      Locals:         0       6       0       0       0       0
  2743 ;;      Temps:          0       4       0       0       0       0
  2744 ;;      Totals:         0      14       0       0       0       0
  2745 ;;Total ram usage:       14 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 9
  2748 ;; This function calls:
  2749 ;;		_dtoa
  2750 ;;		_fputc
  2751 ;; This function is called by:
  2752 ;;		_vfprintf
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     0259                     _vfpfcnvrt:	
  2757                           ;psect for function _vfpfcnvrt
  2758                           
  2759     0259                     l2164:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2762                           
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2765     0259  0020               	movlb	0	; select bank0
  2766     025A  084D               	movf	vfpfcnvrt@fmt,w
  2767     025B  0086               	movwf	6
  2768     025C  0187               	clrf	7
  2769     025D  3F40               	moviw [0]fsr1
  2770     025E  00CF               	movwf	??_vfpfcnvrt
  2771     025F  3F41               	moviw [1]fsr1
  2772     0260  00D0               	movwf	??_vfpfcnvrt+1
  2773     0261  084F               	movf	??_vfpfcnvrt,w
  2774     0262  0084               	movwf	4
  2775     0263  0850               	movf	??_vfpfcnvrt+1,w
  2776     0264  0085               	movwf	5
  2777     0265  0012               	moviw fsr0++
  2778     0266  3A25               	xorlw	37
  2779     0267  1D03               	btfss	3,2
  2780     0268  2A6A               	goto	u1421
  2781     0269  2A6B               	goto	u1420
  2782     026A                     u1421:
  2783     026A  2ACA               	goto	l2190
  2784     026B                     u1420:
  2785     026B                     l2166:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2788     026B  084D               	movf	vfpfcnvrt@fmt,w
  2789     026C  0086               	movwf	6
  2790     026D  0187               	clrf	7
  2791     026E  3001               	movlw	1
  2792     026F  0781               	addwf	1,f
  2793     0270  3141               	addfsr 1,1
  2794     0271  1803               	skipnc
  2795     0272  0A81               	incf	1,f
  2796     0273                     l2168:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2799     0273  0021               	movlb	1	; select bank1
  2800     0274  01A8               	clrf	_width^(0+128)
  2801     0275  01A9               	clrf	(_width+1)^(0+128)
  2802     0276  1003               	clrc
  2803     0277  3000               	movlw	0
  2804     0278  1803               	btfsc	3,0
  2805     0279  3001               	movlw	1
  2806     027A  00F4               	movwf	_flags
  2807     027B                     l2170:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2810     027B  30FF               	movlw	255
  2811     027C  00AA               	movwf	_prec^(0+128)
  2812     027D  30FF               	movlw	255
  2813     027E  00AB               	movwf	(_prec^(0+128)+1)
  2814     027F                     l2172:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2817     027F  0020               	movlb	0	; select bank0
  2818     0280  084D               	movf	vfpfcnvrt@fmt,w
  2819     0281  0086               	movwf	6
  2820     0282  0187               	clrf	7
  2821     0283  3F40               	moviw [0]fsr1
  2822     0284  00D7               	movwf	vfpfcnvrt@cp
  2823     0285  3F41               	moviw [1]fsr1
  2824     0286  00D8               	movwf	vfpfcnvrt@cp+1
  2825     0287                     l2174:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2828     0287  0857               	movf	vfpfcnvrt@cp,w
  2829     0288  0084               	movwf	4
  2830     0289  0858               	movf	vfpfcnvrt@cp+1,w
  2831     028A  0085               	movwf	5
  2832     028B  0012               	moviw fsr0++
  2833     028C  3A64               	xorlw	100
  2834     028D  1903               	btfsc	3,2
  2835     028E  2A90               	goto	u1431
  2836     028F  2A91               	goto	u1430
  2837     0290                     u1431:
  2838     0290  2A9B               	goto	l2178
  2839     0291                     u1430:
  2840     0291                     l2176:
  2841     0291  0857               	movf	vfpfcnvrt@cp,w
  2842     0292  0084               	movwf	4
  2843     0293  0858               	movf	vfpfcnvrt@cp+1,w
  2844     0294  0085               	movwf	5
  2845     0295  0012               	moviw fsr0++
  2846     0296  3A69               	xorlw	105
  2847     0297  1D03               	btfss	3,2
  2848     0298  2A9A               	goto	u1441
  2849     0299  2A9B               	goto	u1440
  2850     029A                     u1441:
  2851     029A  2AC0               	goto	l2186
  2852     029B                     u1440:
  2853     029B                     l2178:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2856     029B  084E               	movf	vfpfcnvrt@ap,w
  2857     029C  0086               	movwf	6
  2858     029D  0187               	clrf	7
  2859     029E  0801               	movf	1,w
  2860     029F  0084               	movwf	4
  2861     02A0  0185               	clrf	5
  2862     02A1  3002               	movlw	2
  2863     02A2  0781               	addwf	1,f
  2864     02A3  3F00               	moviw [0]fsr0
  2865     02A4  00D3               	movwf	vfpfcnvrt@convarg
  2866     02A5  3F01               	moviw [1]fsr0
  2867     02A6  00D4               	movwf	vfpfcnvrt@convarg+1
  2868     02A7                     l2180:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2871     02A7  0857               	movf	vfpfcnvrt@cp,w
  2872     02A8  3E01               	addlw	1
  2873     02A9  00CF               	movwf	??_vfpfcnvrt
  2874     02AA  3000               	movlw	0
  2875     02AB  3D58               	addwfc	vfpfcnvrt@cp+1,w
  2876     02AC  00D0               	movwf	??_vfpfcnvrt+1
  2877     02AD  084D               	movf	vfpfcnvrt@fmt,w
  2878     02AE  0086               	movwf	6
  2879     02AF  0187               	clrf	7
  2880     02B0  084F               	movf	??_vfpfcnvrt,w
  2881     02B1  3FC0               	movwi [0]fsr1
  2882     02B2  0850               	movf	??_vfpfcnvrt+1,w
  2883     02B3  3FC1               	movwi [1]fsr1
  2884     02B4                     l2182:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2887     02B4  084C               	movf	vfpfcnvrt@fp+1,w
  2888     02B5  00BE               	movwf	dtoa@fp+1
  2889     02B6  084B               	movf	vfpfcnvrt@fp,w
  2890     02B7  00BD               	movwf	dtoa@fp
  2891     02B8  0854               	movf	vfpfcnvrt@convarg+1,w
  2892     02B9  00C0               	movwf	dtoa@d+1
  2893     02BA  0853               	movf	vfpfcnvrt@convarg,w
  2894     02BB  00BF               	movwf	dtoa@d
  2895     02BC  3180  205C  3182   	fcall	_dtoa
  2896     02BF  2AE4               	goto	l1079
  2897     02C0                     l2186:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2900     02C0  0020               	movlb	0	; select bank0
  2901     02C1  084D               	movf	vfpfcnvrt@fmt,w
  2902     02C2  0086               	movwf	6
  2903     02C3  0187               	clrf	7
  2904     02C4  3001               	movlw	1
  2905     02C5  0781               	addwf	1,f
  2906     02C6  3141               	addfsr 1,1
  2907     02C7  1803               	skipnc
  2908     02C8  0A81               	incf	1,f
  2909     02C9  2AE4               	goto	l1079
  2910     02CA                     l2190:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2913     02CA  084D               	movf	vfpfcnvrt@fmt,w
  2914     02CB  0086               	movwf	6
  2915     02CC  0187               	clrf	7
  2916     02CD  3F40               	moviw [0]fsr1
  2917     02CE  00CF               	movwf	??_vfpfcnvrt
  2918     02CF  3F41               	moviw [1]fsr1
  2919     02D0  00D0               	movwf	??_vfpfcnvrt+1
  2920     02D1  084F               	movf	??_vfpfcnvrt,w
  2921     02D2  0084               	movwf	4
  2922     02D3  0850               	movf	??_vfpfcnvrt+1,w
  2923     02D4  0085               	movwf	5
  2924     02D5  0800               	movf	0,w	;code access
  2925     02D6  00D1               	movwf	??_vfpfcnvrt+2
  2926     02D7  01D2               	clrf	??_vfpfcnvrt+3
  2927     02D8  0851               	movf	??_vfpfcnvrt+2,w
  2928     02D9  00A2               	movwf	fputc@c
  2929     02DA  0852               	movf	??_vfpfcnvrt+3,w
  2930     02DB  00A3               	movwf	fputc@c+1
  2931     02DC  084C               	movf	vfpfcnvrt@fp+1,w
  2932     02DD  00A5               	movwf	fputc@fp+1
  2933     02DE  084B               	movf	vfpfcnvrt@fp,w
  2934     02DF  00A4               	movwf	fputc@fp
  2935     02E0  3183  2345  3182   	fcall	_fputc
  2936     02E3  2AC0               	goto	l2186
  2937     02E4                     l1079:
  2938     02E4  0008               	return
  2939     02E5                     __end_of_vfpfcnvrt:
  2940                           
  2941                           	psect	text4
  2942     005C                     __ptext4:	
  2943 ;; *************** function _dtoa *****************
  2944 ;; Defined at:
  2945 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  2948 ;;		 -> NULL(0), 
  2949 ;;  d               2   31[BANK0 ] int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  i               2   41[BANK0 ] int 
  2952 ;;  w               2   38[BANK0 ] int 
  2953 ;;  p               2   36[BANK0 ] int 
  2954 ;;  s               1   40[BANK0 ] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2964 ;;      Params:         0       4       0       0       0       0
  2965 ;;      Locals:         0       9       0       0       0       0
  2966 ;;      Temps:          0       1       0       0       0       0
  2967 ;;      Totals:         0      14       0       0       0       0
  2968 ;;Total ram usage:       14 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 8
  2971 ;; This function calls:
  2972 ;;		___awdiv
  2973 ;;		___awmod
  2974 ;;		_abs
  2975 ;;		_pad
  2976 ;; This function is called by:
  2977 ;;		_vfpfcnvrt
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981     005C                     _dtoa:	
  2982                           ;psect for function _dtoa
  2983                           
  2984     005C                     l2102:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2987                           
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2990     005C  0020               	movlb	0	; select bank0
  2991     005D  1BC0               	btfsc	dtoa@d+1,7
  2992     005E  2860               	goto	u1321
  2993     005F  2862               	goto	u1320
  2994     0060                     u1321:
  2995     0060  3001               	movlw	1
  2996     0061  2863               	goto	u1330
  2997     0062                     u1320:
  2998     0062  3000               	movlw	0
  2999     0063                     u1330:
  3000     0063  00C8               	movwf	dtoa@s
  3001     0064                     l2104:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3004     0064  0848               	movf	dtoa@s,w
  3005     0065  1903               	btfsc	3,2
  3006     0066  2868               	goto	u1341
  3007     0067  2869               	goto	u1340
  3008     0068                     u1341:
  3009     0068  286E               	goto	l2108
  3010     0069                     u1340:
  3011     0069                     l2106:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3014     0069  09BF               	comf	dtoa@d,f
  3015     006A  09C0               	comf	dtoa@d+1,f
  3016     006B  0ABF               	incf	dtoa@d,f
  3017     006C  1903               	skipnz
  3018     006D  0AC0               	incf	dtoa@d+1,f
  3019     006E                     l2108:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3022     006E  0021               	movlb	1	; select bank1
  3023     006F  1FAB               	btfss	(_prec+1)^(0+128),7
  3024     0070  2872               	goto	u1351
  3025     0071  2873               	goto	u1350
  3026     0072                     u1351:
  3027     0072  2879               	goto	l2112
  3028     0073                     u1350:
  3029     0073                     l2110:
  3030     0073  3001               	movlw	1
  3031     0074  0020               	movlb	0	; select bank0
  3032     0075  00C4               	movwf	dtoa@p
  3033     0076  3000               	movlw	0
  3034     0077  00C5               	movwf	dtoa@p+1
  3035     0078  2880               	goto	l1060
  3036     0079                     l2112:
  3037     0079  082B               	movf	(_prec+1)^(0+128),w
  3038     007A  0020               	movlb	0	; select bank0
  3039     007B  00C5               	movwf	dtoa@p+1
  3040     007C  0021               	movlb	1	; select bank1
  3041     007D  082A               	movf	_prec^(0+128),w
  3042     007E  0020               	movlb	0	; select bank0
  3043     007F  00C4               	movwf	dtoa@p
  3044     0080                     l1060:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3047     0080  0021               	movlb	1	; select bank1
  3048     0081  0829               	movf	(_width+1)^(0+128),w
  3049     0082  0020               	movlb	0	; select bank0
  3050     0083  00C7               	movwf	dtoa@w+1
  3051     0084  0021               	movlb	1	; select bank1
  3052     0085  0828               	movf	_width^(0+128),w
  3053     0086  0020               	movlb	0	; select bank0
  3054     0087  00C6               	movwf	dtoa@w
  3055     0088                     l2114:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3058     0088  0848               	movf	dtoa@s,w
  3059     0089  1903               	btfsc	3,2
  3060     008A  288C               	goto	u1361
  3061     008B  288D               	goto	u1360
  3062     008C                     u1361:
  3063     008C  28A1               	goto	l1061
  3064     008D                     u1360:
  3065     008D                     l2116:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3068     008D  30FF               	movlw	255
  3069     008E  07C6               	addwf	dtoa@w,f
  3070     008F  30FF               	movlw	255
  3071     0090  3DC7               	addwfc	dtoa@w+1,f
  3072     0091                     l2118:
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3075     0091  0848               	movf	dtoa@s,w
  3076     0092  1D03               	btfss	3,2
  3077     0093  2895               	goto	u1371
  3078     0094  2896               	goto	u1370
  3079     0095                     u1371:
  3080     0095  289B               	goto	l2122
  3081     0096                     u1370:
  3082     0096                     l2120:
  3083     0096  302B               	movlw	43
  3084     0097  00C2               	movwf	_dtoa$1363
  3085     0098  3000               	movlw	0
  3086     0099  00C3               	movwf	_dtoa$1363+1
  3087     009A  289F               	goto	l1065
  3088     009B                     l2122:
  3089     009B  302D               	movlw	45
  3090     009C  00C2               	movwf	_dtoa$1363
  3091     009D  3000               	movlw	0
  3092     009E  00C3               	movwf	_dtoa$1363+1
  3093     009F                     l1065:
  3094     009F  0842               	movf	_dtoa$1363,w
  3095     00A0  00C8               	movwf	dtoa@s
  3096     00A1                     l1061:	
  3097                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  3098                           
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3101     00A1  301F               	movlw	31
  3102     00A2  00C9               	movwf	dtoa@i
  3103     00A3  3000               	movlw	0
  3104     00A4  00CA               	movwf	dtoa@i+1
  3105     00A5                     l2124:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3108     00A5  0021               	movlb	1	; select bank1
  3109     00A6  01D1               	clrf	(_dbuf^(0+128)+31)
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3112     00A7  28E0               	goto	l2136
  3113     00A8                     l2126:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3116     00A8  30FF               	movlw	255
  3117     00A9  0020               	movlb	0	; select bank0
  3118     00AA  07C9               	addwf	dtoa@i,f
  3119     00AB  30FF               	movlw	255
  3120     00AC  3DCA               	addwfc	dtoa@i+1,f
  3121     00AD                     l2128:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3124     00AD  0849               	movf	dtoa@i,w
  3125     00AE  3EB2               	addlw	(low (_dbuf| 0))& (0+255)
  3126     00AF  0086               	movwf	6
  3127     00B0  0187               	clrf	7
  3128     00B1  300A               	movlw	10
  3129     00B2  00A0               	movwf	___awmod@divisor
  3130     00B3  3000               	movlw	0
  3131     00B4  00A1               	movwf	___awmod@divisor+1
  3132     00B5  0840               	movf	dtoa@d+1,w
  3133     00B6  00A3               	movwf	___awmod@dividend+1
  3134     00B7  083F               	movf	dtoa@d,w
  3135     00B8  00A2               	movwf	___awmod@dividend
  3136     00B9  3183  23A4  3180   	fcall	___awmod
  3137     00BC  0020               	movlb	0	; select bank0
  3138     00BD  0821               	movf	?___awmod+1,w
  3139     00BE  00A8               	movwf	abs@a+1
  3140     00BF  0820               	movf	?___awmod,w
  3141     00C0  00A7               	movwf	abs@a
  3142     00C1  3184  24C5  3180   	fcall	_abs
  3143     00C4  0020               	movlb	0	; select bank0
  3144     00C5  0827               	movf	?_abs,w
  3145     00C6  3E30               	addlw	48
  3146     00C7  0081               	movwf	1
  3147     00C8                     l2130:
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3150     00C8  30FF               	movlw	255
  3151     00C9  07C4               	addwf	dtoa@p,f
  3152     00CA  30FF               	movlw	255
  3153     00CB  3DC5               	addwfc	dtoa@p+1,f
  3154     00CC                     l2132:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3157     00CC  30FF               	movlw	255
  3158     00CD  07C6               	addwf	dtoa@w,f
  3159     00CE  30FF               	movlw	255
  3160     00CF  3DC7               	addwfc	dtoa@w+1,f
  3161     00D0                     l2134:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3164     00D0  300A               	movlw	10
  3165     00D1  00A0               	movwf	___awdiv@divisor
  3166     00D2  3000               	movlw	0
  3167     00D3  00A1               	movwf	___awdiv@divisor+1
  3168     00D4  0840               	movf	dtoa@d+1,w
  3169     00D5  00A3               	movwf	___awdiv@dividend+1
  3170     00D6  083F               	movf	dtoa@d,w
  3171     00D7  00A2               	movwf	___awdiv@dividend
  3172     00D8  3182  22E5  3180   	fcall	___awdiv
  3173     00DB  0020               	movlb	0	; select bank0
  3174     00DC  0821               	movf	?___awdiv+1,w
  3175     00DD  00C0               	movwf	dtoa@d+1
  3176     00DE  0820               	movf	?___awdiv,w
  3177     00DF  00BF               	movwf	dtoa@d
  3178     00E0                     l2136:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3181     00E0  0020               	movlb	0	; select bank0
  3182     00E1  084A               	movf	dtoa@i+1,w
  3183     00E2  3A80               	xorlw	128
  3184     00E3  00C1               	movwf	??_dtoa
  3185     00E4  3080               	movlw	128
  3186     00E5  0241               	subwf	??_dtoa,w
  3187     00E6  1D03               	skipz
  3188     00E7  28EA               	goto	u1385
  3189     00E8  3001               	movlw	1
  3190     00E9  0249               	subwf	dtoa@i,w
  3191     00EA                     u1385:
  3192     00EA  1C03               	skipc
  3193     00EB  28ED               	goto	u1381
  3194     00EC  28EE               	goto	u1380
  3195     00ED                     u1381:
  3196     00ED  2902               	goto	l2142
  3197     00EE                     u1380:
  3198     00EE                     l2138:
  3199     00EE  0020               	movlb	0	; select bank0
  3200     00EF  083F               	movf	dtoa@d,w
  3201     00F0  0440               	iorwf	dtoa@d+1,w
  3202     00F1  1D03               	btfss	3,2
  3203     00F2  28F4               	goto	u1391
  3204     00F3  28F5               	goto	u1390
  3205     00F4                     u1391:
  3206     00F4  28A8               	goto	l2126
  3207     00F5                     u1390:
  3208     00F5                     l2140:
  3209     00F5  0845               	movf	dtoa@p+1,w
  3210     00F6  3A80               	xorlw	128
  3211     00F7  00C1               	movwf	??_dtoa
  3212     00F8  3080               	movlw	128
  3213     00F9  0241               	subwf	??_dtoa,w
  3214     00FA  1D03               	skipz
  3215     00FB  28FE               	goto	u1405
  3216     00FC  3001               	movlw	1
  3217     00FD  0244               	subwf	dtoa@p,w
  3218     00FE                     u1405:
  3219     00FE  1803               	skipnc
  3220     00FF  2901               	goto	u1401
  3221     0100  2902               	goto	u1400
  3222     0101                     u1401:
  3223     0101  28A8               	goto	l2126
  3224     0102                     u1400:
  3225     0102                     l2142:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3228     0102  0020               	movlb	0	; select bank0
  3229     0103  0848               	movf	dtoa@s,w
  3230     0104  1903               	btfsc	3,2
  3231     0105  2907               	goto	u1411
  3232     0106  2908               	goto	u1410
  3233     0107                     u1411:
  3234     0107  2912               	goto	l2148
  3235     0108                     u1410:
  3236     0108                     l2144:
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3239     0108  30FF               	movlw	255
  3240     0109  07C9               	addwf	dtoa@i,f
  3241     010A  30FF               	movlw	255
  3242     010B  3DCA               	addwfc	dtoa@i+1,f
  3243     010C                     l2146:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3246     010C  0849               	movf	dtoa@i,w
  3247     010D  3EB2               	addlw	(low (_dbuf| 0))& (0+255)
  3248     010E  0086               	movwf	6
  3249     010F  0187               	clrf	7
  3250     0110  0848               	movf	dtoa@s,w
  3251     0111  0081               	movwf	1
  3252     0112                     l2148:
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3255     0112  083E               	movf	dtoa@fp+1,w
  3256     0113  00B4               	movwf	pad@fp+1
  3257     0114  083D               	movf	dtoa@fp,w
  3258     0115  00B3               	movwf	pad@fp
  3259     0116  0849               	movf	dtoa@i,w
  3260     0117  3EB2               	addlw	(low (_dbuf| 0))& (0+255)
  3261     0118  00B5               	movwf	pad@buf
  3262     0119  0847               	movf	dtoa@w+1,w
  3263     011A  00B7               	movwf	pad@p+1
  3264     011B  0846               	movf	dtoa@w,w
  3265     011C  00B6               	movwf	pad@p
  3266     011D  3183  23F8  3180   	fcall	_pad
  3267     0120                     l1072:
  3268     0120  0008               	return
  3269     0121                     __end_of_dtoa:
  3270                           
  3271                           	psect	text5
  3272     03F8                     __ptext5:	
  3273 ;; *************** function _pad *****************
  3274 ;; Defined at:
  3275 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  fp              2   19[BANK0 ] PTR struct _IO_FILE
  3278 ;;		 -> NULL(0), 
  3279 ;;  buf             1   21[BANK0 ] PTR unsigned char 
  3280 ;;		 -> dbuf(32), 
  3281 ;;  p               2   22[BANK0 ] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  w               2   27[BANK0 ] int 
  3284 ;;  i               2   25[BANK0 ] int 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3294 ;;      Params:         0       5       0       0       0       0
  3295 ;;      Locals:         0       4       0       0       0       0
  3296 ;;      Temps:          0       1       0       0       0       0
  3297 ;;      Totals:         0      10       0       0       0       0
  3298 ;;Total ram usage:       10 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 7
  3301 ;; This function calls:
  3302 ;;		_fputc
  3303 ;;		_fputs
  3304 ;; This function is called by:
  3305 ;;		_dtoa
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309     03F8                     _pad:	
  3310                           ;psect for function _pad
  3311                           
  3312     03F8                     l2088:	
  3313                           ;incstack = 0
  3314                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3315                           
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3318     03F8  0020               	movlb	0	; select bank0
  3319     03F9  1BB7               	btfsc	pad@p+1,7
  3320     03FA  2BFC               	goto	u1301
  3321     03FB  2BFD               	goto	u1300
  3322     03FC                     u1301:
  3323     03FC  2C02               	goto	l2092
  3324     03FD                     u1300:
  3325     03FD                     l2090:
  3326     03FD  0837               	movf	pad@p+1,w
  3327     03FE  00BC               	movwf	pad@w+1
  3328     03FF  0836               	movf	pad@p,w
  3329     0400  00BB               	movwf	pad@w
  3330     0401  2C04               	goto	l1049
  3331     0402                     l2092:
  3332     0402  01BB               	clrf	pad@w
  3333     0403  01BC               	clrf	pad@w+1
  3334     0404                     l1049:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3337     0404  01B9               	clrf	pad@i
  3338     0405  01BA               	clrf	pad@i+1
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3341     0406  2C18               	goto	l2098
  3342     0407                     l2094:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3345     0407  3020               	movlw	32
  3346     0408  0020               	movlb	0	; select bank0
  3347     0409  00A2               	movwf	fputc@c
  3348     040A  3000               	movlw	0
  3349     040B  00A3               	movwf	fputc@c+1
  3350     040C  0834               	movf	pad@fp+1,w
  3351     040D  00A5               	movwf	fputc@fp+1
  3352     040E  0833               	movf	pad@fp,w
  3353     040F  00A4               	movwf	fputc@fp
  3354     0410  3183  2345  3183   	fcall	_fputc
  3355     0413                     l2096:
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3358     0413  3001               	movlw	1
  3359     0414  0020               	movlb	0	; select bank0
  3360     0415  07B9               	addwf	pad@i,f
  3361     0416  3000               	movlw	0
  3362     0417  3DBA               	addwfc	pad@i+1,f
  3363     0418                     l2098:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3366     0418  083A               	movf	pad@i+1,w
  3367     0419  3A80               	xorlw	128
  3368     041A  00B8               	movwf	??_pad
  3369     041B  083C               	movf	pad@w+1,w
  3370     041C  3A80               	xorlw	128
  3371     041D  0238               	subwf	??_pad,w
  3372     041E  1D03               	skipz
  3373     041F  2C22               	goto	u1315
  3374     0420  083B               	movf	pad@w,w
  3375     0421  0239               	subwf	pad@i,w
  3376     0422                     u1315:
  3377     0422  1C03               	skipc
  3378     0423  2C25               	goto	u1311
  3379     0424  2C26               	goto	u1310
  3380     0425                     u1311:
  3381     0425  2C07               	goto	l2094
  3382     0426                     u1310:
  3383     0426                     l2100:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3386     0426  0020               	movlb	0	; select bank0
  3387     0427  0834               	movf	pad@fp+1,w
  3388     0428  00AC               	movwf	fputs@fp+1
  3389     0429  0833               	movf	pad@fp,w
  3390     042A  00AB               	movwf	fputs@fp
  3391     042B  0835               	movf	pad@buf,w
  3392     042C  3184  245C  3183   	fcall	_fputs
  3393     042F                     l1053:
  3394     042F  0008               	return
  3395     0430                     __end_of_pad:
  3396                           
  3397                           	psect	text6
  3398     045C                     __ptext6:	
  3399 ;; *************** function _fputs *****************
  3400 ;; Defined at:
  3401 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  s               1    wreg     PTR const unsigned char 
  3404 ;;		 -> dbuf(32), 
  3405 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3406 ;;		 -> NULL(0), 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  3409 ;;		 -> dbuf(32), 
  3410 ;;  i               2   17[BANK0 ] int 
  3411 ;;  c               1   16[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2   11[BANK0 ] int 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3421 ;;      Params:         0       2       0       0       0       0
  3422 ;;      Locals:         0       4       0       0       0       0
  3423 ;;      Temps:          0       2       0       0       0       0
  3424 ;;      Totals:         0       8       0       0       0       0
  3425 ;;Total ram usage:        8 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 6
  3428 ;; This function calls:
  3429 ;;		_fputc
  3430 ;; This function is called by:
  3431 ;;		_pad
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435     045C                     _fputs:	
  3436                           ;psect for function _fputs
  3437                           
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3441                           ;fputs@s stored from wreg
  3442     045C  0020               	movlb	0	; select bank0
  3443     045D  00AF               	movwf	fputs@s
  3444     045E                     l2080:
  3445     045E  01B1               	clrf	fputs@i
  3446     045F  01B2               	clrf	fputs@i+1
  3447     0460  2C74               	goto	l2086
  3448     0461                     l2082:
  3449     0461  0830               	movf	fputs@c,w
  3450     0462  00AD               	movwf	??_fputs
  3451     0463  01AE               	clrf	??_fputs+1
  3452     0464  082D               	movf	??_fputs,w
  3453     0465  00A2               	movwf	fputc@c
  3454     0466  082E               	movf	??_fputs+1,w
  3455     0467  00A3               	movwf	fputc@c+1
  3456     0468  082C               	movf	fputs@fp+1,w
  3457     0469  00A5               	movwf	fputc@fp+1
  3458     046A  082B               	movf	fputs@fp,w
  3459     046B  00A4               	movwf	fputc@fp
  3460     046C  3183  2345  3184   	fcall	_fputc
  3461     046F                     l2084:
  3462     046F  3001               	movlw	1
  3463     0470  0020               	movlb	0	; select bank0
  3464     0471  07B1               	addwf	fputs@i,f
  3465     0472  3000               	movlw	0
  3466     0473  3DB2               	addwfc	fputs@i+1,f
  3467     0474                     l2086:
  3468     0474  0831               	movf	fputs@i,w
  3469     0475  072F               	addwf	fputs@s,w
  3470     0476  00AD               	movwf	??_fputs
  3471     0477  082D               	movf	??_fputs,w
  3472     0478  0086               	movwf	6
  3473     0479  0187               	clrf	7
  3474     047A  0801               	movf	1,w
  3475     047B  00B0               	movwf	fputs@c
  3476     047C  0830               	movf	fputs@c,w
  3477     047D  1D03               	btfss	3,2
  3478     047E  2C80               	goto	u1291
  3479     047F  2C81               	goto	u1290
  3480     0480                     u1291:
  3481     0480  2C61               	goto	l2082
  3482     0481                     u1290:
  3483     0481                     l1112:
  3484     0481  0008               	return
  3485     0482                     __end_of_fputs:
  3486                           
  3487                           	psect	text7
  3488     0345                     __ptext7:	
  3489 ;; *************** function _fputc *****************
  3490 ;; Defined at:
  3491 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  c               2    2[BANK0 ] int 
  3494 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  3495 ;;		 -> NULL(0), 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    2[BANK0 ] int 
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3507 ;;      Params:         0       4       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0
  3509 ;;      Temps:          0       5       0       0       0       0
  3510 ;;      Totals:         0       9       0       0       0       0
  3511 ;;Total ram usage:        9 bytes
  3512 ;; Hardware stack levels used: 1
  3513 ;; Hardware stack levels required when called: 5
  3514 ;; This function calls:
  3515 ;;		_putch
  3516 ;; This function is called by:
  3517 ;;		_pad
  3518 ;;		_vfpfcnvrt
  3519 ;;		_fputs
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523     0345                     _fputc:	
  3524                           ;psect for function _fputc
  3525                           
  3526     0345                     l2064:	
  3527                           ;incstack = 0
  3528                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3529                           
  3530     0345  0020               	movlb	0	; select bank0
  3531     0346  0824               	movf	fputc@fp,w
  3532     0347  0425               	iorwf	fputc@fp+1,w
  3533     0348  1903               	btfsc	3,2
  3534     0349  2B4B               	goto	u1251
  3535     034A  2B4C               	goto	u1250
  3536     034B                     u1251:
  3537     034B  2B52               	goto	l2068
  3538     034C                     u1250:
  3539     034C                     l2066:
  3540     034C  0824               	movf	fputc@fp,w
  3541     034D  0425               	iorwf	fputc@fp+1,w
  3542     034E  1D03               	btfss	3,2
  3543     034F  2B51               	goto	u1261
  3544     0350  2B52               	goto	u1260
  3545     0351                     u1261:
  3546     0351  2B57               	goto	l2070
  3547     0352                     u1260:
  3548     0352                     l2068:
  3549     0352  0822               	movf	fputc@c,w
  3550     0353  3185  25FF  3183   	fcall	_putch
  3551     0356  2BA3               	goto	l1104
  3552     0357                     l2070:
  3553     0357  0824               	movf	fputc@fp,w
  3554     0358  0086               	movwf	6
  3555     0359  0825               	movf	fputc@fp+1,w
  3556     035A  0087               	movwf	7
  3557     035B  3149               	addfsr 1,9
  3558     035C  0016               	moviw fsr1++
  3559     035D  0401               	iorwf	1,w
  3560     035E  1903               	btfsc	3,2
  3561     035F  2B61               	goto	u1271
  3562     0360  2B62               	goto	u1270
  3563     0361                     u1271:
  3564     0361  2B82               	goto	l2074
  3565     0362                     u1270:
  3566     0362                     l2072:
  3567     0362  0824               	movf	fputc@fp,w
  3568     0363  0086               	movwf	6
  3569     0364  0825               	movf	fputc@fp+1,w
  3570     0365  0087               	movwf	7
  3571     0366  3149               	addfsr 1,9
  3572     0367  3F40               	moviw [0]fsr1
  3573     0368  00A6               	movwf	??_fputc
  3574     0369  3F41               	moviw [1]fsr1
  3575     036A  00A7               	movwf	??_fputc+1
  3576     036B  0824               	movf	fputc@fp,w
  3577     036C  0086               	movwf	6
  3578     036D  0825               	movf	fputc@fp+1,w
  3579     036E  0087               	movwf	7
  3580     036F  3142               	addfsr 1,2
  3581     0370  3F40               	moviw [0]fsr1
  3582     0371  00A8               	movwf	??_fputc+2
  3583     0372  3F41               	moviw [1]fsr1
  3584     0373  00A9               	movwf	??_fputc+3
  3585     0374  0829               	movf	??_fputc+3,w
  3586     0375  3A80               	xorlw	128
  3587     0376  00AA               	movwf	??_fputc+4
  3588     0377  0827               	movf	??_fputc+1,w
  3589     0378  3A80               	xorlw	128
  3590     0379  022A               	subwf	??_fputc+4,w
  3591     037A  1D03               	skipz
  3592     037B  2B7E               	goto	u1285
  3593     037C  0826               	movf	??_fputc,w
  3594     037D  0228               	subwf	??_fputc+2,w
  3595     037E                     u1285:
  3596     037E  1803               	skipnc
  3597     037F  2B81               	goto	u1281
  3598     0380  2B82               	goto	u1280
  3599     0381                     u1281:
  3600     0381  2BA3               	goto	l1104
  3601     0382                     u1280:
  3602     0382                     l2074:
  3603     0382  0020               	movlb	0	; select bank0
  3604     0383  0824               	movf	fputc@fp,w
  3605     0384  0086               	movwf	6
  3606     0385  0825               	movf	fputc@fp+1,w
  3607     0386  0087               	movwf	7
  3608     0387  3142               	addfsr 1,2
  3609     0388  0824               	movf	fputc@fp,w
  3610     0389  0084               	movwf	4
  3611     038A  0825               	movf	fputc@fp+1,w
  3612     038B  0085               	movwf	5
  3613     038C  3F40               	moviw [0]fsr1
  3614     038D  0700               	addwf	0,w
  3615     038E  00A6               	movwf	??_fputc
  3616     038F  3101               	addfsr 0,1
  3617     0390  3F41               	moviw [1]fsr1
  3618     0391  3D00               	addwfc	0,w
  3619     0392  00A7               	movwf	??_fputc+1
  3620     0393  0826               	movf	??_fputc,w
  3621     0394  0086               	movwf	6
  3622     0395  0827               	movf	??_fputc+1,w
  3623     0396  0087               	movwf	7
  3624     0397  0822               	movf	fputc@c,w
  3625     0398  0081               	movwf	1
  3626     0399                     l2076:
  3627     0399  0824               	movf	fputc@fp,w
  3628     039A  0086               	movwf	6
  3629     039B  0825               	movf	fputc@fp+1,w
  3630     039C  0087               	movwf	7
  3631     039D  3142               	addfsr 1,2
  3632     039E  3001               	movlw	1
  3633     039F  0781               	addwf	1,f
  3634     03A0  3141               	addfsr 1,1
  3635     03A1  1803               	skipnc
  3636     03A2  0A81               	incf	1,f
  3637     03A3                     l1104:
  3638     03A3  0008               	return
  3639     03A4                     __end_of_fputc:
  3640                           
  3641                           	psect	text8
  3642     05FF                     __ptext8:	
  3643 ;; *************** function _putch *****************
  3644 ;; Defined at:
  3645 ;;		line 146 in file "mcc_generated_files/eusart.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  txData          1    wreg     unsigned char 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  txData          1    1[BANK0 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3659 ;;      Params:         0       0       0       0       0       0
  3660 ;;      Locals:         0       1       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0
  3662 ;;      Totals:         0       1       0       0       0       0
  3663 ;;Total ram usage:        1 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 4
  3666 ;; This function calls:
  3667 ;;		_EUSART_Write
  3668 ;; This function is called by:
  3669 ;;		_fputc
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673     05FF                     _putch:	
  3674                           ;psect for function _putch
  3675                           
  3676                           
  3677                           ;incstack = 0
  3678                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3679                           ;putch@txData stored from wreg
  3680     05FF  0020               	movlb	0	; select bank0
  3681     0600  00A1               	movwf	putch@txData
  3682     0601                     l2062:
  3683                           
  3684                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  3685     0601  0821               	movf	putch@txData,w
  3686     0602  3185  25BF  3185   	fcall	_EUSART_Write
  3687     0605                     l211:
  3688     0605  0008               	return
  3689     0606                     __end_of_putch:
  3690                           
  3691                           	psect	text9
  3692     05BF                     __ptext9:	
  3693 ;; *************** function _EUSART_Write *****************
  3694 ;; Defined at:
  3695 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  txData          1    wreg     unsigned char 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  txData          1    0[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3709 ;;      Params:         0       0       0       0       0       0
  3710 ;;      Locals:         0       1       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0
  3712 ;;      Totals:         0       1       0       0       0       0
  3713 ;;Total ram usage:        1 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 3
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_putch
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723     05BF                     _EUSART_Write:	
  3724                           ;psect for function _EUSART_Write
  3725                           
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _EUSART_Write: [wreg]
  3729                           ;EUSART_Write@txData stored from wreg
  3730     05BF  0020               	movlb	0	; select bank0
  3731     05C0  00A0               	movwf	EUSART_Write@txData
  3732     05C1                     l2058:
  3733     05C1                     l202:	
  3734                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3735                           
  3736                           
  3737                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3738     05C1  1E11               	btfss	17,4	;volatile
  3739     05C2  2DC4               	goto	u1241
  3740     05C3  2DC5               	goto	u1240
  3741     05C4                     u1241:
  3742     05C4  2DC1               	goto	l202
  3743     05C5                     u1240:
  3744     05C5                     l2060:
  3745                           
  3746                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3747     05C5  0820               	movf	EUSART_Write@txData,w
  3748     05C6  0023               	movlb	3	; select bank3
  3749     05C7  009A               	movwf	26	;volatile
  3750     05C8                     l205:
  3751     05C8  0008               	return
  3752     05C9                     __end_of_EUSART_Write:
  3753                           
  3754                           	psect	text10
  3755     04C5                     __ptext10:	
  3756 ;; *************** function _abs *****************
  3757 ;; Defined at:
  3758 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  a               2    7[BANK0 ] int 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  2    7[BANK0 ] int 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3772 ;;      Params:         0       2       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0
  3774 ;;      Temps:          0       2       0       0       0       0
  3775 ;;      Totals:         0       4       0       0       0       0
  3776 ;;Total ram usage:        4 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 3
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_dtoa
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786     04C5                     _abs:	
  3787                           ;psect for function _abs
  3788                           
  3789     04C5                     l1748:	
  3790                           ;incstack = 0
  3791                           ; Regs used in _abs: [wreg+status,2+status,0]
  3792                           
  3793     04C5  0020               	movlb	0	; select bank0
  3794     04C6  0828               	movf	abs@a+1,w
  3795     04C7  3A80               	xorlw	128
  3796     04C8  00A9               	movwf	??_abs
  3797     04C9  3080               	movlw	128
  3798     04CA  0229               	subwf	??_abs,w
  3799     04CB  1D03               	skipz
  3800     04CC  2CCF               	goto	u905
  3801     04CD  3001               	movlw	1
  3802     04CE  0227               	subwf	abs@a,w
  3803     04CF                     u905:
  3804     04CF  1803               	skipnc
  3805     04D0  2CD2               	goto	u901
  3806     04D1  2CD3               	goto	u900
  3807     04D2                     u901:
  3808     04D2  2CE0               	goto	l1089
  3809     04D3                     u900:
  3810     04D3                     l1750:
  3811     04D3  0020               	movlb	0	; select bank0
  3812     04D4  0927               	comf	abs@a,w
  3813     04D5  00A9               	movwf	??_abs
  3814     04D6  0928               	comf	abs@a+1,w
  3815     04D7  00AA               	movwf	??_abs+1
  3816     04D8  0AA9               	incf	??_abs,f
  3817     04D9  1903               	skipnz
  3818     04DA  0AAA               	incf	??_abs+1,f
  3819     04DB  0829               	movf	??_abs,w
  3820     04DC  00A7               	movwf	?_abs
  3821     04DD  082A               	movf	??_abs+1,w
  3822     04DE  00A8               	movwf	?_abs+1
  3823     04DF  2CE0               	goto	l1092
  3824     04E0                     l1089:
  3825     04E0                     l1092:
  3826     04E0  0008               	return
  3827     04E1                     __end_of_abs:
  3828                           
  3829                           	psect	text11
  3830     03A4                     __ptext11:	
  3831 ;; *************** function ___awmod *****************
  3832 ;; Defined at:
  3833 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  divisor         2    0[BANK0 ] int 
  3836 ;;  dividend        2    2[BANK0 ] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  sign            1    6[BANK0 ] unsigned char 
  3839 ;;  counter         1    5[BANK0 ] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2    0[BANK0 ] int 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3849 ;;      Params:         0       4       0       0       0       0
  3850 ;;      Locals:         0       2       0       0       0       0
  3851 ;;      Temps:          0       1       0       0       0       0
  3852 ;;      Totals:         0       7       0       0       0       0
  3853 ;;Total ram usage:        7 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 3
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_dtoa
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863     03A4                     ___awmod:	
  3864                           ;psect for function ___awmod
  3865                           
  3866     03A4                     l1696:	
  3867                           ;incstack = 0
  3868                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3869                           
  3870     03A4  0020               	movlb	0	; select bank0
  3871     03A5  01A6               	clrf	___awmod@sign
  3872     03A6                     l1698:
  3873     03A6  1FA3               	btfss	___awmod@dividend+1,7
  3874     03A7  2BA9               	goto	u791
  3875     03A8  2BAA               	goto	u790
  3876     03A9                     u791:
  3877     03A9  2BB1               	goto	l1704
  3878     03AA                     u790:
  3879     03AA                     l1700:
  3880     03AA  09A2               	comf	___awmod@dividend,f
  3881     03AB  09A3               	comf	___awmod@dividend+1,f
  3882     03AC  0AA2               	incf	___awmod@dividend,f
  3883     03AD  1903               	skipnz
  3884     03AE  0AA3               	incf	___awmod@dividend+1,f
  3885     03AF                     l1702:
  3886     03AF  01A6               	clrf	___awmod@sign
  3887     03B0  0AA6               	incf	___awmod@sign,f
  3888     03B1                     l1704:
  3889     03B1  1FA1               	btfss	___awmod@divisor+1,7
  3890     03B2  2BB4               	goto	u801
  3891     03B3  2BB5               	goto	u800
  3892     03B4                     u801:
  3893     03B4  2BBA               	goto	l1708
  3894     03B5                     u800:
  3895     03B5                     l1706:
  3896     03B5  09A0               	comf	___awmod@divisor,f
  3897     03B6  09A1               	comf	___awmod@divisor+1,f
  3898     03B7  0AA0               	incf	___awmod@divisor,f
  3899     03B8  1903               	skipnz
  3900     03B9  0AA1               	incf	___awmod@divisor+1,f
  3901     03BA                     l1708:
  3902     03BA  0820               	movf	___awmod@divisor,w
  3903     03BB  0421               	iorwf	___awmod@divisor+1,w
  3904     03BC  1903               	btfsc	3,2
  3905     03BD  2BBF               	goto	u811
  3906     03BE  2BC0               	goto	u810
  3907     03BF                     u811:
  3908     03BF  2BE9               	goto	l1726
  3909     03C0                     u810:
  3910     03C0                     l1710:
  3911     03C0  01A5               	clrf	___awmod@counter
  3912     03C1  0AA5               	incf	___awmod@counter,f
  3913     03C2  2BCC               	goto	l1716
  3914     03C3                     l1712:
  3915     03C3  3001               	movlw	1
  3916     03C4                     u825:
  3917     03C4  35A0               	lslf	___awmod@divisor,f
  3918     03C5  0DA1               	rlf	___awmod@divisor+1,f
  3919     03C6  0B89               	decfsz	9,f
  3920     03C7  2BC4               	goto	u825
  3921     03C8                     l1714:
  3922     03C8  3001               	movlw	1
  3923     03C9  00A4               	movwf	??___awmod
  3924     03CA  0824               	movf	??___awmod,w
  3925     03CB  07A5               	addwf	___awmod@counter,f
  3926     03CC                     l1716:
  3927     03CC  1FA1               	btfss	___awmod@divisor+1,7
  3928     03CD  2BCF               	goto	u831
  3929     03CE  2BD0               	goto	u830
  3930     03CF                     u831:
  3931     03CF  2BC3               	goto	l1712
  3932     03D0                     u830:
  3933     03D0                     l1718:
  3934     03D0  0821               	movf	___awmod@divisor+1,w
  3935     03D1  0223               	subwf	___awmod@dividend+1,w
  3936     03D2  1D03               	skipz
  3937     03D3  2BD6               	goto	u845
  3938     03D4  0820               	movf	___awmod@divisor,w
  3939     03D5  0222               	subwf	___awmod@dividend,w
  3940     03D6                     u845:
  3941     03D6  1C03               	skipc
  3942     03D7  2BD9               	goto	u841
  3943     03D8  2BDA               	goto	u840
  3944     03D9                     u841:
  3945     03D9  2BDE               	goto	l1722
  3946     03DA                     u840:
  3947     03DA                     l1720:
  3948     03DA  0820               	movf	___awmod@divisor,w
  3949     03DB  02A2               	subwf	___awmod@dividend,f
  3950     03DC  0821               	movf	___awmod@divisor+1,w
  3951     03DD  3BA3               	subwfb	___awmod@dividend+1,f
  3952     03DE                     l1722:
  3953     03DE  3001               	movlw	1
  3954     03DF                     u855:
  3955     03DF  36A1               	lsrf	___awmod@divisor+1,f
  3956     03E0  0CA0               	rrf	___awmod@divisor,f
  3957     03E1  0B89               	decfsz	9,f
  3958     03E2  2BDF               	goto	u855
  3959     03E3                     l1724:
  3960     03E3  3001               	movlw	1
  3961     03E4  02A5               	subwf	___awmod@counter,f
  3962     03E5  1D03               	btfss	3,2
  3963     03E6  2BE8               	goto	u861
  3964     03E7  2BE9               	goto	u860
  3965     03E8                     u861:
  3966     03E8  2BD0               	goto	l1718
  3967     03E9                     u860:
  3968     03E9                     l1726:
  3969     03E9  0826               	movf	___awmod@sign,w
  3970     03EA  1903               	btfsc	3,2
  3971     03EB  2BED               	goto	u871
  3972     03EC  2BEE               	goto	u870
  3973     03ED                     u871:
  3974     03ED  2BF3               	goto	l1730
  3975     03EE                     u870:
  3976     03EE                     l1728:
  3977     03EE  09A2               	comf	___awmod@dividend,f
  3978     03EF  09A3               	comf	___awmod@dividend+1,f
  3979     03F0  0AA2               	incf	___awmod@dividend,f
  3980     03F1  1903               	skipnz
  3981     03F2  0AA3               	incf	___awmod@dividend+1,f
  3982     03F3                     l1730:
  3983     03F3  0823               	movf	___awmod@dividend+1,w
  3984     03F4  00A1               	movwf	?___awmod+1
  3985     03F5  0822               	movf	___awmod@dividend,w
  3986     03F6  00A0               	movwf	?___awmod
  3987     03F7                     l730:
  3988     03F7  0008               	return
  3989     03F8                     __end_of___awmod:
  3990                           
  3991                           	psect	text12
  3992     02E5                     __ptext12:	
  3993 ;; *************** function ___awdiv *****************
  3994 ;; Defined at:
  3995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  divisor         2    0[BANK0 ] int 
  3998 ;;  dividend        2    2[BANK0 ] int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  quotient        2    7[BANK0 ] int 
  4001 ;;  sign            1    6[BANK0 ] unsigned char 
  4002 ;;  counter         1    5[BANK0 ] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2    0[BANK0 ] int 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4012 ;;      Params:         0       4       0       0       0       0
  4013 ;;      Locals:         0       4       0       0       0       0
  4014 ;;      Temps:          0       1       0       0       0       0
  4015 ;;      Totals:         0       9       0       0       0       0
  4016 ;;Total ram usage:        9 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 3
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_dtoa
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026     02E5                     ___awdiv:	
  4027                           ;psect for function ___awdiv
  4028                           
  4029     02E5                     l1652:	
  4030                           ;incstack = 0
  4031                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4032                           
  4033     02E5  0020               	movlb	0	; select bank0
  4034     02E6  01A6               	clrf	___awdiv@sign
  4035     02E7                     l1654:
  4036     02E7  1FA1               	btfss	___awdiv@divisor+1,7
  4037     02E8  2AEA               	goto	u691
  4038     02E9  2AEB               	goto	u690
  4039     02EA                     u691:
  4040     02EA  2AF2               	goto	l1660
  4041     02EB                     u690:
  4042     02EB                     l1656:
  4043     02EB  09A0               	comf	___awdiv@divisor,f
  4044     02EC  09A1               	comf	___awdiv@divisor+1,f
  4045     02ED  0AA0               	incf	___awdiv@divisor,f
  4046     02EE  1903               	skipnz
  4047     02EF  0AA1               	incf	___awdiv@divisor+1,f
  4048     02F0                     l1658:
  4049     02F0  01A6               	clrf	___awdiv@sign
  4050     02F1  0AA6               	incf	___awdiv@sign,f
  4051     02F2                     l1660:
  4052     02F2  1FA3               	btfss	___awdiv@dividend+1,7
  4053     02F3  2AF5               	goto	u701
  4054     02F4  2AF6               	goto	u700
  4055     02F5                     u701:
  4056     02F5  2AFF               	goto	l1666
  4057     02F6                     u700:
  4058     02F6                     l1662:
  4059     02F6  09A2               	comf	___awdiv@dividend,f
  4060     02F7  09A3               	comf	___awdiv@dividend+1,f
  4061     02F8  0AA2               	incf	___awdiv@dividend,f
  4062     02F9  1903               	skipnz
  4063     02FA  0AA3               	incf	___awdiv@dividend+1,f
  4064     02FB                     l1664:
  4065     02FB  3001               	movlw	1
  4066     02FC  00A4               	movwf	??___awdiv
  4067     02FD  0824               	movf	??___awdiv,w
  4068     02FE  06A6               	xorwf	___awdiv@sign,f
  4069     02FF                     l1666:
  4070     02FF  01A7               	clrf	___awdiv@quotient
  4071     0300  01A8               	clrf	___awdiv@quotient+1
  4072     0301                     l1668:
  4073     0301  0820               	movf	___awdiv@divisor,w
  4074     0302  0421               	iorwf	___awdiv@divisor+1,w
  4075     0303  1903               	btfsc	3,2
  4076     0304  2B06               	goto	u711
  4077     0305  2B07               	goto	u710
  4078     0306                     u711:
  4079     0306  2B36               	goto	l1688
  4080     0307                     u710:
  4081     0307                     l1670:
  4082     0307  01A5               	clrf	___awdiv@counter
  4083     0308  0AA5               	incf	___awdiv@counter,f
  4084     0309  2B13               	goto	l1676
  4085     030A                     l1672:
  4086     030A  3001               	movlw	1
  4087     030B                     u725:
  4088     030B  35A0               	lslf	___awdiv@divisor,f
  4089     030C  0DA1               	rlf	___awdiv@divisor+1,f
  4090     030D  0B89               	decfsz	9,f
  4091     030E  2B0B               	goto	u725
  4092     030F                     l1674:
  4093     030F  3001               	movlw	1
  4094     0310  00A4               	movwf	??___awdiv
  4095     0311  0824               	movf	??___awdiv,w
  4096     0312  07A5               	addwf	___awdiv@counter,f
  4097     0313                     l1676:
  4098     0313  1FA1               	btfss	___awdiv@divisor+1,7
  4099     0314  2B16               	goto	u731
  4100     0315  2B17               	goto	u730
  4101     0316                     u731:
  4102     0316  2B0A               	goto	l1672
  4103     0317                     u730:
  4104     0317                     l1678:
  4105     0317  3001               	movlw	1
  4106     0318                     u745:
  4107     0318  35A7               	lslf	___awdiv@quotient,f
  4108     0319  0DA8               	rlf	___awdiv@quotient+1,f
  4109     031A  0B89               	decfsz	9,f
  4110     031B  2B18               	goto	u745
  4111     031C  0821               	movf	___awdiv@divisor+1,w
  4112     031D  0223               	subwf	___awdiv@dividend+1,w
  4113     031E  1D03               	skipz
  4114     031F  2B22               	goto	u755
  4115     0320  0820               	movf	___awdiv@divisor,w
  4116     0321  0222               	subwf	___awdiv@dividend,w
  4117     0322                     u755:
  4118     0322  1C03               	skipc
  4119     0323  2B25               	goto	u751
  4120     0324  2B26               	goto	u750
  4121     0325                     u751:
  4122     0325  2B2B               	goto	l1684
  4123     0326                     u750:
  4124     0326                     l1680:
  4125     0326  0820               	movf	___awdiv@divisor,w
  4126     0327  02A2               	subwf	___awdiv@dividend,f
  4127     0328  0821               	movf	___awdiv@divisor+1,w
  4128     0329  3BA3               	subwfb	___awdiv@dividend+1,f
  4129     032A                     l1682:
  4130     032A  1427               	bsf	___awdiv@quotient,0
  4131     032B                     l1684:
  4132     032B  3001               	movlw	1
  4133     032C                     u765:
  4134     032C  36A1               	lsrf	___awdiv@divisor+1,f
  4135     032D  0CA0               	rrf	___awdiv@divisor,f
  4136     032E  0B89               	decfsz	9,f
  4137     032F  2B2C               	goto	u765
  4138     0330                     l1686:
  4139     0330  3001               	movlw	1
  4140     0331  02A5               	subwf	___awdiv@counter,f
  4141     0332  1D03               	btfss	3,2
  4142     0333  2B35               	goto	u771
  4143     0334  2B36               	goto	u770
  4144     0335                     u771:
  4145     0335  2B17               	goto	l1678
  4146     0336                     u770:
  4147     0336                     l1688:
  4148     0336  0826               	movf	___awdiv@sign,w
  4149     0337  1903               	btfsc	3,2
  4150     0338  2B3A               	goto	u781
  4151     0339  2B3B               	goto	u780
  4152     033A                     u781:
  4153     033A  2B40               	goto	l1692
  4154     033B                     u780:
  4155     033B                     l1690:
  4156     033B  09A7               	comf	___awdiv@quotient,f
  4157     033C  09A8               	comf	___awdiv@quotient+1,f
  4158     033D  0AA7               	incf	___awdiv@quotient,f
  4159     033E  1903               	skipnz
  4160     033F  0AA8               	incf	___awdiv@quotient+1,f
  4161     0340                     l1692:
  4162     0340  0828               	movf	___awdiv@quotient+1,w
  4163     0341  00A1               	movwf	?___awdiv+1
  4164     0342  0827               	movf	___awdiv@quotient,w
  4165     0343  00A0               	movwf	?___awdiv
  4166     0344                     l717:
  4167     0344  0008               	return
  4168     0345                     __end_of___awdiv:
  4169                           
  4170                           	psect	text13
  4171     01C9                     __ptext13:	
  4172 ;; *************** function ___aldiv *****************
  4173 ;; Defined at:
  4174 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\aldiv.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  divisor         4    0[BANK0 ] long 
  4177 ;;  dividend        4    4[BANK0 ] long 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  quotient        4   11[BANK0 ] long 
  4180 ;;  sign            1   10[BANK0 ] unsigned char 
  4181 ;;  counter         1    9[BANK0 ] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  4    0[BANK0 ] long 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4191 ;;      Params:         0       8       0       0       0       0
  4192 ;;      Locals:         0       6       0       0       0       0
  4193 ;;      Temps:          0       1       0       0       0       0
  4194 ;;      Totals:         0      15       0       0       0       0
  4195 ;;Total ram usage:       15 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 3
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205     01C9                     ___aldiv:	
  4206                           ;psect for function ___aldiv
  4207                           
  4208     01C9                     l2370:	
  4209                           ;incstack = 0
  4210                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4211                           
  4212     01C9  0020               	movlb	0	; select bank0
  4213     01CA  01AA               	clrf	___aldiv@sign
  4214     01CB                     l2372:
  4215     01CB  1FA3               	btfss	___aldiv@divisor+3,7
  4216     01CC  29CE               	goto	u1621
  4217     01CD  29CF               	goto	u1620
  4218     01CE                     u1621:
  4219     01CE  29DC               	goto	l629
  4220     01CF                     u1620:
  4221     01CF                     l2374:
  4222     01CF  09A0               	comf	___aldiv@divisor,f
  4223     01D0  09A1               	comf	___aldiv@divisor+1,f
  4224     01D1  09A2               	comf	___aldiv@divisor+2,f
  4225     01D2  09A3               	comf	___aldiv@divisor+3,f
  4226     01D3  0AA0               	incf	___aldiv@divisor,f
  4227     01D4  1903               	skipnz
  4228     01D5  0AA1               	incf	___aldiv@divisor+1,f
  4229     01D6  1903               	skipnz
  4230     01D7  0AA2               	incf	___aldiv@divisor+2,f
  4231     01D8  1903               	skipnz
  4232     01D9  0AA3               	incf	___aldiv@divisor+3,f
  4233     01DA  01AA               	clrf	___aldiv@sign
  4234     01DB  0AAA               	incf	___aldiv@sign,f
  4235     01DC                     l629:
  4236     01DC  1FA7               	btfss	___aldiv@dividend+3,7
  4237     01DD  29DF               	goto	u1631
  4238     01DE  29E0               	goto	u1630
  4239     01DF                     u1631:
  4240     01DF  29EF               	goto	l2380
  4241     01E0                     u1630:
  4242     01E0                     l2376:
  4243     01E0  09A4               	comf	___aldiv@dividend,f
  4244     01E1  09A5               	comf	___aldiv@dividend+1,f
  4245     01E2  09A6               	comf	___aldiv@dividend+2,f
  4246     01E3  09A7               	comf	___aldiv@dividend+3,f
  4247     01E4  0AA4               	incf	___aldiv@dividend,f
  4248     01E5  1903               	skipnz
  4249     01E6  0AA5               	incf	___aldiv@dividend+1,f
  4250     01E7  1903               	skipnz
  4251     01E8  0AA6               	incf	___aldiv@dividend+2,f
  4252     01E9  1903               	skipnz
  4253     01EA  0AA7               	incf	___aldiv@dividend+3,f
  4254     01EB                     l2378:
  4255     01EB  3001               	movlw	1
  4256     01EC  00A8               	movwf	??___aldiv
  4257     01ED  0828               	movf	??___aldiv,w
  4258     01EE  06AA               	xorwf	___aldiv@sign,f
  4259     01EF                     l2380:
  4260     01EF  3000               	movlw	0
  4261     01F0  00AE               	movwf	___aldiv@quotient+3
  4262     01F1  3000               	movlw	0
  4263     01F2  00AD               	movwf	___aldiv@quotient+2
  4264     01F3  3000               	movlw	0
  4265     01F4  00AC               	movwf	___aldiv@quotient+1
  4266     01F5  3000               	movlw	0
  4267     01F6  00AB               	movwf	___aldiv@quotient
  4268     01F7                     l2382:
  4269     01F7  0823               	movf	___aldiv@divisor+3,w
  4270     01F8  0422               	iorwf	___aldiv@divisor+2,w
  4271     01F9  0421               	iorwf	___aldiv@divisor+1,w
  4272     01FA  0420               	iorwf	___aldiv@divisor,w
  4273     01FB  1903               	skipnz
  4274     01FC  29FE               	goto	u1641
  4275     01FD  29FF               	goto	u1640
  4276     01FE                     u1641:
  4277     01FE  2A40               	goto	l2402
  4278     01FF                     u1640:
  4279     01FF                     l2384:
  4280     01FF  01A9               	clrf	___aldiv@counter
  4281     0200  0AA9               	incf	___aldiv@counter,f
  4282     0201  2A0D               	goto	l2388
  4283     0202                     l2386:
  4284     0202  3001               	movlw	1
  4285     0203                     u1655:
  4286     0203  35A0               	lslf	___aldiv@divisor,f
  4287     0204  0DA1               	rlf	___aldiv@divisor+1,f
  4288     0205  0DA2               	rlf	___aldiv@divisor+2,f
  4289     0206  0DA3               	rlf	___aldiv@divisor+3,f
  4290     0207  0B89               	decfsz	9,f
  4291     0208  2A03               	goto	u1655
  4292     0209  3001               	movlw	1
  4293     020A  00A8               	movwf	??___aldiv
  4294     020B  0828               	movf	??___aldiv,w
  4295     020C  07A9               	addwf	___aldiv@counter,f
  4296     020D                     l2388:
  4297     020D  1FA3               	btfss	___aldiv@divisor+3,7
  4298     020E  2A10               	goto	u1661
  4299     020F  2A11               	goto	u1660
  4300     0210                     u1661:
  4301     0210  2A02               	goto	l2386
  4302     0211                     u1660:
  4303     0211                     l2390:
  4304     0211  3001               	movlw	1
  4305     0212                     u1675:
  4306     0212  35AB               	lslf	___aldiv@quotient,f
  4307     0213  0DAC               	rlf	___aldiv@quotient+1,f
  4308     0214  0DAD               	rlf	___aldiv@quotient+2,f
  4309     0215  0DAE               	rlf	___aldiv@quotient+3,f
  4310     0216  0B89               	decfsz	9,f
  4311     0217  2A12               	goto	u1675
  4312     0218                     l2392:
  4313     0218  0823               	movf	___aldiv@divisor+3,w
  4314     0219  0227               	subwf	___aldiv@dividend+3,w
  4315     021A  1D03               	skipz
  4316     021B  2A26               	goto	u1685
  4317     021C  0822               	movf	___aldiv@divisor+2,w
  4318     021D  0226               	subwf	___aldiv@dividend+2,w
  4319     021E  1D03               	skipz
  4320     021F  2A26               	goto	u1685
  4321     0220  0821               	movf	___aldiv@divisor+1,w
  4322     0221  0225               	subwf	___aldiv@dividend+1,w
  4323     0222  1D03               	skipz
  4324     0223  2A26               	goto	u1685
  4325     0224  0820               	movf	___aldiv@divisor,w
  4326     0225  0224               	subwf	___aldiv@dividend,w
  4327     0226                     u1685:
  4328     0226  1C03               	skipc
  4329     0227  2A29               	goto	u1681
  4330     0228  2A2A               	goto	u1680
  4331     0229                     u1681:
  4332     0229  2A33               	goto	l2398
  4333     022A                     u1680:
  4334     022A                     l2394:
  4335     022A  0820               	movf	___aldiv@divisor,w
  4336     022B  02A4               	subwf	___aldiv@dividend,f
  4337     022C  0821               	movf	___aldiv@divisor+1,w
  4338     022D  3BA5               	subwfb	___aldiv@dividend+1,f
  4339     022E  0822               	movf	___aldiv@divisor+2,w
  4340     022F  3BA6               	subwfb	___aldiv@dividend+2,f
  4341     0230  0823               	movf	___aldiv@divisor+3,w
  4342     0231  3BA7               	subwfb	___aldiv@dividend+3,f
  4343     0232                     l2396:
  4344     0232  142B               	bsf	___aldiv@quotient,0
  4345     0233                     l2398:
  4346     0233  3001               	movlw	1
  4347     0234                     u1695:
  4348     0234  36A3               	lsrf	___aldiv@divisor+3,f
  4349     0235  0CA2               	rrf	___aldiv@divisor+2,f
  4350     0236  0CA1               	rrf	___aldiv@divisor+1,f
  4351     0237  0CA0               	rrf	___aldiv@divisor,f
  4352     0238  0B89               	decfsz	9,f
  4353     0239  2A34               	goto	u1695
  4354     023A                     l2400:
  4355     023A  3001               	movlw	1
  4356     023B  02A9               	subwf	___aldiv@counter,f
  4357     023C  1D03               	btfss	3,2
  4358     023D  2A3F               	goto	u1701
  4359     023E  2A40               	goto	u1700
  4360     023F                     u1701:
  4361     023F  2A11               	goto	l2390
  4362     0240                     u1700:
  4363     0240                     l2402:
  4364     0240  082A               	movf	___aldiv@sign,w
  4365     0241  1903               	btfsc	3,2
  4366     0242  2A44               	goto	u1711
  4367     0243  2A45               	goto	u1710
  4368     0244                     u1711:
  4369     0244  2A50               	goto	l2406
  4370     0245                     u1710:
  4371     0245                     l2404:
  4372     0245  09AB               	comf	___aldiv@quotient,f
  4373     0246  09AC               	comf	___aldiv@quotient+1,f
  4374     0247  09AD               	comf	___aldiv@quotient+2,f
  4375     0248  09AE               	comf	___aldiv@quotient+3,f
  4376     0249  0AAB               	incf	___aldiv@quotient,f
  4377     024A  1903               	skipnz
  4378     024B  0AAC               	incf	___aldiv@quotient+1,f
  4379     024C  1903               	skipnz
  4380     024D  0AAD               	incf	___aldiv@quotient+2,f
  4381     024E  1903               	skipnz
  4382     024F  0AAE               	incf	___aldiv@quotient+3,f
  4383     0250                     l2406:
  4384     0250  082E               	movf	___aldiv@quotient+3,w
  4385     0251  00A3               	movwf	?___aldiv+3
  4386     0252  082D               	movf	___aldiv@quotient+2,w
  4387     0253  00A2               	movwf	?___aldiv+2
  4388     0254  082C               	movf	___aldiv@quotient+1,w
  4389     0255  00A1               	movwf	?___aldiv+1
  4390     0256  082B               	movf	___aldiv@quotient,w
  4391     0257  00A0               	movwf	?___aldiv
  4392     0258                     l639:
  4393     0258  0008               	return
  4394     0259                     __end_of___aldiv:
  4395                           
  4396                           	psect	text14
  4397     04E1                     __ptext14:	
  4398 ;; *************** function _SYSTEM_Initialize *****************
  4399 ;; Defined at:
  4400 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4414 ;;      Params:         0       0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 5
  4421 ;; This function calls:
  4422 ;;		_CCP3_Initialize
  4423 ;;		_EUSART_Initialize
  4424 ;;		_OSCILLATOR_Initialize
  4425 ;;		_PIN_MANAGER_Initialize
  4426 ;;		_TMR0_Initialize
  4427 ;;		_TMR1_Initialize
  4428 ;;		_TMR2_Initialize
  4429 ;;		_WDT_Initialize
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435     04E1                     _SYSTEM_Initialize:	
  4436                           ;psect for function _SYSTEM_Initialize
  4437                           
  4438     04E1                     l2288:	
  4439                           ;incstack = 0
  4440                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4441                           
  4442                           
  4443                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4444     04E1  3185  2513  3184   	fcall	_PIN_MANAGER_Initialize
  4445                           
  4446                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4447     04E4  3186  2606  3184   	fcall	_OSCILLATOR_Initialize
  4448                           
  4449                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4450     04E7  3186  2611  3184   	fcall	_WDT_Initialize
  4451                           
  4452                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  4453     04EA  3185  2551  3184   	fcall	_CCP3_Initialize
  4454                           
  4455                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  4456     04ED  3185  253E  3184   	fcall	_TMR2_Initialize
  4457                           
  4458                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  4459     04F0  3185  25A5  3184   	fcall	_TMR1_Initialize
  4460                           
  4461                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  4462     04F3  3185  252A  3184   	fcall	_TMR0_Initialize
  4463                           
  4464                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  4465     04F6  3184  2482  3184   	fcall	_EUSART_Initialize
  4466     04F9                     l129:
  4467     04F9  0008               	return
  4468     04FA                     __end_of_SYSTEM_Initialize:
  4469                           
  4470                           	psect	text15
  4471     0611                     __ptext15:	
  4472 ;; *************** function _WDT_Initialize *****************
  4473 ;; Defined at:
  4474 ;;		line 73 in file "mcc_generated_files/mcc.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4488 ;;      Params:         0       0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 3
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_SYSTEM_Initialize
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502     0611                     _WDT_Initialize:	
  4503                           ;psect for function _WDT_Initialize
  4504                           
  4505     0611                     l2228:	
  4506                           ;incstack = 0
  4507                           ; Regs used in _WDT_Initialize: [wreg]
  4508                           
  4509                           
  4510                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  4511     0611  3016               	movlw	22
  4512     0612  0021               	movlb	1	; select bank1
  4513     0613  0097               	movwf	23	;volatile
  4514     0614                     l135:
  4515     0614  0008               	return
  4516     0615                     __end_of_WDT_Initialize:
  4517                           
  4518                           	psect	text16
  4519     053E                     __ptext16:	
  4520 ;; *************** function _TMR2_Initialize *****************
  4521 ;; Defined at:
  4522 ;;		line 66 in file "mcc_generated_files/tmr2.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;		None
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0, pclath, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4536 ;;      Params:         0       0       0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0
  4539 ;;      Totals:         0       0       0       0       0       0
  4540 ;;Total ram usage:        0 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 4
  4543 ;; This function calls:
  4544 ;;		_TMR2_SetInterruptHandler
  4545 ;; This function is called by:
  4546 ;;		_SYSTEM_Initialize
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550     053E                     _TMR2_Initialize:	
  4551                           ;psect for function _TMR2_Initialize
  4552                           
  4553     053E                     l2242:	
  4554                           ;incstack = 0
  4555                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4556                           
  4557                           
  4558                           ;mcc_generated_files/tmr2.c: 71:     PR2 = 0x4D;
  4559     053E  304D               	movlw	77
  4560     053F  0020               	movlb	0	; select bank0
  4561     0540  009B               	movwf	27	;volatile
  4562     0541                     l2244:
  4563                           
  4564                           ;mcc_generated_files/tmr2.c: 74:     TMR2 = 0x00;
  4565     0541  019A               	clrf	26	;volatile
  4566     0542                     l2246:
  4567                           
  4568                           ;mcc_generated_files/tmr2.c: 77:     PIR1bits.TMR2IF = 0;
  4569     0542  1091               	bcf	17,1	;volatile
  4570     0543                     l2248:
  4571                           
  4572                           ;mcc_generated_files/tmr2.c: 80:     PIE1bits.TMR2IE = 1;
  4573     0543  0021               	movlb	1	; select bank1
  4574     0544  1491               	bsf	17,1	;volatile
  4575     0545                     l2250:
  4576                           
  4577                           ;mcc_generated_files/tmr2.c: 83:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  4578     0545  3015               	movlw	low _TMR2_DefaultInterruptHandler
  4579     0546  0020               	movlb	0	; select bank0
  4580     0547  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  4581     0548  3006               	movlw	high _TMR2_DefaultInterruptHandler
  4582     0549  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  4583     054A  3185  25C9  3185   	fcall	_TMR2_SetInterruptHandler
  4584     054D                     l2252:
  4585                           
  4586                           ;mcc_generated_files/tmr2.c: 86:     T2CON = 0x07;
  4587     054D  3007               	movlw	7
  4588     054E  0020               	movlb	0	; select bank0
  4589     054F  009C               	movwf	28	;volatile
  4590     0550                     l389:
  4591     0550  0008               	return
  4592     0551                     __end_of_TMR2_Initialize:
  4593                           
  4594                           	psect	text17
  4595     05C9                     __ptext17:	
  4596 ;; *************** function _TMR2_SetInterruptHandler *****************
  4597 ;; Defined at:
  4598 ;;		line 134 in file "mcc_generated_files/tmr2.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4601 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4613 ;;      Params:         0       2       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0
  4616 ;;      Totals:         0       2       0       0       0       0
  4617 ;;Total ram usage:        2 bytes
  4618 ;; Hardware stack levels used: 1
  4619 ;; Hardware stack levels required when called: 3
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_TMR2_Initialize
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627     05C9                     _TMR2_SetInterruptHandler:	
  4628                           ;psect for function _TMR2_SetInterruptHandler
  4629                           
  4630     05C9                     l2162:	
  4631                           ;incstack = 0
  4632                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  4633                           
  4634                           
  4635                           ;mcc_generated_files/tmr2.c: 135:     TMR2_InterruptHandler = InterruptHandler;
  4636     05C9  0020               	movlb	0	; select bank0
  4637     05CA  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  4638     05CB  0021               	movlb	1	; select bank1
  4639     05CC  00D5               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  4640     05CD  0020               	movlb	0	; select bank0
  4641     05CE  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  4642     05CF  0021               	movlb	1	; select bank1
  4643     05D0  00D4               	movwf	_TMR2_InterruptHandler^(0+128)
  4644     05D1                     l411:
  4645     05D1  0008               	return
  4646     05D2                     __end_of_TMR2_SetInterruptHandler:
  4647                           
  4648                           	psect	text18
  4649     05A5                     __ptext18:	
  4650 ;; *************** function _TMR1_Initialize *****************
  4651 ;; Defined at:
  4652 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4666 ;;      Params:         0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 3
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_SYSTEM_Initialize
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680     05A5                     _TMR1_Initialize:	
  4681                           ;psect for function _TMR1_Initialize
  4682                           
  4683     05A5                     l2254:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  4686                           
  4687                           
  4688                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  4689     05A5  0020               	movlb	0	; select bank0
  4690     05A6  0199               	clrf	25	;volatile
  4691     05A7                     l2256:
  4692                           
  4693                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0xE1;
  4694     05A7  30E1               	movlw	225
  4695     05A8  0097               	movwf	23	;volatile
  4696     05A9                     l2258:
  4697                           
  4698                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x7B;
  4699     05A9  307B               	movlw	123
  4700     05AA  0096               	movwf	22	;volatile
  4701     05AB                     l2260:
  4702                           
  4703                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  4704     05AB  1011               	bcf	17,0	;volatile
  4705     05AC                     l2262:
  4706                           
  4707                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4708     05AC  0817               	movf	23,w	;volatile
  4709     05AD  00F3               	movwf	_timer1ReloadVal+1	;volatile
  4710     05AE  0816               	movf	22,w	;volatile
  4711     05AF  00F2               	movwf	_timer1ReloadVal	;volatile
  4712     05B0                     l2264:
  4713                           
  4714                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  4715     05B0  3031               	movlw	49
  4716     05B1  0098               	movwf	24	;volatile
  4717     05B2                     l248:
  4718     05B2  0008               	return
  4719     05B3                     __end_of_TMR1_Initialize:
  4720                           
  4721                           	psect	text19
  4722     052A                     __ptext19:	
  4723 ;; *************** function _TMR0_Initialize *****************
  4724 ;; Defined at:
  4725 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4739 ;;      Params:         0       0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 4
  4746 ;; This function calls:
  4747 ;;		_TMR0_SetInterruptHandler
  4748 ;; This function is called by:
  4749 ;;		_SYSTEM_Initialize
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753     052A                     _TMR0_Initialize:	
  4754                           ;psect for function _TMR0_Initialize
  4755                           
  4756     052A                     l2210:	
  4757                           ;incstack = 0
  4758                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4759                           
  4760                           
  4761                           ;mcc_generated_files/tmr0.c: 73:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4762     052A  0021               	movlb	1	; select bank1
  4763     052B  0815               	movf	21,w	;volatile
  4764     052C  39C0               	andlw	192
  4765     052D  3817               	iorlw	23
  4766     052E  0095               	movwf	21	;volatile
  4767     052F                     l2212:
  4768                           
  4769                           ;mcc_generated_files/tmr0.c: 76:     TMR0 = 0x0C;
  4770     052F  300C               	movlw	12
  4771     0530  0020               	movlb	0	; select bank0
  4772     0531  0095               	movwf	21	;volatile
  4773     0532                     l2214:
  4774                           
  4775                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal= 12;
  4776     0532  300C               	movlw	12
  4777     0533  00EE               	movwf	_timer0ReloadVal	;volatile
  4778     0534                     l2216:
  4779                           
  4780                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  4781     0534  110B               	bcf	11,2	;volatile
  4782     0535                     l2218:
  4783                           
  4784                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  4785     0535  168B               	bsf	11,5	;volatile
  4786     0536                     l2220:
  4787                           
  4788                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4789     0536  30FA               	movlw	low _TMR0_DefaultInterruptHandler
  4790     0537  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4791     0538  3004               	movlw	high _TMR0_DefaultInterruptHandler
  4792     0539  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4793     053A  3185  25D2  3185   	fcall	_TMR0_SetInterruptHandler
  4794     053D                     l80:
  4795     053D  0008               	return
  4796     053E                     __end_of_TMR0_Initialize:
  4797                           
  4798                           	psect	text20
  4799     05D2                     __ptext20:	
  4800 ;; *************** function _TMR0_SetInterruptHandler *****************
  4801 ;; Defined at:
  4802 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4805 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4817 ;;      Params:         0       2       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0
  4820 ;;      Totals:         0       2       0       0       0       0
  4821 ;;Total ram usage:        2 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 3
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_TMR0_Initialize
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831     05D2                     _TMR0_SetInterruptHandler:	
  4832                           ;psect for function _TMR0_SetInterruptHandler
  4833                           
  4834     05D2                     l2152:	
  4835                           ;incstack = 0
  4836                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4837                           
  4838                           
  4839                           ;mcc_generated_files/tmr0.c: 130:     TMR0_InterruptHandler = InterruptHandler;
  4840     05D2  0020               	movlb	0	; select bank0
  4841     05D3  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4842     05D4  0021               	movlb	1	; select bank1
  4843     05D5  00DF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  4844     05D6  0020               	movlb	0	; select bank0
  4845     05D7  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4846     05D8  0021               	movlb	1	; select bank1
  4847     05D9  00DE               	movwf	_TMR0_InterruptHandler^(0+128)
  4848     05DA                     l96:
  4849     05DA  0008               	return
  4850     05DB                     __end_of_TMR0_SetInterruptHandler:
  4851                           
  4852                           	psect	text21
  4853     0513                     __ptext21:	
  4854 ;; *************** function _PIN_MANAGER_Initialize *****************
  4855 ;; Defined at:
  4856 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4870 ;;      Params:         0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 3
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_SYSTEM_Initialize
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884     0513                     _PIN_MANAGER_Initialize:	
  4885                           ;psect for function _PIN_MANAGER_Initialize
  4886                           
  4887     0513                     l2196:	
  4888                           ;incstack = 0
  4889                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4890                           
  4891                           
  4892                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4893     0513  0022               	movlb	2	; select bank2
  4894     0514  018C               	clrf	12	;volatile
  4895                           
  4896                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4897     0515  018D               	clrf	13	;volatile
  4898     0516                     l2198:
  4899                           
  4900                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  4901     0516  30FF               	movlw	255
  4902     0517  0021               	movlb	1	; select bank1
  4903     0518  008C               	movwf	12	;volatile
  4904     0519                     l2200:
  4905                           
  4906                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xCF;
  4907     0519  30CF               	movlw	207
  4908     051A  008D               	movwf	13	;volatile
  4909     051B                     l2202:
  4910                           
  4911                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF4;
  4912     051B  30F4               	movlw	244
  4913     051C  0023               	movlb	3	; select bank3
  4914     051D  008D               	movwf	13	;volatile
  4915     051E                     l2204:
  4916                           
  4917                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x17;
  4918     051E  3017               	movlw	23
  4919     051F  008C               	movwf	12	;volatile
  4920                           
  4921                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  4922     0520  0024               	movlb	4	; select bank4
  4923     0521  018D               	clrf	13	;volatile
  4924                           
  4925                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  4926     0522  018C               	clrf	12	;volatile
  4927     0523                     l2206:
  4928                           
  4929                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  4930     0523  0021               	movlb	1	; select bank1
  4931     0524  1795               	bsf	21,7	;volatile
  4932                           
  4933                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  4934     0525  0022               	movlb	2	; select bank2
  4935     0526  019D               	clrf	29	;volatile
  4936     0527                     l2208:
  4937                           
  4938                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  4939     0527  3001               	movlw	1
  4940     0528  009E               	movwf	30	;volatile
  4941     0529                     l56:
  4942     0529  0008               	return
  4943     052A                     __end_of_PIN_MANAGER_Initialize:
  4944                           
  4945                           	psect	text22
  4946     0606                     __ptext22:	
  4947 ;; *************** function _OSCILLATOR_Initialize *****************
  4948 ;; Defined at:
  4949 ;;		line 63 in file "mcc_generated_files/mcc.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4963 ;;      Params:         0       0       0       0       0       0
  4964 ;;      Locals:         0       0       0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0
  4966 ;;      Totals:         0       0       0       0       0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 3
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_SYSTEM_Initialize
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977     0606                     _OSCILLATOR_Initialize:	
  4978                           ;psect for function _OSCILLATOR_Initialize
  4979                           
  4980     0606                     l2222:	
  4981                           ;incstack = 0
  4982                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4983                           
  4984                           
  4985                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x58;
  4986     0606  3058               	movlw	88
  4987     0607  0021               	movlb	1	; select bank1
  4988     0608  0099               	movwf	25	;volatile
  4989     0609                     l2224:
  4990                           
  4991                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4992     0609  0198               	clrf	24	;volatile
  4993     060A                     l2226:
  4994                           
  4995                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  4996     060A  0022               	movlb	2	; select bank2
  4997     060B  0196               	clrf	22	;volatile
  4998     060C                     l132:
  4999     060C  0008               	return
  5000     060D                     __end_of_OSCILLATOR_Initialize:
  5001                           
  5002                           	psect	text23
  5003     0482                     __ptext23:	
  5004 ;; *************** function _EUSART_Initialize *****************
  5005 ;; Defined at:
  5006 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5020 ;;      Params:         0       0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0
  5023 ;;      Totals:         0       0       0       0       0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 4
  5027 ;; This function calls:
  5028 ;;		_EUSART_SetErrorHandler
  5029 ;;		_EUSART_SetFramingErrorHandler
  5030 ;;		_EUSART_SetOverrunErrorHandler
  5031 ;; This function is called by:
  5032 ;;		_SYSTEM_Initialize
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036     0482                     _EUSART_Initialize:	
  5037                           ;psect for function _EUSART_Initialize
  5038                           
  5039     0482                     l2266:	
  5040                           ;incstack = 0
  5041                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5042                           
  5043                           
  5044                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5045     0482  3008               	movlw	8
  5046     0483  0023               	movlb	3	; select bank3
  5047     0484  009F               	movwf	31	;volatile
  5048                           
  5049                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5050     0485  3090               	movlw	144
  5051     0486  009D               	movwf	29	;volatile
  5052                           
  5053                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x04;
  5054     0487  3004               	movlw	4
  5055     0488  009E               	movwf	30	;volatile
  5056                           
  5057                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x19;
  5058     0489  3019               	movlw	25
  5059     048A  009B               	movwf	27	;volatile
  5060     048B                     l2268:
  5061                           
  5062                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5063     048B  019C               	clrf	28	;volatile
  5064     048C                     l2270:
  5065                           
  5066                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5067     048C  3000               	movlw	0
  5068     048D  0020               	movlb	0	; select bank0
  5069     048E  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5070     048F  3000               	movlw	0
  5071     0490  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5072     0491  3185  25E4  3184   	fcall	_EUSART_SetFramingErrorHandler
  5073     0494                     l2272:
  5074                           
  5075                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5076     0494  3000               	movlw	0
  5077     0495  0020               	movlb	0	; select bank0
  5078     0496  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5079     0497  3000               	movlw	0
  5080     0498  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5081     0499  3185  25DB  3184   	fcall	_EUSART_SetOverrunErrorHandler
  5082     049C                     l2274:
  5083                           
  5084                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5085     049C  3000               	movlw	0
  5086     049D  0020               	movlb	0	; select bank0
  5087     049E  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5088     049F  3000               	movlw	0
  5089     04A0  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5090     04A1  3185  25ED  3184   	fcall	_EUSART_SetErrorHandler
  5091     04A4                     l2276:
  5092                           
  5093                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5094     04A4  0020               	movlb	0	; select bank0
  5095     04A5  01ED               	clrf	_eusartRxLastError	;volatile
  5096     04A6                     l178:
  5097     04A6  0008               	return
  5098     04A7                     __end_of_EUSART_Initialize:
  5099                           
  5100                           	psect	text24
  5101     05DB                     __ptext24:	
  5102 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5103 ;; Defined at:
  5104 ;;		line 170 in file "mcc_generated_files/eusart.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5107 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5119 ;;      Params:         0       2       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0
  5122 ;;      Totals:         0       2       0       0       0       0
  5123 ;;Total ram usage:        2 bytes
  5124 ;; Hardware stack levels used: 1
  5125 ;; Hardware stack levels required when called: 3
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_EUSART_Initialize
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133     05DB                     _EUSART_SetOverrunErrorHandler:	
  5134                           ;psect for function _EUSART_SetOverrunErrorHandler
  5135                           
  5136     05DB                     l2156:	
  5137                           ;incstack = 0
  5138                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5139                           
  5140                           
  5141                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  5142     05DB  0020               	movlb	0	; select bank0
  5143     05DC  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5144     05DD  0021               	movlb	1	; select bank1
  5145     05DE  00DB               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5146     05DF  0020               	movlb	0	; select bank0
  5147     05E0  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5148     05E1  0021               	movlb	1	; select bank1
  5149     05E2  00DA               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5150     05E3                     l226:
  5151     05E3  0008               	return
  5152     05E4                     __end_of_EUSART_SetOverrunErrorHandler:
  5153                           
  5154                           	psect	text25
  5155     05E4                     __ptext25:	
  5156 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5157 ;; Defined at:
  5158 ;;		line 166 in file "mcc_generated_files/eusart.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5161 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5173 ;;      Params:         0       2       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0
  5176 ;;      Totals:         0       2       0       0       0       0
  5177 ;;Total ram usage:        2 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; Hardware stack levels required when called: 3
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_EUSART_Initialize
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187     05E4                     _EUSART_SetFramingErrorHandler:	
  5188                           ;psect for function _EUSART_SetFramingErrorHandler
  5189                           
  5190     05E4                     l2154:	
  5191                           ;incstack = 0
  5192                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5193                           
  5194                           
  5195                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  5196     05E4  0020               	movlb	0	; select bank0
  5197     05E5  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5198     05E6  0021               	movlb	1	; select bank1
  5199     05E7  00DD               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5200     05E8  0020               	movlb	0	; select bank0
  5201     05E9  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5202     05EA  0021               	movlb	1	; select bank1
  5203     05EB  00DC               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5204     05EC                     l223:
  5205     05EC  0008               	return
  5206     05ED                     __end_of_EUSART_SetFramingErrorHandler:
  5207                           
  5208                           	psect	text26
  5209     05ED                     __ptext26:	
  5210 ;; *************** function _EUSART_SetErrorHandler *****************
  5211 ;; Defined at:
  5212 ;;		line 174 in file "mcc_generated_files/eusart.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5215 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5227 ;;      Params:         0       2       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0
  5230 ;;      Totals:         0       2       0       0       0       0
  5231 ;;Total ram usage:        2 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; Hardware stack levels required when called: 3
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_EUSART_Initialize
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241     05ED                     _EUSART_SetErrorHandler:	
  5242                           ;psect for function _EUSART_SetErrorHandler
  5243                           
  5244     05ED                     l2158:	
  5245                           ;incstack = 0
  5246                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5247                           
  5248                           
  5249                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  5250     05ED  0020               	movlb	0	; select bank0
  5251     05EE  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5252     05EF  0021               	movlb	1	; select bank1
  5253     05F0  00D9               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5254     05F1  0020               	movlb	0	; select bank0
  5255     05F2  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5256     05F3  0021               	movlb	1	; select bank1
  5257     05F4  00D8               	movwf	_EUSART_ErrorHandler^(0+128)
  5258     05F5                     l229:
  5259     05F5  0008               	return
  5260     05F6                     __end_of_EUSART_SetErrorHandler:
  5261                           
  5262                           	psect	text27
  5263     0551                     __ptext27:	
  5264 ;; *************** function _CCP3_Initialize *****************
  5265 ;; Defined at:
  5266 ;;		line 102 in file "mcc_generated_files/ccp3.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5280 ;;      Params:         0       0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0
  5283 ;;      Totals:         0       0       0       0       0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 4
  5287 ;; This function calls:
  5288 ;;		_CCP3_SetCallBack
  5289 ;; This function is called by:
  5290 ;;		_SYSTEM_Initialize
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294     0551                     _CCP3_Initialize:	
  5295                           ;psect for function _CCP3_Initialize
  5296                           
  5297     0551                     l2230:	
  5298                           ;incstack = 0
  5299                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5300                           
  5301                           
  5302                           ;mcc_generated_files/ccp3.c: 107:  CCP3CON = 0x04;
  5303     0551  3004               	movlw	4
  5304     0552  0026               	movlb	6	; select bank6
  5305     0553  0093               	movwf	19	;volatile
  5306     0554                     l2232:
  5307                           
  5308                           ;mcc_generated_files/ccp3.c: 110:  CCPR3L = 0x00;
  5309     0554  0191               	clrf	17	;volatile
  5310     0555                     l2234:
  5311                           
  5312                           ;mcc_generated_files/ccp3.c: 113:  CCPR3H = 0x00;
  5313     0555  0192               	clrf	18	;volatile
  5314     0556                     l2236:
  5315                           
  5316                           ;mcc_generated_files/ccp3.c: 116:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  5317     0556  3030               	movlw	low _CCP3_DefaultCallBack
  5318     0557  0020               	movlb	0	; select bank0
  5319     0558  00A0               	movwf	CCP3_SetCallBack@customCallBack
  5320     0559  3004               	movlw	high _CCP3_DefaultCallBack
  5321     055A  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  5322     055B  3185  25F6  3185   	fcall	_CCP3_SetCallBack
  5323     055E                     l2238:
  5324                           
  5325                           ;mcc_generated_files/ccp3.c: 120:     PIR3bits.CCP3IF = 0;
  5326     055E  0020               	movlb	0	; select bank0
  5327     055F  1213               	bcf	19,4	;volatile
  5328     0560                     l2240:
  5329                           
  5330                           ;mcc_generated_files/ccp3.c: 123:     PIE3bits.CCP3IE = 1;
  5331     0560  0021               	movlb	1	; select bank1
  5332     0561  1613               	bsf	19,4	;volatile
  5333     0562                     l315:
  5334     0562  0008               	return
  5335     0563                     __end_of_CCP3_Initialize:
  5336                           
  5337                           	psect	text28
  5338     05F6                     __ptext28:	
  5339 ;; *************** function _CCP3_SetCallBack *****************
  5340 ;; Defined at:
  5341 ;;		line 141 in file "mcc_generated_files/ccp3.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  5344 ;;		 -> CCP3_DefaultCallBack(1), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5356 ;;      Params:         0       2       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0
  5359 ;;      Totals:         0       2       0       0       0       0
  5360 ;;Total ram usage:        2 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 3
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_CCP3_Initialize
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370     05F6                     _CCP3_SetCallBack:	
  5371                           ;psect for function _CCP3_SetCallBack
  5372                           
  5373     05F6                     l2160:	
  5374                           ;incstack = 0
  5375                           ; Regs used in _CCP3_SetCallBack: [wreg]
  5376                           
  5377                           
  5378                           ;mcc_generated_files/ccp3.c: 142:     CCP3_CallBack = customCallBack;
  5379     05F6  0020               	movlb	0	; select bank0
  5380     05F7  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
  5381     05F8  0021               	movlb	1	; select bank1
  5382     05F9  00D7               	movwf	(_CCP3_CallBack+1)^(0+128)
  5383     05FA  0020               	movlb	0	; select bank0
  5384     05FB  0820               	movf	CCP3_SetCallBack@customCallBack,w
  5385     05FC  0021               	movlb	1	; select bank1
  5386     05FD  00D6               	movwf	_CCP3_CallBack^(0+128)
  5387     05FE                     l321:
  5388     05FE  0008               	return
  5389     05FF                     __end_of_CCP3_SetCallBack:
  5390                           
  5391                           	psect	intentry
  5392     0004                     __pintentry:	
  5393 ;; *************** function _INTERRUPT_InterruptManager *****************
  5394 ;; Defined at:
  5395 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5409 ;;      Params:         0       0       0       0       0       0
  5410 ;;      Locals:         0       0       0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0       0
  5412 ;;      Totals:         0       0       0       0       0       0
  5413 ;;Total ram usage:        0 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 2
  5416 ;; This function calls:
  5417 ;;		_CCP3_CaptureISR
  5418 ;;		_TMR0_ISR
  5419 ;;		_TMR2_ISR
  5420 ;; This function is called by:
  5421 ;;		Interrupt level 1
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425     0004                     _INTERRUPT_InterruptManager:
  5426                           
  5427                           ;incstack = 0
  5428     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5429                           
  5430                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5431     0005  3180               	pagesel	$
  5432     0006                     i1l2002:
  5433                           
  5434                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5435     0006  1E8B               	btfss	11,5	;volatile
  5436     0007  2809               	goto	u111_21
  5437     0008  280A               	goto	u111_20
  5438     0009                     u111_21:
  5439     0009  2812               	goto	i1l23
  5440     000A                     u111_20:
  5441     000A                     i1l2004:
  5442     000A  1D0B               	btfss	11,2	;volatile
  5443     000B  280D               	goto	u112_21
  5444     000C  280E               	goto	u112_20
  5445     000D                     u112_21:
  5446     000D  2812               	goto	i1l23
  5447     000E                     u112_20:
  5448     000E                     i1l2006:
  5449                           
  5450                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5451     000E  3185  2575  3180   	fcall	_TMR0_ISR
  5452                           
  5453                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5454     0011  2832               	goto	i1l31
  5455     0012                     i1l23:	
  5456                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5457                           
  5458     0012  1F0B               	btfss	11,6	;volatile
  5459     0013  2815               	goto	u113_21
  5460     0014  2816               	goto	u113_20
  5461     0015                     u113_21:
  5462     0015  2832               	goto	i1l31
  5463     0016                     u113_20:
  5464     0016                     i1l2008:
  5465                           
  5466                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP3IE == 1 && PIR3bits.CCP3IF == 1)
  5467     0016  0021               	movlb	1	; select bank1
  5468     0017  1E13               	btfss	19,4	;volatile
  5469     0018  281A               	goto	u114_21
  5470     0019  281B               	goto	u114_20
  5471     001A                     u114_21:
  5472     001A  2824               	goto	i1l26
  5473     001B                     u114_20:
  5474     001B                     i1l2010:
  5475     001B  0020               	movlb	0	; select bank0
  5476     001C  1E13               	btfss	19,4	;volatile
  5477     001D  281F               	goto	u115_21
  5478     001E  2820               	goto	u115_20
  5479     001F                     u115_21:
  5480     001F  2824               	goto	i1l26
  5481     0020                     u115_20:
  5482     0020                     i1l2012:
  5483                           
  5484                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP3_CaptureISR();
  5485     0020  3185  2563  3180   	fcall	_CCP3_CaptureISR
  5486                           
  5487                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5488     0023  2832               	goto	i1l31
  5489     0024                     i1l26:	
  5490                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
  5491                           
  5492     0024  0021               	movlb	1	; select bank1
  5493     0025  1C91               	btfss	17,1	;volatile
  5494     0026  2828               	goto	u116_21
  5495     0027  2829               	goto	u116_20
  5496     0028                     u116_21:
  5497     0028  2832               	goto	i1l30
  5498     0029                     u116_20:
  5499     0029                     i1l2014:
  5500     0029  0020               	movlb	0	; select bank0
  5501     002A  1C91               	btfss	17,1	;volatile
  5502     002B  282D               	goto	u117_21
  5503     002C  282E               	goto	u117_20
  5504     002D                     u117_21:
  5505     002D  2832               	goto	i1l30
  5506     002E                     u117_20:
  5507     002E                     i1l2016:
  5508                           
  5509                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  5510     002E  3185  2596  3180   	fcall	_TMR2_ISR
  5511                           
  5512                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5513     0031  2832               	goto	i1l31
  5514     0032                     i1l30:	
  5515                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5516                           
  5517     0032                     i1l31:
  5518     0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5519     0033  0009               	retfie
  5520     0034                     __end_of_INTERRUPT_InterruptManager:
  5521                           
  5522                           	psect	text30
  5523     0596                     __ptext30:	
  5524 ;; *************** function _TMR2_ISR *****************
  5525 ;; Defined at:
  5526 ;;		line 121 in file "mcc_generated_files/tmr2.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0, pclath, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5540 ;;      Params:         0       0       0       0       0       0
  5541 ;;      Locals:         0       0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0
  5543 ;;      Totals:         0       0       0       0       0       0
  5544 ;;Total ram usage:        0 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 1
  5547 ;; This function calls:
  5548 ;;		NULL
  5549 ;;		_TMR2_DefaultInterruptHandler
  5550 ;; This function is called by:
  5551 ;;		_INTERRUPT_InterruptManager
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555     0596                     _TMR2_ISR:	
  5556                           ;psect for function _TMR2_ISR
  5557                           
  5558     0596                     i1l1976:	
  5559                           ;incstack = 0
  5560                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5561                           
  5562                           
  5563                           ;mcc_generated_files/tmr2.c: 125:     PIR1bits.TMR2IF = 0;
  5564     0596  0020               	movlb	0	; select bank0
  5565     0597  1091               	bcf	17,1	;volatile
  5566     0598                     i1l1978:
  5567                           
  5568                           ;mcc_generated_files/tmr2.c: 127:     if(TMR2_InterruptHandler)
  5569     0598  0021               	movlb	1	; select bank1
  5570     0599  0854               	movf	_TMR2_InterruptHandler^(0+128),w
  5571     059A  0455               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  5572     059B  1903               	btfsc	3,2
  5573     059C  2D9E               	goto	u108_21
  5574     059D  2D9F               	goto	u108_20
  5575     059E                     u108_21:
  5576     059E  2DA4               	goto	i1l408
  5577     059F                     u108_20:
  5578     059F                     i1l1980:
  5579                           
  5580                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 129:         TMR2_In
      +                          terruptHandler();
  5581     059F  0855               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  5582     05A0  008A               	movwf	10
  5583     05A1  0854               	movf	_TMR2_InterruptHandler^(0+128),w
  5584     05A2  000A               	callw
  5585     05A3  3185               	pagesel	$
  5586     05A4                     i1l408:
  5587     05A4  0008               	return
  5588     05A5                     __end_of_TMR2_ISR:
  5589                           
  5590                           	psect	text31
  5591     0615                     __ptext31:	
  5592 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5593 ;; Defined at:
  5594 ;;		line 138 in file "mcc_generated_files/tmr2.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;		None
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		None
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5608 ;;      Params:         0       0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0
  5611 ;;      Totals:         0       0       0       0       0       0
  5612 ;;Total ram usage:        0 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_TMR2_Initialize
  5618 ;;		_TMR2_ISR
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622     0615                     _TMR2_DefaultInterruptHandler:	
  5623                           ;psect for function _TMR2_DefaultInterruptHandler
  5624                           
  5625     0615                     i1l1950:	
  5626                           ;incstack = 0
  5627                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5628                           
  5629                           
  5630                           ;mcc_generated_files/tmr2.c: 140:     flag_capturar=1;
  5631     0615  0020               	movlb	0	; select bank0
  5632     0616  01EC               	clrf	_flag_capturar
  5633     0617  0AEC               	incf	_flag_capturar,f
  5634     0618                     i1l414:
  5635     0618  0008               	return
  5636     0619                     __end_of_TMR2_DefaultInterruptHandler:
  5637                           
  5638                           	psect	text32
  5639     0575                     __ptext32:	
  5640 ;; *************** function _TMR0_ISR *****************
  5641 ;; Defined at:
  5642 ;;		line 112 in file "mcc_generated_files/tmr0.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0, pclath, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5656 ;;      Params:         0       0       0       0       0       0
  5657 ;;      Locals:         0       0       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0
  5659 ;;      Totals:         0       0       0       0       0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 1
  5663 ;; This function calls:
  5664 ;;		NULL
  5665 ;;		_TMR0_DefaultInterruptHandler
  5666 ;; This function is called by:
  5667 ;;		_INTERRUPT_InterruptManager
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671     0575                     _TMR0_ISR:	
  5672                           ;psect for function _TMR0_ISR
  5673                           
  5674     0575                     i1l1962:	
  5675                           ;incstack = 0
  5676                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5677                           
  5678                           
  5679                           ;mcc_generated_files/tmr0.c: 116:     INTCONbits.TMR0IF = 0;
  5680     0575  110B               	bcf	11,2	;volatile
  5681     0576                     i1l1964:
  5682                           
  5683                           ;mcc_generated_files/tmr0.c: 118:     TMR0 = timer0ReloadVal;
  5684     0576  0020               	movlb	0	; select bank0
  5685     0577  086E               	movf	_timer0ReloadVal,w	;volatile
  5686     0578  0095               	movwf	21	;volatile
  5687     0579                     i1l1966:
  5688                           
  5689                           ;mcc_generated_files/tmr0.c: 120:     if(TMR0_InterruptHandler)
  5690     0579  0021               	movlb	1	; select bank1
  5691     057A  085E               	movf	_TMR0_InterruptHandler^(0+128),w
  5692     057B  045F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  5693     057C  1903               	btfsc	3,2
  5694     057D  2D7F               	goto	u107_21
  5695     057E  2D80               	goto	u107_20
  5696     057F                     u107_21:
  5697     057F  2D85               	goto	i1l93
  5698     0580                     u107_20:
  5699     0580                     i1l1968:
  5700                           
  5701                           ;mcc_generated_files/tmr0.c: 121:     {;mcc_generated_files/tmr0.c: 122:         TMR0_In
      +                          terruptHandler();
  5702     0580  085F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  5703     0581  008A               	movwf	10
  5704     0582  085E               	movf	_TMR0_InterruptHandler^(0+128),w
  5705     0583  000A               	callw
  5706     0584  3185               	pagesel	$
  5707     0585                     i1l93:
  5708     0585  0008               	return
  5709     0586                     __end_of_TMR0_ISR:
  5710                           
  5711                           	psect	text33
  5712     04FA                     __ptext33:	
  5713 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5714 ;; Defined at:
  5715 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      void 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5729 ;;      Params:         0       0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0       0
  5731 ;;      Temps:          1       0       0       0       0       0
  5732 ;;      Totals:         1       0       0       0       0       0
  5733 ;;Total ram usage:        1 bytes
  5734 ;; Hardware stack levels used: 1
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_TMR0_Initialize
  5739 ;;		_TMR0_ISR
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743     04FA                     _TMR0_DefaultInterruptHandler:	
  5744                           ;psect for function _TMR0_DefaultInterruptHandler
  5745                           
  5746     04FA                     i1l1872:	
  5747                           ;incstack = 0
  5748                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2]
  5749                           
  5750                           
  5751                           ;mcc_generated_files/tmr0.c: 137:     interrupt_count++;
  5752     04FA  3001               	movlw	1
  5753     04FB  0021               	movlb	1	; select bank1
  5754     04FC  07B0               	addwf	_interrupt_count^(0+128),f
  5755     04FD  3000               	movlw	0
  5756     04FE  3DB1               	addwfc	(_interrupt_count+1)^(0+128),f
  5757                           
  5758                           ;mcc_generated_files/tmr0.c: 138:     if(interrupt_count >=4){
  5759     04FF  0831               	movf	(_interrupt_count+1)^(0+128),w
  5760     0500  3A80               	xorlw	128
  5761     0501  00F7               	movwf	??_TMR0_DefaultInterruptHandler
  5762     0502  3080               	movlw	128
  5763     0503  0277               	subwf	??_TMR0_DefaultInterruptHandler,w
  5764     0504  1D03               	skipz
  5765     0505  2D08               	goto	u104_25
  5766     0506  3004               	movlw	4
  5767     0507  0230               	subwf	_interrupt_count^(0+128),w
  5768     0508                     u104_25:
  5769     0508  1C03               	skipc
  5770     0509  2D0B               	goto	u104_21
  5771     050A  2D0C               	goto	u104_20
  5772     050B                     u104_21:
  5773     050B  2D12               	goto	i1l100
  5774     050C                     u104_20:
  5775     050C                     i1l1874:
  5776                           
  5777                           ;mcc_generated_files/tmr0.c: 139:         flag_blink=1;
  5778     050C  0020               	movlb	0	; select bank0
  5779     050D  01EF               	clrf	_flag_blink
  5780     050E  0AEF               	incf	_flag_blink,f
  5781     050F                     i1l1876:
  5782                           
  5783                           ;mcc_generated_files/tmr0.c: 141:         interrupt_count=0;
  5784     050F  0021               	movlb	1	; select bank1
  5785     0510  01B0               	clrf	_interrupt_count^(0+128)
  5786     0511  01B1               	clrf	(_interrupt_count+1)^(0+128)
  5787     0512                     i1l100:
  5788     0512  0008               	return
  5789     0513                     __end_of_TMR0_DefaultInterruptHandler:
  5790                           
  5791                           	psect	text34
  5792     0563                     __ptext34:	
  5793 ;; *************** function _CCP3_CaptureISR *****************
  5794 ;; Defined at:
  5795 ;;		line 126 in file "mcc_generated_files/ccp3.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  module          2    5[COMMON] struct CCPR3Reg_tag
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5809 ;;      Params:         0       0       0       0       0       0
  5810 ;;      Locals:         2       0       0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0
  5812 ;;      Totals:         2       0       0       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; Hardware stack levels required when called: 1
  5816 ;; This function calls:
  5817 ;;		NULL
  5818 ;;		_CCP3_DefaultCallBack
  5819 ;; This function is called by:
  5820 ;;		_INTERRUPT_InterruptManager
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824     0563                     _CCP3_CaptureISR:	
  5825                           ;psect for function _CCP3_CaptureISR
  5826                           
  5827     0563                     i1l1970:	
  5828                           ;incstack = 0
  5829                           ; Regs used in _CCP3_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  5830                           
  5831                           
  5832                           ;mcc_generated_files/ccp3.c: 128:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 131:     PIR3bits.CCP3IF = 0;
  5833     0563  0020               	movlb	0	; select bank0
  5834     0564  1213               	bcf	19,4	;volatile
  5835     0565                     i1l1972:
  5836                           
  5837                           ;mcc_generated_files/ccp3.c: 134:     module.ccpr3l = CCPR3L;
  5838     0565  0026               	movlb	6	; select bank6
  5839     0566  0811               	movf	17,w	;volatile
  5840     0567  00FC               	movwf	CCP3_CaptureISR@module
  5841                           
  5842                           ;mcc_generated_files/ccp3.c: 135:     module.ccpr3h = CCPR3H;
  5843     0568  0812               	movf	18,w	;volatile
  5844     0569  00FD               	movwf	CCP3_CaptureISR@module+1
  5845     056A                     i1l1974:
  5846                           
  5847                           ;mcc_generated_files/ccp3.c: 138:     CCP3_CallBack(module.ccpr3_16Bit);
  5848     056A  087D               	movf	CCP3_CaptureISR@module+1,w
  5849     056B  00F8               	movwf	CCP3_DefaultCallBack@capturedValue+1
  5850     056C  087C               	movf	CCP3_CaptureISR@module,w
  5851     056D  00F7               	movwf	CCP3_DefaultCallBack@capturedValue
  5852     056E  0021               	movlb	1	; select bank1
  5853     056F  0857               	movf	(_CCP3_CallBack+1)^(0+128),w
  5854     0570  008A               	movwf	10
  5855     0571  0856               	movf	_CCP3_CallBack^(0+128),w
  5856     0572  000A               	callw
  5857     0573  3185               	pagesel	$
  5858     0574                     i1l318:
  5859     0574  0008               	return
  5860     0575                     __end_of_CCP3_CaptureISR:
  5861                           
  5862                           	psect	text35
  5863     0430                     __ptext35:	
  5864 ;; *************** function _CCP3_DefaultCallBack *****************
  5865 ;; Defined at:
  5866 ;;		line 79 in file "mcc_generated_files/ccp3.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  capturedValu    2    0[COMMON] unsigned short 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5880 ;;      Params:         2       0       0       0       0       0
  5881 ;;      Locals:         0       0       0       0       0       0
  5882 ;;      Temps:          3       0       0       0       0       0
  5883 ;;      Totals:         5       0       0       0       0       0
  5884 ;;Total ram usage:        5 bytes
  5885 ;; Hardware stack levels used: 1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_CCP3_Initialize
  5890 ;;		_CCP3_CaptureISR
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894     0430                     _CCP3_DefaultCallBack:	
  5895                           ;psect for function _CCP3_DefaultCallBack
  5896                           
  5897     0430                     i1l1934:	
  5898                           ;incstack = 0
  5899                           ; Regs used in _CCP3_DefaultCallBack: [wreg+status,2+status,0]
  5900                           
  5901                           
  5902                           ;mcc_generated_files/ccp3.c: 79: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 80: {;mcc_generated_files/ccp3.c: 84:     pulses++;
  5903     0430  3001               	movlw	1
  5904     0431  0021               	movlb	1	; select bank1
  5905     0432  07AE               	addwf	_pulses^(0+128),f
  5906     0433  3000               	movlw	0
  5907     0434  3DAF               	addwfc	(_pulses+1)^(0+128),f
  5908     0435                     i1l1936:
  5909                           
  5910                           ;mcc_generated_files/ccp3.c: 85:     dir=PORTBbits.RB3;
  5911     0435  0020               	movlb	0	; select bank0
  5912     0436  0C0D               	rrf	13,w	;volatile
  5913     0437  00F9               	movwf	??_CCP3_DefaultCallBack
  5914     0438  0CF9               	rrf	??_CCP3_DefaultCallBack,f
  5915     0439  0C79               	rrf	??_CCP3_DefaultCallBack,w
  5916     043A  3901               	andlw	1
  5917     043B  00FA               	movwf	??_CCP3_DefaultCallBack+1
  5918     043C  01FB               	clrf	??_CCP3_DefaultCallBack+2
  5919     043D  087A               	movf	??_CCP3_DefaultCallBack+1,w
  5920     043E  0021               	movlb	1	; select bank1
  5921     043F  00AC               	movwf	_dir^(0+128)
  5922     0440  087B               	movf	??_CCP3_DefaultCallBack+2,w
  5923     0441  00AD               	movwf	(_dir+1)^(0+128)
  5924     0442                     i1l1938:
  5925                           
  5926                           ;mcc_generated_files/ccp3.c: 87:     if(pulses>=408)
  5927     0442  082F               	movf	(_pulses+1)^(0+128),w
  5928     0443  3A80               	xorlw	128
  5929     0444  00F9               	movwf	??_CCP3_DefaultCallBack
  5930     0445  3081               	movlw	129
  5931     0446  0279               	subwf	??_CCP3_DefaultCallBack,w
  5932     0447  1D03               	skipz
  5933     0448  2C4B               	goto	u105_25
  5934     0449  3098               	movlw	152
  5935     044A  022E               	subwf	_pulses^(0+128),w
  5936     044B                     u105_25:
  5937     044B  1C03               	skipc
  5938     044C  2C4E               	goto	u105_21
  5939     044D  2C4F               	goto	u105_20
  5940     044E                     u105_21:
  5941     044E  2C5B               	goto	i1l312
  5942     044F                     u105_20:
  5943     044F                     i1l1940:
  5944                           
  5945                           ;mcc_generated_files/ccp3.c: 88:     {;mcc_generated_files/ccp3.c: 89:         flag_upda
      +                          teT=1;
  5946     044F  01F6               	clrf	_flag_updateT
  5947     0450  0AF6               	incf	_flag_updateT,f
  5948     0451                     i1l1942:
  5949                           
  5950                           ;mcc_generated_files/ccp3.c: 90:         pulses=0;
  5951     0451  0021               	movlb	1	; select bank1
  5952     0452  01AE               	clrf	_pulses^(0+128)
  5953     0453  01AF               	clrf	(_pulses+1)^(0+128)
  5954     0454                     i1l1944:
  5955                           
  5956                           ;mcc_generated_files/ccp3.c: 92:         T=capturedValue;
  5957     0454  0878               	movf	CCP3_DefaultCallBack@capturedValue+1,w
  5958     0455  00D3               	movwf	(_T+1)^(0+128)
  5959     0456  0877               	movf	CCP3_DefaultCallBack@capturedValue,w
  5960     0457  00D2               	movwf	_T^(0+128)
  5961     0458                     i1l1946:
  5962                           
  5963                           ;mcc_generated_files/ccp3.c: 95:         TMR1H = 0X00;
  5964     0458  0020               	movlb	0	; select bank0
  5965     0459  0197               	clrf	23	;volatile
  5966     045A                     i1l1948:
  5967                           
  5968                           ;mcc_generated_files/ccp3.c: 96:         TMR1L = 0X00;
  5969     045A  0196               	clrf	22	;volatile
  5970     045B                     i1l312:	
  5971                           ;mcc_generated_files/ccp3.c: 97:     }
  5972                           
  5973     045B  0008               	return
  5974     045C                     __end_of_CCP3_DefaultCallBack:
  5975     007E                     btemp	set	126	;btemp
  5976     007E                     int$flags	set	126
  5977     007E                     wtemp0	set	126
  5978     210C                     
  5979                           	psect	config
  5980                           
  5981                           ;Config register CONFIG1 @ 0x8007
  5982                           ;	Oscillator Selection
  5983                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5984                           ;	Watchdog Timer Enable
  5985                           ;	WDTE = OFF, WDT disabled
  5986                           ;	Power-up Timer Enable
  5987                           ;	PWRTE = OFF, PWRT disabled
  5988                           ;	MCLR Pin Function Select
  5989                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5990                           ;	Flash Program Memory Code Protection
  5991                           ;	CP = OFF, Program memory code protection is disabled
  5992                           ;	Data Memory Code Protection
  5993                           ;	CPD = OFF, Data memory code protection is disabled
  5994                           ;	Brown-out Reset Enable
  5995                           ;	BOREN = ON, Brown-out Reset enabled
  5996                           ;	Clock Out Enable
  5997                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5998                           ;	Internal/External Switchover
  5999                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6000                           ;	Fail-Safe Clock Monitor Enable
  6001                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6002     8007                     	org	32775
  6003     8007  3FE4               	dw	16356
  6004                           
  6005                           ;Config register CONFIG2 @ 0x8008
  6006                           ;	Flash Memory Self-Write Protection
  6007                           ;	WRT = OFF, Write protection off
  6008                           ;	PLL Enable
  6009                           ;	PLLEN = OFF, 4x PLL disabled
  6010                           ;	Stack Overflow/Underflow Reset Enable
  6011                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6012                           ;	Brown-out Reset Voltage Selection
  6013                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6014                           ;	Low-Voltage Programming Enable
  6015                           ;	LVP = ON, Low-voltage programming enabled
  6016     8008                     	org	32776
  6017     8008  3EFF               	dw	16127

Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         63
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     76      80
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            28      0       0
    BANK4             0      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1296$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1296$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1336$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), NULL(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___awmod
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    7618
                                             70 BANK0      6     6      0
                  _SYSTEM_Initialize
                            ___aldiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               7     3      4    6720
                                             65 BANK0      5     1      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5    6549
                                             57 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    15      4    6088
                                             43 BANK0     14    10      4
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                14    10      4    4459
                                             29 BANK0     14    10      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     5      5    2603
                                             19 BANK0     10     5      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     6      2    1185
                                             11 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     919
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8      82
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     726
                    _CCP3_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     121
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0     121
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     122
                    _CCP3_CaptureISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CCP3_CaptureISR                                     2     2      0     122
                                              5 COMMON     2     2      0
                                NULL *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP3_DefaultCallBack                                5     3      2      75
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   ___aldiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _CCP3_CaptureISR
     NULL(Fake) *
     _CCP3_DefaultCallBack *
   _TMR0_ISR
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR2_ISR
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               1C      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      9E      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Oct 06 19:10:10 2023

                       ??_CCP3_DefaultCallBack 0079               __end_of_TMR2_SetInterruptHandler 05D2  
                                            _T 00D2                                              _a 00A4  
                                            _i 0070                                             l56 0529  
                                           l80 053D                                             l96 05DA  
                                 ___awdiv@sign 0026                                _timer0ReloadVal 006E  
                                          l202 05C1                                            l211 0605  
                                          l132 060C                                            l205 05C8  
                                          l223 05EC                                            l135 0614  
                                          l321 05FE                                            l129 04F9  
                                          l226 05E3                                            l315 0562  
                                          l411 05D1                                            l229 05F5  
                                          l248 05B2                                            l178 04A6  
                                          l730 03F7                                            l389 0550  
                                          l629 01DC                                            l717 0344  
                                          l639 0258                                            _PR2 001B  
                                          u700 02F6                                            u701 02F5  
                                          u710 0307                                            u711 0306  
                                          u800 03B5                                            u801 03B4  
                                          u730 0317                                            u810 03C0  
                                          u731 0316                                            u811 03BF  
                                          u900 04D3                                            u725 030B  
                                          u901 04D2                                            u750 0326  
                                          u830 03D0                                            u751 0325  
                                          u831 03CF                                            u840 03DA  
                                          u745 0318                                            u841 03D9  
                                          u825 03C4                                            u905 04CF  
                                          u770 0336                                            u690 02EB  
                                          u771 0335                                            u755 0322  
                                          u691 02EA                                            u780 033B  
                                          u860 03E9                                            u781 033A  
                                          u765 032C                                            u861 03E8  
                                          u845 03D6                                            u870 03EE  
                                          u790 03AA                                            u871 03ED  
                                          u855 03DF                                            u791 03A9  
                              _timer1ReloadVal 0072                                            _abs 04C5  
                                          _dir 00AC                                            _pad 03F8  
                                          _vel 00A0                 ?_EUSART_SetFramingErrorHandler 0020  
                                 ___awmod@sign 0026                                _TMR2_Initialize 053E  
                                          wreg 0009                                           l1104 03A3  
                                         l1112 0481                                           l1027 0595  
                                         ?_abs 0027                                           l2100 0426  
                                         l1060 0080                                           l1053 042F  
                                         l1061 00A1                                           l2110 0073  
                                         l2102 005C                                           l2200 0519  
                                         l1072 0120                                           l2120 0096  
                                         l2112 0079                                           l2104 0064  
                                         l1049 0404                                           l1065 009F  
                                         l2202 051B                                           l2210 052A  
                                         l2130 00C8                                           l2122 009B  
                                         l2114 0088                                           l2106 0069  
                                         l2204 051E                                           l2220 0536  
                                         l2212 052F                                           l1092 04E0  
                                         l2060 05C5                                           l2140 00F5  
                                         l2132 00CC                                           l2124 00A5  
                                         l2116 008D                                           l2108 006E  
                                         l1085 04C4                                           l2230 0551  
                                         l2222 0606                                           l2206 0523  
                                         l2214 0532                                           l2062 0601  
                                         l2070 0357                                           l2142 0102  
                                         l2134 00D0                                           l2126 00A8  
                                         l2118 0091                                           l1079 02E4  
                                         l2160 05F6                                           l2240 0560  
                                         l2232 0554                                           l2224 0609  
                                         l2208 0527                                           l2152 05D2  
                                         l2216 0534                                           l2400 023A  
                                         l2072 0362                                           l2064 0345  
                                         l2080 045E                                           l2144 0108  
                                         l2128 00AD                                           l2136 00E0  
                                         l1089 04E0                                           l2234 0555  
                                         l2154 05E4                                           l2226 060A  
                                         l2218 0535                                           l2162 05C9  
                                         l2250 0545                                           l2242 053E  
                                         l2402 0240                                           l2058 05C1  
                                         l2074 0382                                           l2066 034C  
                                         l2082 0461                                           l2090 03FD  
                                         l2146 010C                                           l2138 00EE  
                                         l2170 027B                                           l2410 0121  
                                         l2236 0556                                           l2156 05DB  
                                         l2260 05AB                                           l2252 054D  
                                         l2244 0541                                           l2228 0611  
                                         l2404 0245                                           l1700 03AA  
                                         l2076 0399                                           l2068 0352  
                                         l2084 046F                                           l2092 0402  
                                         l2148 0112                                           l2180 02A7  
                                         l2172 027F                                           l2164 0259  
                                         l2420 0129                                           l2412 0124  
                                         l2238 055E                                           l2158 05ED  
                                         l2270 048C                                           l2262 05AC  
                                         l2254 05A5                                           l2246 0542  
                                         l2406 0250                                           l1710 03C0  
                                         l1702 03AF                                           l2086 0474  
                                         l2094 0407                                           l2182 02B4  
                                         l2174 0287                                           l2166 026B  
                                         l2190 02CA                                           l2430 0146  
                                         l2422 012F                                           l2414 0125  
                                         l2272 0494                                           l2264 05B0  
                                         l2256 05A7                                           l2248 0543  
                                         l1720 03DA                                           l1712 03C3  
                                         l1704 03B1                                           l2096 0413  
                                         l2088 03F8                                           l2176 0291  
                                         l2168 0273                                           l2280 04AD  
                                         l2440 01A0                                           l2432 017A  
                                         l2424 0132                                           l2416 0126  
                                         l2274 049C                                           l2266 0482  
                                         l2258 05A9                                           l2370 01C9  
                                         l1730 03F3                                           l1722 03DE  
                                         l1714 03C8                                           l1706 03B5  
                                         l2098 0418                                           l2186 02C0  
                                         l2178 029B                                           l2282 04B8  
                                         l2290 0586                                           l2442 01BB  
                                         l2434 0190                                           l2426 0137  
                                         l2418 0128                                           l2276 04A4  
                                         l2268 048B                                           l2196 0513  
                                         l2380 01EF                                           l2372 01CB  
                                         l1660 02F2                                           l1652 02E5  
                                         l1724 03E3                                           l1716 03CC  
                                         l1708 03BA                                           l2284 04C2  
                                         l2292 0589                                           l2428 0144  
                                         l2436 0195                                           l2198 0516  
                                         l2390 0211                                           l2382 01F7  
                                         l2374 01CF                                           l1670 0307  
                                         l1662 02F6                                           l1654 02E7  
                                         l1718 03D0                                           l1726 03E9  
                                         l1750 04D3                                           l2278 04A7  
                                         l2438 019C                                           l2288 04E1  
                                         l2392 0218                                           l2384 01FF  
                                         l2376 01E0                                           l1680 0326  
                                         l1672 030A                                           l1664 02FB  
                                         l1656 02EB                                           l1728 03EE  
                                         l2394 022A                                           l2386 0202  
                                         l2378 01EB                                           l1690 033B  
                                         l1682 032A                                           l1674 030F  
                                         l1666 02FF                                           l1658 02F0  
                                         l2396 0232                                           l2388 020D  
                                         l1692 0340                                           l1684 032B  
                                         l1676 0313                                           l1668 0301  
                                         l1748 04C5                                           l2398 0233  
                                         l1686 0330                                           l1678 0317  
                                         l1688 0336                                           l1696 03A4  
                                         l1698 03A6                                           ?_pad 0033  
                                         STR_1 060D                                           u1300 03FD  
                                         u1301 03FC                                           u1310 0426  
                                         u1311 0425                                           u1240 05C5  
                                         u1400 0102                                           u1320 0062  
                                         u1241 05C4                                           u1401 0101  
                                         u1321 0060                                           u1250 034C  
                                         u1410 0108                                           u1330 0063  
                                         u1251 034B                                           u1315 0422  
                                         u1411 0107                                           u1260 0352  
                                         u1340 0069                                           u1420 026B  
                                         u1261 0351                                           u1405 00FE  
                                         u1341 0068                                           u1421 026A  
                                         _LATA 010C                                           u1270 0362  
                                         u1350 0073                                           u1430 0291  
                                         _LATB 010D                                           u1271 0361  
                                         u1351 0072                                           u1431 0290  
                                         u1280 0382                                           u1360 008D  
                                         u1440 029B                                           u1281 0381  
                                         u1361 008C                                           u1441 029A  
                                         u1290 0481                                           u1370 0096  
                                         u1450 04C2                                           u1291 0480  
                                         u1371 0095                                           u1451 04C1  
                                         u1700 0240                                           u1620 01CF  
                                         u1380 00EE                                           u1701 023F  
                                         u1621 01CE                                           u1285 037E  
                                         u1381 00ED                                           u1710 0245  
                                         u1630 01E0                                           u1390 00F5  
                                         u1711 0244                                           u1631 01DF  
                                         u1391 00F4                                           u1640 01FF  
                                         u1720 012F                                           u1641 01FE  
                                         u1385 00EA                                           u1721 012E  
                                         u1730 0137                                           u1731 0136  
                                         u1660 0211                                           u1740 0144  
                                         u1661 0210                                           u1741 0143  
                                         u1750 0155                                           u1655 0203  
                                         u1680 022A                                           u1760 019C  
                                         u1681 0229                                           u1761 019B  
                                         u1745 0140                                           u1770 01C6  
                                         u1675 0212                                           u1771 01C5  
                                         u1755 0151                                           u1685 0226  
                                         u1695 0234                                           i1l30 0032  
                                         i1l31 0032                                           i1l23 0012  
                                         i1l26 0024                                           i1l93 0585  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         abs@a 0027                                           _dbuf 00B2  
                                         _main 0121                                           _dtoa 005C  
                                         _prec 00AA                                           pad@i 0039  
                                         pad@p 0036                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 003B  
                                         btemp 007E                                           start 0034  
                                        ??_abs 0029                                          ??_pad 0038  
                      __end_of_TMR0_Initialize 053E                 ??_TMR0_DefaultInterruptHandler 0077  
                                ?_EUSART_Write 0077                  __end_of_OSCILLATOR_Initialize 060D  
                              __end_of___aldiv 0259                        __end_of_CCP3_Initialize 0563  
                                        ?_main 0077                                          ?_dtoa 003D  
                              __end_of___awdiv 0345                                __end_of___awmod 03F8  
                              ___awdiv@divisor 0020                                          _T1CON 0018  
                                        _T2CON 001C                                          i1l100 0512  
                                        i1l312 045B                                          i1l318 0574  
                                        i1l414 0618                                          i1l408 05A4  
                              ___awdiv@counter 0025                                          _RCREG 0199  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 004D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0020                               __end_of_TMR0_ISR 0586  
                             __end_of_TMR2_ISR 05A5                                          _flags 0074  
                               _WDT_Initialize 0611                                          _fputc 0345  
                                        _fputs 045C                                          pad@fp 0033  
                                        _width 00A8                                          _putch 05FF  
                                        main@j 006A                                          dtoa@d 003F  
                                        dtoa@i 0049                                          dtoa@p 0044  
                                        dtoa@s 0048                                          dtoa@w 0046  
                      __end_of_TMR1_Initialize 05B3                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __initialization 0036                               ?_CCP3_CaptureISR 0077  
                                 __end_of_main 01C9                                   __end_of_dtoa 0121  
                               ??_EUSART_Write 0020                        __end_of_TMR2_Initialize 0551  
                  ?_INTERRUPT_InterruptManager 0077                       _TMR2_SetInterruptHandler 05C9  
                                       ??_main 0066                                         ??_dtoa 0041  
                       __end_of_WDT_Initialize 0615              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00DA                                         ?_fputc 0022  
                                       ?_fputs 002B                                         _CCPR3H 0312  
                                       _CCPR3L 0311                               ___awdiv@dividend 0022  
                                       _ANSELA 018C                                         ?_putch 0077  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l2010 001B  
                                       i1l2002 0006                                         i1l2012 0020  
                                       i1l2004 000A                                         i1l2014 0029  
                                       i1l2006 000E                                         i1l2016 002E  
                                       i1l2008 0016                                         u111_20 000A  
                                       u111_21 0009                                         u104_20 050C  
                                       u112_20 000E                                         u104_21 050B  
                                       u112_21 000D                                         u104_25 0508  
                                       u105_20 044F                                         u113_20 0016  
                                       u105_21 044E                                         u113_21 0015  
                                       u105_25 044B                                         u114_20 001B  
                                       u114_21 001A                                         i1l1940 044F  
                                       i1l1942 0451                                         i1l1934 0430  
                                       i1l1950 0615                                         i1l1944 0454  
                                       i1l1936 0435                                         i1l1872 04FA  
                                       u107_20 0580                                         u115_20 0020  
                                       u107_21 057F                                         u115_21 001F  
                                       i1l1946 0458                                         i1l1938 0442  
                                       i1l1970 0563                                         i1l1874 050C  
                                       i1l1962 0575                                         i1l1948 045A  
                                       i1l1972 0565                                         i1l1876 050F  
                                       i1l1964 0576                                         i1l1980 059F  
                                       i1l1974 056A                                         i1l1966 0579  
                                       i1l1968 0580                                         u108_20 059F  
                                       i1l1976 0596                                         u116_20 0029  
                                       u108_21 059E                                         u116_21 0028  
                                       i1l1978 0598                                         u117_20 002E  
                                       u117_21 002D                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                       __end_of_CCP3_SetCallBack 05FF  
                                 vfprintf@cfmt 005F                                      ??___aldiv 0028  
                                    ??___awdiv 0024                                      ??___awmod 0024  
                                _CCP3_CallBack 00D6                               ?_TMR0_Initialize 0077  
                             ___awdiv@quotient 0027                                ___awmod@divisor 0020  
                              ___awmod@counter 0025                                         _printf 0586  
                                       pad@buf 0035                                         _pulses 00AE  
                                       dtoa@fp 003D                               ?_CCP3_Initialize 0077  
                                       fputc@c 0022                                         fputs@c 0030  
                                       fputs@i 0031                                         fputs@s 002F  
                              ?_WDT_Initialize 0077                               __end_of_vfprintf 04C5  
     TMR2_SetInterruptHandler@InterruptHandler 0020       TMR0_SetInterruptHandler@InterruptHandler 0020  
                             ?_TMR1_Initialize 0077                              _SYSTEM_Initialize 04E1  
                      __end_of__initialization 0058                             ?_SYSTEM_Initialize 0077  
                               __pcstackCOMMON 0077                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR0_ISR 0077                                      ?_TMR2_ISR 0077  
                                __end_of_fputc 03A4                                  __end_of_fputs 0482  
                                __end_of_putch 0606                               ?_TMR2_Initialize 0077  
                        CCP3_CaptureISR@module 007C                                 _OPTION_REGbits 0095  
               CCP3_SetCallBack@customCallBack 0020                ??_EUSART_SetOverrunErrorHandler 0022  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 04FA  
                                      ??_fputs 002D                                        ??_putch 0021  
                                   __pbssBANK0 006C                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 05C9                                     __pmaintext 0121  
             __end_of_TMR0_SetInterruptHandler 05DB                                     ??_TMR0_ISR 0078  
                                   ??_TMR2_ISR 0077                                     __pintentry 0004  
                                      _CCP3CON 0313                                        _BAUDCON 019F  
                                   _flag_blink 006F                                        _APFCON0 011D  
                                      _APFCON1 011E                                        ?_printf 0061  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0022  
                   ??_TMR2_SetInterruptHandler 0022                                        ___aldiv 01C9  
                                      ___awdiv 02E5                                        ___awmod 03A4  
                                 _flag_updateT 0076                                   _flag_startTX 0075  
                                    ?_vfprintf 0059                                        __ptext1 0586  
                                      __ptext2 04A7                                        __ptext3 0259  
                                      __ptext4 005C                                        __ptext5 03F8  
                                      __ptext6 045C                                        __ptext7 0345  
                                      __ptext8 05FF                                        __ptext9 05BF  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0606  
                                    _T2CONbits 001C                               ___awmod@dividend 0022  
                             ___aldiv@dividend 0024                       ??_PIN_MANAGER_Initialize 0020  
                                      clrloop0 05B4                           end_of_initialization 0058  
        __end_of_EUSART_SetOverrunErrorHandler 05E4                  _EUSART_SetOverrunErrorHandler 05DB  
                                      fputc@fp 0024                                        fputs@fp 002B  
                            _EUSART_Initialize 0482                             ?_EUSART_Initialize 0077  
                            __end_of_vfpfcnvrt 02E5                              ?_CCP3_SetCallBack 0020  
                                    _RCSTAbits 019D                               ___aldiv@quotient 002B  
                             vfpfcnvrt@convarg 0053                             ??_CCP3_SetCallBack 0022  
                                   ??_vfprintf 005E                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                       _TMR0_SetInterruptHandler 05D2  
                                    _PORTBbits 000D                                     _transiente 210C  
                    __end_of_EUSART_Initialize 04A7                                      _TXSTAbits 019E  
         __end_of_TMR2_DefaultInterruptHandler 0619                   _TMR2_DefaultInterruptHandler 0615  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 004E  
                                  vfpfcnvrt@cp 0057                                    vfpfcnvrt@fp 004B  
                                 _EUSART_Write 05BF                         ?_OSCILLATOR_Initialize 0077  
                               __end_of_printf 0596                            start_initialization 0036  
                                  __end_of_abs 04E1                                    __end_of_pad 0430  
                                  putch@txData 0021                 ?_EUSART_SetOverrunErrorHandler 0020  
                                  vfprintf@fmt 005B                     _EUSART_FramingErrorHandler 00DC  
                       _EUSART_SetErrorHandler 05ED                  ?_TMR2_DefaultInterruptHandler 0077  
                                     ??_printf 0065                                    __pbssBIGRAM 210C  
                                  __pbssCOMMON 0070                                      ___latbits 0001  
                                __pcstackBANK0 0020                              ??_CCP3_CaptureISR 007C  
                 __end_of_CCP3_DefaultCallBack 045C                          _TMR0_InterruptHandler 00DE  
                                    __pnvBANK1 00D4                         _PIN_MANAGER_Initialize 0513  
                                    _dtoa$1363 0042                                       ?___aldiv 0020  
                                     ?___awdiv 0020              CCP3_DefaultCallBack@capturedValue 0077  
                                     ?___awmod 0020                   ??_INTERRUPT_InterruptManager 007E  
                              ___aldiv@divisor 0020                              ??_TMR0_Initialize 0022  
                              ___aldiv@counter 0029         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                      clear_ram0 05B3  
                            ??_CCP3_Initialize 0022                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 006D  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _PIR3bits 0013  
                                     _TMR0_ISR 0575              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR2_ISR 0596                                      _vfpfcnvrt 0259  
                            ??_TMR1_Initialize 0020                 ??_TMR2_DefaultInterruptHandler 0077  
                    ?_TMR2_SetInterruptHandler 0020                                  _flag_capturar 006C  
                            ??_TMR2_Initialize 0022                                     vfprintf@ap 005D  
                                   vfprintf@fp 0059                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 00D8                           _CCP3_DefaultCallBack 0430  
                                   ?_vfpfcnvrt 004B                                       __ptext10 04C5  
                                     __ptext11 03A4                                       __ptext20 05D2  
                                     __ptext12 02E5                                       __ptext21 0513  
                                     __ptext13 01C9                                     _T1GCONbits 0019  
                                     __ptext30 0596                                       __ptext22 0606  
                                     __ptext14 04E1                                       __ptext31 0615  
                                     __ptext23 0482                                       __ptext15 0611  
                                     __ptext32 0575                                       __ptext24 05DB  
                                     __ptext16 053E                                       __ptext33 04FA  
                                     __ptext25 05E4                                       __ptext17 05C9  
                                     __ptext34 0563                                       __ptext26 05ED  
                                     __ptext18 05A5                                       __ptext35 0430  
                                     __ptext27 0551                                       __ptext19 052A  
                                     __ptext28 05F6           __end_of_TMR0_DefaultInterruptHandler 0513  
                 _TMR0_DefaultInterruptHandler 04FA                        ?_EUSART_SetErrorHandler 0020  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                                       int$flags 007E  
                        ?_CCP3_DefaultCallBack 0077                                       _vfprintf 04A7  
           __end_of_INTERRUPT_InterruptManager 0034                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0061          __end_of_EUSART_SetFramingErrorHandler 05ED  
                _EUSART_SetFramingErrorHandler 05E4                                _CCP3_CaptureISR 0563  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0077                 __end_of_EUSART_SetErrorHandler 05F6  
                              _interrupt_count 00B0                  ?_TMR0_DefaultInterruptHandler 0077  
                                     printf@ap 0065  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                                  ??_vfpfcnvrt 004F                                  __pstringtext1 060D  
                                __pstringtext2 0000                                     _OPTION_REG 0095  
                              _TMR0_Initialize 052A                               _CCP3_SetCallBack 05F6  
                                 ___aldiv@sign 002A                                _CCP3_Initialize 0551  
                           EUSART_Write@txData 0020                 __end_of_PIN_MANAGER_Initialize 052A  
                        _TMR2_InterruptHandler 00D4                                _TMR1_Initialize 05A5  
                      __end_of_CCP3_CaptureISR 0575  

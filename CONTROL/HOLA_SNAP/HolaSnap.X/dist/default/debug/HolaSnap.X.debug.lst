

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 05 08:42:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Version 2.40
    52                           ; Generated 04/07/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1827 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0008                     	;# 
    95     0009                     	;# 
    96     000A                     	;# 
    97     000B                     	;# 
    98     000C                     	;# 
    99     000D                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0014                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0016                     	;# 
   107     0017                     	;# 
   108     0018                     	;# 
   109     0019                     	;# 
   110     001A                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0191                     	;# 
   150     0191                     	;# 
   151     0192                     	;# 
   152     0193                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0194                     	;# 
   156     0195                     	;# 
   157     0196                     	;# 
   158     0199                     	;# 
   159     019A                     	;# 
   160     019B                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019C                     	;# 
   165     019C                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     020C                     	;# 
   170     020D                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0216                     	;# 
   183     0216                     	;# 
   184     0217                     	;# 
   185     0217                     	;# 
   186     0219                     	;# 
   187     021A                     	;# 
   188     021B                     	;# 
   189     021C                     	;# 
   190     021D                     	;# 
   191     021E                     	;# 
   192     021F                     	;# 
   193     0291                     	;# 
   194     0291                     	;# 
   195     0292                     	;# 
   196     0293                     	;# 
   197     0294                     	;# 
   198     0295                     	;# 
   199     0295                     	;# 
   200     0296                     	;# 
   201     0298                     	;# 
   202     0298                     	;# 
   203     0299                     	;# 
   204     029A                     	;# 
   205     029B                     	;# 
   206     029C                     	;# 
   207     029C                     	;# 
   208     029D                     	;# 
   209     029E                     	;# 
   210     029E                     	;# 
   211     0311                     	;# 
   212     0311                     	;# 
   213     0312                     	;# 
   214     0313                     	;# 
   215     0318                     	;# 
   216     0318                     	;# 
   217     0319                     	;# 
   218     031A                     	;# 
   219     0394                     	;# 
   220     0395                     	;# 
   221     0396                     	;# 
   222     039A                     	;# 
   223     039C                     	;# 
   224     039D                     	;# 
   225     039E                     	;# 
   226     039F                     	;# 
   227     0415                     	;# 
   228     0416                     	;# 
   229     0417                     	;# 
   230     041C                     	;# 
   231     041D                     	;# 
   232     041E                     	;# 
   233     0FE4                     	;# 
   234     0FE5                     	;# 
   235     0FE6                     	;# 
   236     0FE7                     	;# 
   237     0FE8                     	;# 
   238     0FE9                     	;# 
   239     0FEA                     	;# 
   240     0FEB                     	;# 
   241     0FED                     	;# 
   242     0FEE                     	;# 
   243     0FEF                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001E                     	;# 
   272     001F                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     0111                     	;# 
   293     0112                     	;# 
   294     0113                     	;# 
   295     0114                     	;# 
   296     0115                     	;# 
   297     0116                     	;# 
   298     0117                     	;# 
   299     0118                     	;# 
   300     0119                     	;# 
   301     011A                     	;# 
   302     011B                     	;# 
   303     011D                     	;# 
   304     011E                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0191                     	;# 
   308     0191                     	;# 
   309     0192                     	;# 
   310     0193                     	;# 
   311     0193                     	;# 
   312     0193                     	;# 
   313     0194                     	;# 
   314     0195                     	;# 
   315     0196                     	;# 
   316     0199                     	;# 
   317     019A                     	;# 
   318     019B                     	;# 
   319     019B                     	;# 
   320     019B                     	;# 
   321     019B                     	;# 
   322     019C                     	;# 
   323     019C                     	;# 
   324     019D                     	;# 
   325     019E                     	;# 
   326     019F                     	;# 
   327     020C                     	;# 
   328     020D                     	;# 
   329     0211                     	;# 
   330     0211                     	;# 
   331     0212                     	;# 
   332     0212                     	;# 
   333     0213                     	;# 
   334     0213                     	;# 
   335     0214                     	;# 
   336     0214                     	;# 
   337     0215                     	;# 
   338     0215                     	;# 
   339     0215                     	;# 
   340     0216                     	;# 
   341     0216                     	;# 
   342     0217                     	;# 
   343     0217                     	;# 
   344     0219                     	;# 
   345     021A                     	;# 
   346     021B                     	;# 
   347     021C                     	;# 
   348     021D                     	;# 
   349     021E                     	;# 
   350     021F                     	;# 
   351     0291                     	;# 
   352     0291                     	;# 
   353     0292                     	;# 
   354     0293                     	;# 
   355     0294                     	;# 
   356     0295                     	;# 
   357     0295                     	;# 
   358     0296                     	;# 
   359     0298                     	;# 
   360     0298                     	;# 
   361     0299                     	;# 
   362     029A                     	;# 
   363     029B                     	;# 
   364     029C                     	;# 
   365     029C                     	;# 
   366     029D                     	;# 
   367     029E                     	;# 
   368     029E                     	;# 
   369     0311                     	;# 
   370     0311                     	;# 
   371     0312                     	;# 
   372     0313                     	;# 
   373     0318                     	;# 
   374     0318                     	;# 
   375     0319                     	;# 
   376     031A                     	;# 
   377     0394                     	;# 
   378     0395                     	;# 
   379     0396                     	;# 
   380     039A                     	;# 
   381     039C                     	;# 
   382     039D                     	;# 
   383     039E                     	;# 
   384     039F                     	;# 
   385     0415                     	;# 
   386     0416                     	;# 
   387     0417                     	;# 
   388     041C                     	;# 
   389     041D                     	;# 
   390     041E                     	;# 
   391     0FE4                     	;# 
   392     0FE5                     	;# 
   393     0FE6                     	;# 
   394     0FE7                     	;# 
   395     0FE8                     	;# 
   396     0FE9                     	;# 
   397     0FEA                     	;# 
   398     0FEB                     	;# 
   399     0FED                     	;# 
   400     0FEE                     	;# 
   401     0FEF                     	;# 
   402     0000                     	;# 
   403     0001                     	;# 
   404     0002                     	;# 
   405     0003                     	;# 
   406     0004                     	;# 
   407     0005                     	;# 
   408     0006                     	;# 
   409     0007                     	;# 
   410     0008                     	;# 
   411     0009                     	;# 
   412     000A                     	;# 
   413     000B                     	;# 
   414     000C                     	;# 
   415     000D                     	;# 
   416     0011                     	;# 
   417     0012                     	;# 
   418     0013                     	;# 
   419     0014                     	;# 
   420     0015                     	;# 
   421     0016                     	;# 
   422     0016                     	;# 
   423     0017                     	;# 
   424     0018                     	;# 
   425     0019                     	;# 
   426     001A                     	;# 
   427     001B                     	;# 
   428     001C                     	;# 
   429     001E                     	;# 
   430     001F                     	;# 
   431     008C                     	;# 
   432     008D                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0094                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009B                     	;# 
   445     009C                     	;# 
   446     009D                     	;# 
   447     009E                     	;# 
   448     010C                     	;# 
   449     010D                     	;# 
   450     0111                     	;# 
   451     0112                     	;# 
   452     0113                     	;# 
   453     0114                     	;# 
   454     0115                     	;# 
   455     0116                     	;# 
   456     0117                     	;# 
   457     0118                     	;# 
   458     0119                     	;# 
   459     011A                     	;# 
   460     011B                     	;# 
   461     011D                     	;# 
   462     011E                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     0191                     	;# 
   466     0191                     	;# 
   467     0192                     	;# 
   468     0193                     	;# 
   469     0193                     	;# 
   470     0193                     	;# 
   471     0194                     	;# 
   472     0195                     	;# 
   473     0196                     	;# 
   474     0199                     	;# 
   475     019A                     	;# 
   476     019B                     	;# 
   477     019B                     	;# 
   478     019B                     	;# 
   479     019B                     	;# 
   480     019C                     	;# 
   481     019C                     	;# 
   482     019D                     	;# 
   483     019E                     	;# 
   484     019F                     	;# 
   485     020C                     	;# 
   486     020D                     	;# 
   487     0211                     	;# 
   488     0211                     	;# 
   489     0212                     	;# 
   490     0212                     	;# 
   491     0213                     	;# 
   492     0213                     	;# 
   493     0214                     	;# 
   494     0214                     	;# 
   495     0215                     	;# 
   496     0215                     	;# 
   497     0215                     	;# 
   498     0216                     	;# 
   499     0216                     	;# 
   500     0217                     	;# 
   501     0217                     	;# 
   502     0219                     	;# 
   503     021A                     	;# 
   504     021B                     	;# 
   505     021C                     	;# 
   506     021D                     	;# 
   507     021E                     	;# 
   508     021F                     	;# 
   509     0291                     	;# 
   510     0291                     	;# 
   511     0292                     	;# 
   512     0293                     	;# 
   513     0294                     	;# 
   514     0295                     	;# 
   515     0295                     	;# 
   516     0296                     	;# 
   517     0298                     	;# 
   518     0298                     	;# 
   519     0299                     	;# 
   520     029A                     	;# 
   521     029B                     	;# 
   522     029C                     	;# 
   523     029C                     	;# 
   524     029D                     	;# 
   525     029E                     	;# 
   526     029E                     	;# 
   527     0311                     	;# 
   528     0311                     	;# 
   529     0312                     	;# 
   530     0313                     	;# 
   531     0318                     	;# 
   532     0318                     	;# 
   533     0319                     	;# 
   534     031A                     	;# 
   535     0394                     	;# 
   536     0395                     	;# 
   537     0396                     	;# 
   538     039A                     	;# 
   539     039C                     	;# 
   540     039D                     	;# 
   541     039E                     	;# 
   542     039F                     	;# 
   543     0415                     	;# 
   544     0416                     	;# 
   545     0417                     	;# 
   546     041C                     	;# 
   547     041D                     	;# 
   548     041E                     	;# 
   549     0FE4                     	;# 
   550     0FE5                     	;# 
   551     0FE6                     	;# 
   552     0FE7                     	;# 
   553     0FE8                     	;# 
   554     0FE9                     	;# 
   555     0FEA                     	;# 
   556     0FEB                     	;# 
   557     0FED                     	;# 
   558     0FEE                     	;# 
   559     0FEF                     	;# 
   560     0000                     	;# 
   561     0001                     	;# 
   562     0002                     	;# 
   563     0003                     	;# 
   564     0004                     	;# 
   565     0005                     	;# 
   566     0006                     	;# 
   567     0007                     	;# 
   568     0008                     	;# 
   569     0009                     	;# 
   570     000A                     	;# 
   571     000B                     	;# 
   572     000C                     	;# 
   573     000D                     	;# 
   574     0011                     	;# 
   575     0012                     	;# 
   576     0013                     	;# 
   577     0014                     	;# 
   578     0015                     	;# 
   579     0016                     	;# 
   580     0016                     	;# 
   581     0017                     	;# 
   582     0018                     	;# 
   583     0019                     	;# 
   584     001A                     	;# 
   585     001B                     	;# 
   586     001C                     	;# 
   587     001E                     	;# 
   588     001F                     	;# 
   589     008C                     	;# 
   590     008D                     	;# 
   591     0091                     	;# 
   592     0092                     	;# 
   593     0093                     	;# 
   594     0094                     	;# 
   595     0095                     	;# 
   596     0096                     	;# 
   597     0097                     	;# 
   598     0098                     	;# 
   599     0099                     	;# 
   600     009A                     	;# 
   601     009B                     	;# 
   602     009B                     	;# 
   603     009C                     	;# 
   604     009D                     	;# 
   605     009E                     	;# 
   606     010C                     	;# 
   607     010D                     	;# 
   608     0111                     	;# 
   609     0112                     	;# 
   610     0113                     	;# 
   611     0114                     	;# 
   612     0115                     	;# 
   613     0116                     	;# 
   614     0117                     	;# 
   615     0118                     	;# 
   616     0119                     	;# 
   617     011A                     	;# 
   618     011B                     	;# 
   619     011D                     	;# 
   620     011E                     	;# 
   621     018C                     	;# 
   622     018D                     	;# 
   623     0191                     	;# 
   624     0191                     	;# 
   625     0192                     	;# 
   626     0193                     	;# 
   627     0193                     	;# 
   628     0193                     	;# 
   629     0194                     	;# 
   630     0195                     	;# 
   631     0196                     	;# 
   632     0199                     	;# 
   633     019A                     	;# 
   634     019B                     	;# 
   635     019B                     	;# 
   636     019B                     	;# 
   637     019B                     	;# 
   638     019C                     	;# 
   639     019C                     	;# 
   640     019D                     	;# 
   641     019E                     	;# 
   642     019F                     	;# 
   643     020C                     	;# 
   644     020D                     	;# 
   645     0211                     	;# 
   646     0211                     	;# 
   647     0212                     	;# 
   648     0212                     	;# 
   649     0213                     	;# 
   650     0213                     	;# 
   651     0214                     	;# 
   652     0214                     	;# 
   653     0215                     	;# 
   654     0215                     	;# 
   655     0215                     	;# 
   656     0216                     	;# 
   657     0216                     	;# 
   658     0217                     	;# 
   659     0217                     	;# 
   660     0219                     	;# 
   661     021A                     	;# 
   662     021B                     	;# 
   663     021C                     	;# 
   664     021D                     	;# 
   665     021E                     	;# 
   666     021F                     	;# 
   667     0291                     	;# 
   668     0291                     	;# 
   669     0292                     	;# 
   670     0293                     	;# 
   671     0294                     	;# 
   672     0295                     	;# 
   673     0295                     	;# 
   674     0296                     	;# 
   675     0298                     	;# 
   676     0298                     	;# 
   677     0299                     	;# 
   678     029A                     	;# 
   679     029B                     	;# 
   680     029C                     	;# 
   681     029C                     	;# 
   682     029D                     	;# 
   683     029E                     	;# 
   684     029E                     	;# 
   685     0311                     	;# 
   686     0311                     	;# 
   687     0312                     	;# 
   688     0313                     	;# 
   689     0318                     	;# 
   690     0318                     	;# 
   691     0319                     	;# 
   692     031A                     	;# 
   693     0394                     	;# 
   694     0395                     	;# 
   695     0396                     	;# 
   696     039A                     	;# 
   697     039C                     	;# 
   698     039D                     	;# 
   699     039E                     	;# 
   700     039F                     	;# 
   701     0415                     	;# 
   702     0416                     	;# 
   703     0417                     	;# 
   704     041C                     	;# 
   705     041D                     	;# 
   706     041E                     	;# 
   707     0FE4                     	;# 
   708     0FE5                     	;# 
   709     0FE6                     	;# 
   710     0FE7                     	;# 
   711     0FE8                     	;# 
   712     0FE9                     	;# 
   713     0FEA                     	;# 
   714     0FEB                     	;# 
   715     0FED                     	;# 
   716     0FEE                     	;# 
   717     0FEF                     	;# 
   718     0000                     	;# 
   719     0001                     	;# 
   720     0002                     	;# 
   721     0003                     	;# 
   722     0004                     	;# 
   723     0005                     	;# 
   724     0006                     	;# 
   725     0007                     	;# 
   726     0008                     	;# 
   727     0009                     	;# 
   728     000A                     	;# 
   729     000B                     	;# 
   730     000C                     	;# 
   731     000D                     	;# 
   732     0011                     	;# 
   733     0012                     	;# 
   734     0013                     	;# 
   735     0014                     	;# 
   736     0015                     	;# 
   737     0016                     	;# 
   738     0016                     	;# 
   739     0017                     	;# 
   740     0018                     	;# 
   741     0019                     	;# 
   742     001A                     	;# 
   743     001B                     	;# 
   744     001C                     	;# 
   745     001E                     	;# 
   746     001F                     	;# 
   747     008C                     	;# 
   748     008D                     	;# 
   749     0091                     	;# 
   750     0092                     	;# 
   751     0093                     	;# 
   752     0094                     	;# 
   753     0095                     	;# 
   754     0096                     	;# 
   755     0097                     	;# 
   756     0098                     	;# 
   757     0099                     	;# 
   758     009A                     	;# 
   759     009B                     	;# 
   760     009B                     	;# 
   761     009C                     	;# 
   762     009D                     	;# 
   763     009E                     	;# 
   764     010C                     	;# 
   765     010D                     	;# 
   766     0111                     	;# 
   767     0112                     	;# 
   768     0113                     	;# 
   769     0114                     	;# 
   770     0115                     	;# 
   771     0116                     	;# 
   772     0117                     	;# 
   773     0118                     	;# 
   774     0119                     	;# 
   775     011A                     	;# 
   776     011B                     	;# 
   777     011D                     	;# 
   778     011E                     	;# 
   779     018C                     	;# 
   780     018D                     	;# 
   781     0191                     	;# 
   782     0191                     	;# 
   783     0192                     	;# 
   784     0193                     	;# 
   785     0193                     	;# 
   786     0193                     	;# 
   787     0194                     	;# 
   788     0195                     	;# 
   789     0196                     	;# 
   790     0199                     	;# 
   791     019A                     	;# 
   792     019B                     	;# 
   793     019B                     	;# 
   794     019B                     	;# 
   795     019B                     	;# 
   796     019C                     	;# 
   797     019C                     	;# 
   798     019D                     	;# 
   799     019E                     	;# 
   800     019F                     	;# 
   801     020C                     	;# 
   802     020D                     	;# 
   803     0211                     	;# 
   804     0211                     	;# 
   805     0212                     	;# 
   806     0212                     	;# 
   807     0213                     	;# 
   808     0213                     	;# 
   809     0214                     	;# 
   810     0214                     	;# 
   811     0215                     	;# 
   812     0215                     	;# 
   813     0215                     	;# 
   814     0216                     	;# 
   815     0216                     	;# 
   816     0217                     	;# 
   817     0217                     	;# 
   818     0219                     	;# 
   819     021A                     	;# 
   820     021B                     	;# 
   821     021C                     	;# 
   822     021D                     	;# 
   823     021E                     	;# 
   824     021F                     	;# 
   825     0291                     	;# 
   826     0291                     	;# 
   827     0292                     	;# 
   828     0293                     	;# 
   829     0294                     	;# 
   830     0295                     	;# 
   831     0295                     	;# 
   832     0296                     	;# 
   833     0298                     	;# 
   834     0298                     	;# 
   835     0299                     	;# 
   836     029A                     	;# 
   837     029B                     	;# 
   838     029C                     	;# 
   839     029C                     	;# 
   840     029D                     	;# 
   841     029E                     	;# 
   842     029E                     	;# 
   843     0311                     	;# 
   844     0311                     	;# 
   845     0312                     	;# 
   846     0313                     	;# 
   847     0318                     	;# 
   848     0318                     	;# 
   849     0319                     	;# 
   850     031A                     	;# 
   851     0394                     	;# 
   852     0395                     	;# 
   853     0396                     	;# 
   854     039A                     	;# 
   855     039C                     	;# 
   856     039D                     	;# 
   857     039E                     	;# 
   858     039F                     	;# 
   859     0415                     	;# 
   860     0416                     	;# 
   861     0417                     	;# 
   862     041C                     	;# 
   863     041D                     	;# 
   864     041E                     	;# 
   865     0FE4                     	;# 
   866     0FE5                     	;# 
   867     0FE6                     	;# 
   868     0FE7                     	;# 
   869     0FE8                     	;# 
   870     0FE9                     	;# 
   871     0FEA                     	;# 
   872     0FEB                     	;# 
   873     0FED                     	;# 
   874     0FEE                     	;# 
   875     0FEF                     	;# 
   876     0000                     	;# 
   877     0001                     	;# 
   878     0002                     	;# 
   879     0003                     	;# 
   880     0004                     	;# 
   881     0005                     	;# 
   882     0006                     	;# 
   883     0007                     	;# 
   884     0008                     	;# 
   885     0009                     	;# 
   886     000A                     	;# 
   887     000B                     	;# 
   888     000C                     	;# 
   889     000D                     	;# 
   890     0011                     	;# 
   891     0012                     	;# 
   892     0013                     	;# 
   893     0014                     	;# 
   894     0015                     	;# 
   895     0016                     	;# 
   896     0016                     	;# 
   897     0017                     	;# 
   898     0018                     	;# 
   899     0019                     	;# 
   900     001A                     	;# 
   901     001B                     	;# 
   902     001C                     	;# 
   903     001E                     	;# 
   904     001F                     	;# 
   905     008C                     	;# 
   906     008D                     	;# 
   907     0091                     	;# 
   908     0092                     	;# 
   909     0093                     	;# 
   910     0094                     	;# 
   911     0095                     	;# 
   912     0096                     	;# 
   913     0097                     	;# 
   914     0098                     	;# 
   915     0099                     	;# 
   916     009A                     	;# 
   917     009B                     	;# 
   918     009B                     	;# 
   919     009C                     	;# 
   920     009D                     	;# 
   921     009E                     	;# 
   922     010C                     	;# 
   923     010D                     	;# 
   924     0111                     	;# 
   925     0112                     	;# 
   926     0113                     	;# 
   927     0114                     	;# 
   928     0115                     	;# 
   929     0116                     	;# 
   930     0117                     	;# 
   931     0118                     	;# 
   932     0119                     	;# 
   933     011A                     	;# 
   934     011B                     	;# 
   935     011D                     	;# 
   936     011E                     	;# 
   937     018C                     	;# 
   938     018D                     	;# 
   939     0191                     	;# 
   940     0191                     	;# 
   941     0192                     	;# 
   942     0193                     	;# 
   943     0193                     	;# 
   944     0193                     	;# 
   945     0194                     	;# 
   946     0195                     	;# 
   947     0196                     	;# 
   948     0199                     	;# 
   949     019A                     	;# 
   950     019B                     	;# 
   951     019B                     	;# 
   952     019B                     	;# 
   953     019B                     	;# 
   954     019C                     	;# 
   955     019C                     	;# 
   956     019D                     	;# 
   957     019E                     	;# 
   958     019F                     	;# 
   959     020C                     	;# 
   960     020D                     	;# 
   961     0211                     	;# 
   962     0211                     	;# 
   963     0212                     	;# 
   964     0212                     	;# 
   965     0213                     	;# 
   966     0213                     	;# 
   967     0214                     	;# 
   968     0214                     	;# 
   969     0215                     	;# 
   970     0215                     	;# 
   971     0215                     	;# 
   972     0216                     	;# 
   973     0216                     	;# 
   974     0217                     	;# 
   975     0217                     	;# 
   976     0219                     	;# 
   977     021A                     	;# 
   978     021B                     	;# 
   979     021C                     	;# 
   980     021D                     	;# 
   981     021E                     	;# 
   982     021F                     	;# 
   983     0291                     	;# 
   984     0291                     	;# 
   985     0292                     	;# 
   986     0293                     	;# 
   987     0294                     	;# 
   988     0295                     	;# 
   989     0295                     	;# 
   990     0296                     	;# 
   991     0298                     	;# 
   992     0298                     	;# 
   993     0299                     	;# 
   994     029A                     	;# 
   995     029B                     	;# 
   996     029C                     	;# 
   997     029C                     	;# 
   998     029D                     	;# 
   999     029E                     	;# 
  1000     029E                     	;# 
  1001     0311                     	;# 
  1002     0311                     	;# 
  1003     0312                     	;# 
  1004     0313                     	;# 
  1005     0318                     	;# 
  1006     0318                     	;# 
  1007     0319                     	;# 
  1008     031A                     	;# 
  1009     0394                     	;# 
  1010     0395                     	;# 
  1011     0396                     	;# 
  1012     039A                     	;# 
  1013     039C                     	;# 
  1014     039D                     	;# 
  1015     039E                     	;# 
  1016     039F                     	;# 
  1017     0415                     	;# 
  1018     0416                     	;# 
  1019     0417                     	;# 
  1020     041C                     	;# 
  1021     041D                     	;# 
  1022     041E                     	;# 
  1023     0FE4                     	;# 
  1024     0FE5                     	;# 
  1025     0FE6                     	;# 
  1026     0FE7                     	;# 
  1027     0FE8                     	;# 
  1028     0FE9                     	;# 
  1029     0FEA                     	;# 
  1030     0FEB                     	;# 
  1031     0FED                     	;# 
  1032     0FEE                     	;# 
  1033     0FEF                     	;# 
  1034     0000                     	;# 
  1035     0001                     	;# 
  1036     0002                     	;# 
  1037     0003                     	;# 
  1038     0004                     	;# 
  1039     0005                     	;# 
  1040     0006                     	;# 
  1041     0007                     	;# 
  1042     0008                     	;# 
  1043     0009                     	;# 
  1044     000A                     	;# 
  1045     000B                     	;# 
  1046     000C                     	;# 
  1047     000D                     	;# 
  1048     0011                     	;# 
  1049     0012                     	;# 
  1050     0013                     	;# 
  1051     0014                     	;# 
  1052     0015                     	;# 
  1053     0016                     	;# 
  1054     0016                     	;# 
  1055     0017                     	;# 
  1056     0018                     	;# 
  1057     0019                     	;# 
  1058     001A                     	;# 
  1059     001B                     	;# 
  1060     001C                     	;# 
  1061     001E                     	;# 
  1062     001F                     	;# 
  1063     008C                     	;# 
  1064     008D                     	;# 
  1065     0091                     	;# 
  1066     0092                     	;# 
  1067     0093                     	;# 
  1068     0094                     	;# 
  1069     0095                     	;# 
  1070     0096                     	;# 
  1071     0097                     	;# 
  1072     0098                     	;# 
  1073     0099                     	;# 
  1074     009A                     	;# 
  1075     009B                     	;# 
  1076     009B                     	;# 
  1077     009C                     	;# 
  1078     009D                     	;# 
  1079     009E                     	;# 
  1080     010C                     	;# 
  1081     010D                     	;# 
  1082     0111                     	;# 
  1083     0112                     	;# 
  1084     0113                     	;# 
  1085     0114                     	;# 
  1086     0115                     	;# 
  1087     0116                     	;# 
  1088     0117                     	;# 
  1089     0118                     	;# 
  1090     0119                     	;# 
  1091     011A                     	;# 
  1092     011B                     	;# 
  1093     011D                     	;# 
  1094     011E                     	;# 
  1095     018C                     	;# 
  1096     018D                     	;# 
  1097     0191                     	;# 
  1098     0191                     	;# 
  1099     0192                     	;# 
  1100     0193                     	;# 
  1101     0193                     	;# 
  1102     0193                     	;# 
  1103     0194                     	;# 
  1104     0195                     	;# 
  1105     0196                     	;# 
  1106     0199                     	;# 
  1107     019A                     	;# 
  1108     019B                     	;# 
  1109     019B                     	;# 
  1110     019B                     	;# 
  1111     019B                     	;# 
  1112     019C                     	;# 
  1113     019C                     	;# 
  1114     019D                     	;# 
  1115     019E                     	;# 
  1116     019F                     	;# 
  1117     020C                     	;# 
  1118     020D                     	;# 
  1119     0211                     	;# 
  1120     0211                     	;# 
  1121     0212                     	;# 
  1122     0212                     	;# 
  1123     0213                     	;# 
  1124     0213                     	;# 
  1125     0214                     	;# 
  1126     0214                     	;# 
  1127     0215                     	;# 
  1128     0215                     	;# 
  1129     0215                     	;# 
  1130     0216                     	;# 
  1131     0216                     	;# 
  1132     0217                     	;# 
  1133     0217                     	;# 
  1134     0219                     	;# 
  1135     021A                     	;# 
  1136     021B                     	;# 
  1137     021C                     	;# 
  1138     021D                     	;# 
  1139     021E                     	;# 
  1140     021F                     	;# 
  1141     0291                     	;# 
  1142     0291                     	;# 
  1143     0292                     	;# 
  1144     0293                     	;# 
  1145     0294                     	;# 
  1146     0295                     	;# 
  1147     0295                     	;# 
  1148     0296                     	;# 
  1149     0298                     	;# 
  1150     0298                     	;# 
  1151     0299                     	;# 
  1152     029A                     	;# 
  1153     029B                     	;# 
  1154     029C                     	;# 
  1155     029C                     	;# 
  1156     029D                     	;# 
  1157     029E                     	;# 
  1158     029E                     	;# 
  1159     0311                     	;# 
  1160     0311                     	;# 
  1161     0312                     	;# 
  1162     0313                     	;# 
  1163     0318                     	;# 
  1164     0318                     	;# 
  1165     0319                     	;# 
  1166     031A                     	;# 
  1167     0394                     	;# 
  1168     0395                     	;# 
  1169     0396                     	;# 
  1170     039A                     	;# 
  1171     039C                     	;# 
  1172     039D                     	;# 
  1173     039E                     	;# 
  1174     039F                     	;# 
  1175     0415                     	;# 
  1176     0416                     	;# 
  1177     0417                     	;# 
  1178     041C                     	;# 
  1179     041D                     	;# 
  1180     041E                     	;# 
  1181     0FE4                     	;# 
  1182     0FE5                     	;# 
  1183     0FE6                     	;# 
  1184     0FE7                     	;# 
  1185     0FE8                     	;# 
  1186     0FE9                     	;# 
  1187     0FEA                     	;# 
  1188     0FEB                     	;# 
  1189     0FED                     	;# 
  1190     0FEE                     	;# 
  1191     0FEF                     	;# 
  1192     0000                     	;# 
  1193     0001                     	;# 
  1194     0002                     	;# 
  1195     0003                     	;# 
  1196     0004                     	;# 
  1197     0005                     	;# 
  1198     0006                     	;# 
  1199     0007                     	;# 
  1200     0008                     	;# 
  1201     0009                     	;# 
  1202     000A                     	;# 
  1203     000B                     	;# 
  1204     000C                     	;# 
  1205     000D                     	;# 
  1206     0011                     	;# 
  1207     0012                     	;# 
  1208     0013                     	;# 
  1209     0014                     	;# 
  1210     0015                     	;# 
  1211     0016                     	;# 
  1212     0016                     	;# 
  1213     0017                     	;# 
  1214     0018                     	;# 
  1215     0019                     	;# 
  1216     001A                     	;# 
  1217     001B                     	;# 
  1218     001C                     	;# 
  1219     001E                     	;# 
  1220     001F                     	;# 
  1221     008C                     	;# 
  1222     008D                     	;# 
  1223     0091                     	;# 
  1224     0092                     	;# 
  1225     0093                     	;# 
  1226     0094                     	;# 
  1227     0095                     	;# 
  1228     0096                     	;# 
  1229     0097                     	;# 
  1230     0098                     	;# 
  1231     0099                     	;# 
  1232     009A                     	;# 
  1233     009B                     	;# 
  1234     009B                     	;# 
  1235     009C                     	;# 
  1236     009D                     	;# 
  1237     009E                     	;# 
  1238     010C                     	;# 
  1239     010D                     	;# 
  1240     0111                     	;# 
  1241     0112                     	;# 
  1242     0113                     	;# 
  1243     0114                     	;# 
  1244     0115                     	;# 
  1245     0116                     	;# 
  1246     0117                     	;# 
  1247     0118                     	;# 
  1248     0119                     	;# 
  1249     011A                     	;# 
  1250     011B                     	;# 
  1251     011D                     	;# 
  1252     011E                     	;# 
  1253     018C                     	;# 
  1254     018D                     	;# 
  1255     0191                     	;# 
  1256     0191                     	;# 
  1257     0192                     	;# 
  1258     0193                     	;# 
  1259     0193                     	;# 
  1260     0193                     	;# 
  1261     0194                     	;# 
  1262     0195                     	;# 
  1263     0196                     	;# 
  1264     0199                     	;# 
  1265     019A                     	;# 
  1266     019B                     	;# 
  1267     019B                     	;# 
  1268     019B                     	;# 
  1269     019B                     	;# 
  1270     019C                     	;# 
  1271     019C                     	;# 
  1272     019D                     	;# 
  1273     019E                     	;# 
  1274     019F                     	;# 
  1275     020C                     	;# 
  1276     020D                     	;# 
  1277     0211                     	;# 
  1278     0211                     	;# 
  1279     0212                     	;# 
  1280     0212                     	;# 
  1281     0213                     	;# 
  1282     0213                     	;# 
  1283     0214                     	;# 
  1284     0214                     	;# 
  1285     0215                     	;# 
  1286     0215                     	;# 
  1287     0215                     	;# 
  1288     0216                     	;# 
  1289     0216                     	;# 
  1290     0217                     	;# 
  1291     0217                     	;# 
  1292     0219                     	;# 
  1293     021A                     	;# 
  1294     021B                     	;# 
  1295     021C                     	;# 
  1296     021D                     	;# 
  1297     021E                     	;# 
  1298     021F                     	;# 
  1299     0291                     	;# 
  1300     0291                     	;# 
  1301     0292                     	;# 
  1302     0293                     	;# 
  1303     0294                     	;# 
  1304     0295                     	;# 
  1305     0295                     	;# 
  1306     0296                     	;# 
  1307     0298                     	;# 
  1308     0298                     	;# 
  1309     0299                     	;# 
  1310     029A                     	;# 
  1311     029B                     	;# 
  1312     029C                     	;# 
  1313     029C                     	;# 
  1314     029D                     	;# 
  1315     029E                     	;# 
  1316     029E                     	;# 
  1317     0311                     	;# 
  1318     0311                     	;# 
  1319     0312                     	;# 
  1320     0313                     	;# 
  1321     0318                     	;# 
  1322     0318                     	;# 
  1323     0319                     	;# 
  1324     031A                     	;# 
  1325     0394                     	;# 
  1326     0395                     	;# 
  1327     0396                     	;# 
  1328     039A                     	;# 
  1329     039C                     	;# 
  1330     039D                     	;# 
  1331     039E                     	;# 
  1332     039F                     	;# 
  1333     0415                     	;# 
  1334     0416                     	;# 
  1335     0417                     	;# 
  1336     041C                     	;# 
  1337     041D                     	;# 
  1338     041E                     	;# 
  1339     0FE4                     	;# 
  1340     0FE5                     	;# 
  1341     0FE6                     	;# 
  1342     0FE7                     	;# 
  1343     0FE8                     	;# 
  1344     0FE9                     	;# 
  1345     0FEA                     	;# 
  1346     0FEB                     	;# 
  1347     0FED                     	;# 
  1348     0FEE                     	;# 
  1349     0FEF                     	;# 
  1350     0000                     	;# 
  1351     0001                     	;# 
  1352     0002                     	;# 
  1353     0003                     	;# 
  1354     0004                     	;# 
  1355     0005                     	;# 
  1356     0006                     	;# 
  1357     0007                     	;# 
  1358     0008                     	;# 
  1359     0009                     	;# 
  1360     000A                     	;# 
  1361     000B                     	;# 
  1362     000C                     	;# 
  1363     000D                     	;# 
  1364     0011                     	;# 
  1365     0012                     	;# 
  1366     0013                     	;# 
  1367     0014                     	;# 
  1368     0015                     	;# 
  1369     0016                     	;# 
  1370     0016                     	;# 
  1371     0017                     	;# 
  1372     0018                     	;# 
  1373     0019                     	;# 
  1374     001A                     	;# 
  1375     001B                     	;# 
  1376     001C                     	;# 
  1377     001E                     	;# 
  1378     001F                     	;# 
  1379     008C                     	;# 
  1380     008D                     	;# 
  1381     0091                     	;# 
  1382     0092                     	;# 
  1383     0093                     	;# 
  1384     0094                     	;# 
  1385     0095                     	;# 
  1386     0096                     	;# 
  1387     0097                     	;# 
  1388     0098                     	;# 
  1389     0099                     	;# 
  1390     009A                     	;# 
  1391     009B                     	;# 
  1392     009B                     	;# 
  1393     009C                     	;# 
  1394     009D                     	;# 
  1395     009E                     	;# 
  1396     010C                     	;# 
  1397     010D                     	;# 
  1398     0111                     	;# 
  1399     0112                     	;# 
  1400     0113                     	;# 
  1401     0114                     	;# 
  1402     0115                     	;# 
  1403     0116                     	;# 
  1404     0117                     	;# 
  1405     0118                     	;# 
  1406     0119                     	;# 
  1407     011A                     	;# 
  1408     011B                     	;# 
  1409     011D                     	;# 
  1410     011E                     	;# 
  1411     018C                     	;# 
  1412     018D                     	;# 
  1413     0191                     	;# 
  1414     0191                     	;# 
  1415     0192                     	;# 
  1416     0193                     	;# 
  1417     0193                     	;# 
  1418     0193                     	;# 
  1419     0194                     	;# 
  1420     0195                     	;# 
  1421     0196                     	;# 
  1422     0199                     	;# 
  1423     019A                     	;# 
  1424     019B                     	;# 
  1425     019B                     	;# 
  1426     019B                     	;# 
  1427     019B                     	;# 
  1428     019C                     	;# 
  1429     019C                     	;# 
  1430     019D                     	;# 
  1431     019E                     	;# 
  1432     019F                     	;# 
  1433     020C                     	;# 
  1434     020D                     	;# 
  1435     0211                     	;# 
  1436     0211                     	;# 
  1437     0212                     	;# 
  1438     0212                     	;# 
  1439     0213                     	;# 
  1440     0213                     	;# 
  1441     0214                     	;# 
  1442     0214                     	;# 
  1443     0215                     	;# 
  1444     0215                     	;# 
  1445     0215                     	;# 
  1446     0216                     	;# 
  1447     0216                     	;# 
  1448     0217                     	;# 
  1449     0217                     	;# 
  1450     0219                     	;# 
  1451     021A                     	;# 
  1452     021B                     	;# 
  1453     021C                     	;# 
  1454     021D                     	;# 
  1455     021E                     	;# 
  1456     021F                     	;# 
  1457     0291                     	;# 
  1458     0291                     	;# 
  1459     0292                     	;# 
  1460     0293                     	;# 
  1461     0294                     	;# 
  1462     0295                     	;# 
  1463     0295                     	;# 
  1464     0296                     	;# 
  1465     0298                     	;# 
  1466     0298                     	;# 
  1467     0299                     	;# 
  1468     029A                     	;# 
  1469     029B                     	;# 
  1470     029C                     	;# 
  1471     029C                     	;# 
  1472     029D                     	;# 
  1473     029E                     	;# 
  1474     029E                     	;# 
  1475     0311                     	;# 
  1476     0311                     	;# 
  1477     0312                     	;# 
  1478     0313                     	;# 
  1479     0318                     	;# 
  1480     0318                     	;# 
  1481     0319                     	;# 
  1482     031A                     	;# 
  1483     0394                     	;# 
  1484     0395                     	;# 
  1485     0396                     	;# 
  1486     039A                     	;# 
  1487     039C                     	;# 
  1488     039D                     	;# 
  1489     039E                     	;# 
  1490     039F                     	;# 
  1491     0415                     	;# 
  1492     0416                     	;# 
  1493     0417                     	;# 
  1494     041C                     	;# 
  1495     041D                     	;# 
  1496     041E                     	;# 
  1497     0FE4                     	;# 
  1498     0FE5                     	;# 
  1499     0FE6                     	;# 
  1500     0FE7                     	;# 
  1501     0FE8                     	;# 
  1502     0FE9                     	;# 
  1503     0FEA                     	;# 
  1504     0FEB                     	;# 
  1505     0FED                     	;# 
  1506     0FEE                     	;# 
  1507     0FEF                     	;# 
  1508                           
  1509 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1510     0000                     
  1511 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1512     0000                     
  1513 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1514     0000                     
  1515                           	psect	nvCOMMON
  1516     007D                     __pnvCOMMON:
  1517     007D                     _timer0ReloadVal:
  1518     007D                     	ds	1
  1519                           
  1520                           	psect	nvBANK1
  1521     00D3                     __pnvBANK1:
  1522     00D3                     _CCP3_CallBack:
  1523     00D3                     	ds	2
  1524     00D5                     _timer1ReloadVal:
  1525     00D5                     	ds	2
  1526     00D7                     _EUSART_ErrorHandler:
  1527     00D7                     	ds	2
  1528     00D9                     _EUSART_OverrunErrorHandler:
  1529     00D9                     	ds	2
  1530     00DB                     _EUSART_FramingErrorHandler:
  1531     00DB                     	ds	2
  1532     00DD                     _TMR0_InterruptHandler:
  1533     00DD                     	ds	2
  1534     000D                     _PORTBbits	set	13
  1535     0019                     _T1GCONbits	set	25
  1536     0018                     _T1CONbits	set	24
  1537     0018                     _T1CON	set	24
  1538     0016                     _TMR1L	set	22
  1539     0017                     _TMR1H	set	23
  1540     0019                     _T1GCON	set	25
  1541     0011                     _PIR1bits	set	17
  1542     0015                     _TMR0	set	21
  1543     0013                     _PIR3bits	set	19
  1544     000B                     _INTCONbits	set	11
  1545     0097                     _WDTCON	set	151
  1546     0098                     _OSCTUNE	set	152
  1547     0099                     _OSCCON	set	153
  1548     0095                     _OPTION_REG	set	149
  1549     0095                     _OPTION_REGbits	set	149
  1550     008D                     _TRISB	set	141
  1551     008C                     _TRISA	set	140
  1552     0093                     _PIE3bits	set	147
  1553     010D                     _LATBbits	set	269
  1554     0116                     _BORCON	set	278
  1555     011E                     _APFCON1	set	286
  1556     011D                     _APFCON0	set	285
  1557     010D                     _LATB	set	269
  1558     010C                     _LATA	set	268
  1559     019A                     _TXREG	set	410
  1560     0199                     _RCREG	set	409
  1561     019D                     _RCSTAbits	set	413
  1562     019E                     _TXSTAbits	set	414
  1563     019C                     _SPBRGH	set	412
  1564     019B                     _SPBRGL	set	411
  1565     019E                     _TXSTA	set	414
  1566     019D                     _RCSTA	set	413
  1567     019F                     _BAUDCON	set	415
  1568     018C                     _ANSELA	set	396
  1569     018D                     _ANSELB	set	397
  1570     020C                     _WPUA	set	524
  1571     020D                     _WPUB	set	525
  1572     0312                     _CCPR3H	set	786
  1573     0311                     _CCPR3L	set	785
  1574     0313                     _CCP3CON	set	787
  1575                           
  1576                           	psect	stringtext1
  1577     077E                     __pstringtext1:
  1578     077E                     STR_2:
  1579     077E  3425               	retlw	37	;'%'
  1580     077F  346C               	retlw	108	;'l'
  1581     0780  3464               	retlw	100	;'d'
  1582     0781  340D               	retlw	13
  1583     0782  340A               	retlw	10
  1584     0783  3400               	retlw	0
  1585                           
  1586                           	psect	stringtext2
  1587     078A                     __pstringtext2:
  1588     078A                     STR_1:
  1589     078A  3425               	retlw	37	;'%'
  1590     078B  3464               	retlw	100	;'d'
  1591     078C  342C               	retlw	44	;','
  1592     078D  3400               	retlw	0
  1593                           
  1594                           	psect	stringtext3
  1595     0000                     __pstringtext3:
  1596                           
  1597                           	psect	cinit
  1598     0028                     start_initialization:	
  1599                           ; #config settings
  1600                           
  1601     0028                     __initialization:
  1602                           
  1603                           ; Clear objects allocated to COMMON
  1604     0028  01F7               	clrf	__pbssCOMMON& (0+127)
  1605     0029  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1606     002A  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1607     002B  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  1608     002C  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  1609     002D  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  1610                           
  1611                           ; Clear objects allocated to BANK1
  1612     002E  30A0               	movlw	low __pbssBANK1
  1613     002F  0084               	movwf	4
  1614     0030  3000               	movlw	high __pbssBANK1
  1615     0031  0085               	movwf	5
  1616     0032  3033               	movlw	51
  1617     0033  3187  2784  3180   	fcall	clear_ram0
  1618     0036                     end_of_initialization:	
  1619                           ;End of C runtime variable initialization code
  1620                           
  1621     0036                     __end_of__initialization:
  1622     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1623     0037  0020               	movlb	0
  1624     0038  3184  2CE3         	ljmp	_main	;jump to C main() function
  1625                           
  1626                           	psect	bssCOMMON
  1627     0077                     __pbssCOMMON:
  1628     0077                     _prec:
  1629     0077                     	ds	2
  1630     0079                     _interrupt_count:
  1631     0079                     	ds	2
  1632     007B                     _flags:
  1633     007B                     	ds	1
  1634     007C                     _eusartRxLastError:
  1635     007C                     	ds	1
  1636                           
  1637                           	psect	bssBANK1
  1638     00A0                     __pbssBANK1:
  1639     00A0                     _vel:
  1640     00A0                     	ds	4
  1641     00A4                     _a:
  1642     00A4                     	ds	4
  1643     00A8                     _width:
  1644     00A8                     	ds	2
  1645     00AA                     _dir:
  1646     00AA                     	ds	2
  1647     00AC                     _pulses:
  1648     00AC                     	ds	2
  1649     00AE                     _flag_updateT:
  1650     00AE                     	ds	1
  1651     00AF                     _flag_blink:
  1652     00AF                     	ds	1
  1653     00B0                     _flag_startTX:
  1654     00B0                     	ds	1
  1655     00B1                     _dbuf:
  1656     00B1                     	ds	32
  1657     00D1                     _T:
  1658     00D1                     	ds	2
  1659                           
  1660                           	psect	clrtext
  1661     0784                     clear_ram0:	
  1662                           ;	Called with FSR0 containing the base address, and
  1663                           ;	WREG with the size to clear
  1664                           
  1665     0784  0064               	clrwdt	;clear the watchdog before getting into this loop
  1666     0785                     clrloop0:
  1667     0785  0180               	clrf	0	;clear RAM location pointed to by FSR
  1668     0786  3101               	addfsr 0,1
  1669     0787  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1670     0788  2F85               	goto	clrloop0	;have we reached the end yet?
  1671     0789  3400               	retlw	0	;all done for this memory range, return
  1672                           
  1673                           	psect	cstackBANK1
  1674     00DF                     __pcstackBANK1:
  1675     00DF                     ?_printf:
  1676     00DF                     printf@fmt:	
  1677                           ; 2 bytes @ 0x0
  1678                           
  1679                           
  1680                           ; 2 bytes @ 0x0
  1681     00DF                     	ds	6
  1682     00E5                     ??_main:
  1683                           
  1684                           ; 1 bytes @ 0x6
  1685     00E5                     	ds	4
  1686                           
  1687                           	psect	cstackCOMMON
  1688     0070                     __pcstackCOMMON:
  1689     0070                     ?_TMR0_ISR:
  1690     0070                     ?_CCP3_CaptureISR:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_TMR0_DefaultInterruptHandler:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ??_TMR0_DefaultInterruptHandler:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_OSCILLATOR_Initialize:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ?_WDT_Initialize:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ?_CCP3_Initialize:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ?_TMR1_Initialize:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0070                     ?_EUSART_Initialize:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0070                     ?_INTERRUPT_InterruptManager:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0070                     ?_PIN_MANAGER_Initialize:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0070                     ?_TMR0_Initialize:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723     0070                     ?_SYSTEM_Initialize:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726     0070                     ?_EUSART_Write:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729     0070                     ?_putch:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0070                     ?_CCP3_DefaultCallBack:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0070                     ?_main:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0070                     CCP3_DefaultCallBack@capturedValue:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741                           
  1742                           ; 2 bytes @ 0x0
  1743     0070                     	ds	1
  1744     0071                     ??_TMR0_ISR:
  1745                           
  1746                           ; 1 bytes @ 0x1
  1747     0071                     	ds	1
  1748     0072                     ??_CCP3_DefaultCallBack:
  1749                           
  1750                           ; 1 bytes @ 0x2
  1751     0072                     	ds	3
  1752     0075                     ??_CCP3_CaptureISR:
  1753     0075                     CCP3_CaptureISR@module:	
  1754                           ; 1 bytes @ 0x5
  1755                           
  1756                           
  1757                           ; 2 bytes @ 0x5
  1758     0075                     	ds	2
  1759     0077                     ??_INTERRUPT_InterruptManager:
  1760                           
  1761                           	psect	cstackBANK0
  1762     0020                     __pcstackBANK0:	
  1763                           ; 1 bytes @ 0x7
  1764                           
  1765     0020                     ?_TMR0_SetInterruptHandler:
  1766     0020                     ??_OSCILLATOR_Initialize:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769     0020                     ??_WDT_Initialize:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772     0020                     ??_TMR1_Initialize:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775     0020                     ?_EUSART_SetFramingErrorHandler:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778     0020                     ?_EUSART_SetOverrunErrorHandler:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781     0020                     ?_EUSART_SetErrorHandler:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784     0020                     ?_CCP3_SetCallBack:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787     0020                     ??_PIN_MANAGER_Initialize:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790     0020                     ??_EUSART_Write:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793     0020                     ?___aldiv:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796     0020                     ?___aodiv:	
  1797                           ; 4 bytes @ 0x0
  1798                           
  1799     0020                     ?___aomod:	
  1800                           ; 8 bytes @ 0x0
  1801                           
  1802     0020                     EUSART_Write@txData:	
  1803                           ; 8 bytes @ 0x0
  1804                           
  1805     0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1809                           ; 2 bytes @ 0x0
  1810                           
  1811     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1812                           ; 2 bytes @ 0x0
  1813                           
  1814     0020                     EUSART_SetErrorHandler@interruptHandler:	
  1815                           ; 2 bytes @ 0x0
  1816                           
  1817     0020                     CCP3_SetCallBack@customCallBack:	
  1818                           ; 2 bytes @ 0x0
  1819                           
  1820     0020                     ___aldiv@divisor:	
  1821                           ; 2 bytes @ 0x0
  1822                           
  1823     0020                     ___aodiv@divisor:	
  1824                           ; 4 bytes @ 0x0
  1825                           
  1826     0020                     ___aomod@divisor:	
  1827                           ; 8 bytes @ 0x0
  1828                           
  1829                           
  1830                           ; 8 bytes @ 0x0
  1831     0020                     	ds	1
  1832     0021                     ??_putch:
  1833     0021                     putch@txData:	
  1834                           ; 1 bytes @ 0x1
  1835                           
  1836                           
  1837                           ; 1 bytes @ 0x1
  1838     0021                     	ds	1
  1839     0022                     ??_TMR0_SetInterruptHandler:
  1840     0022                     ??_CCP3_Initialize:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843     0022                     ??_EUSART_Initialize:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846     0022                     ??_EUSART_SetFramingErrorHandler:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849     0022                     ??_EUSART_SetOverrunErrorHandler:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852     0022                     ??_EUSART_SetErrorHandler:	
  1853                           ; 1 bytes @ 0x2
  1854                           
  1855     0022                     ??_CCP3_SetCallBack:	
  1856                           ; 1 bytes @ 0x2
  1857                           
  1858     0022                     ??_TMR0_Initialize:	
  1859                           ; 1 bytes @ 0x2
  1860                           
  1861     0022                     ??_SYSTEM_Initialize:	
  1862                           ; 1 bytes @ 0x2
  1863                           
  1864     0022                     ?_fputc:	
  1865                           ; 1 bytes @ 0x2
  1866                           
  1867     0022                     fputc@c:	
  1868                           ; 2 bytes @ 0x2
  1869                           
  1870                           
  1871                           ; 2 bytes @ 0x2
  1872     0022                     	ds	2
  1873     0024                     fputc@fp:
  1874     0024                     ___aldiv@dividend:	
  1875                           ; 1 bytes @ 0x4
  1876                           
  1877                           
  1878                           ; 4 bytes @ 0x4
  1879     0024                     	ds	1
  1880     0025                     ??_fputc:
  1881                           
  1882                           ; 1 bytes @ 0x5
  1883     0025                     	ds	3
  1884     0028                     ??___aldiv:
  1885     0028                     ___aodiv@dividend:	
  1886                           ; 1 bytes @ 0x8
  1887                           
  1888     0028                     ___aomod@dividend:	
  1889                           ; 8 bytes @ 0x8
  1890                           
  1891                           
  1892                           ; 8 bytes @ 0x8
  1893     0028                     	ds	1
  1894     0029                     ___aldiv@counter:
  1895                           
  1896                           ; 1 bytes @ 0x9
  1897     0029                     	ds	1
  1898     002A                     ?_fputs:
  1899     002A                     ___aldiv@sign:	
  1900                           ; 2 bytes @ 0xA
  1901                           
  1902     002A                     fputs@fp:	
  1903                           ; 1 bytes @ 0xA
  1904                           
  1905                           
  1906                           ; 1 bytes @ 0xA
  1907     002A                     	ds	1
  1908     002B                     ??_fputs:
  1909     002B                     ___aldiv@quotient:	
  1910                           ; 1 bytes @ 0xB
  1911                           
  1912                           
  1913                           ; 4 bytes @ 0xB
  1914     002B                     	ds	2
  1915     002D                     fputs@s:
  1916                           
  1917                           ; 1 bytes @ 0xD
  1918     002D                     	ds	1
  1919     002E                     fputs@c:
  1920                           
  1921                           ; 1 bytes @ 0xE
  1922     002E                     	ds	1
  1923     002F                     fputs@i:
  1924                           
  1925                           ; 2 bytes @ 0xF
  1926     002F                     	ds	1
  1927     0030                     ??___aodiv:
  1928     0030                     ??___aomod:	
  1929                           ; 1 bytes @ 0x10
  1930                           
  1931                           
  1932                           ; 1 bytes @ 0x10
  1933     0030                     	ds	1
  1934     0031                     ?_pad:
  1935     0031                     ___aodiv@counter:	
  1936                           ; 1 bytes @ 0x11
  1937                           
  1938     0031                     ___aomod@counter:	
  1939                           ; 1 bytes @ 0x11
  1940                           
  1941     0031                     pad@buf:	
  1942                           ; 1 bytes @ 0x11
  1943                           
  1944                           
  1945                           ; 1 bytes @ 0x11
  1946     0031                     	ds	1
  1947     0032                     ___aodiv@sign:
  1948     0032                     ___aomod@sign:	
  1949                           ; 1 bytes @ 0x12
  1950                           
  1951     0032                     pad@p:	
  1952                           ; 1 bytes @ 0x12
  1953                           
  1954                           
  1955                           ; 2 bytes @ 0x12
  1956     0032                     	ds	1
  1957     0033                     ?_abs:
  1958     0033                     abs@a:	
  1959                           ; 2 bytes @ 0x13
  1960                           
  1961     0033                     ___aodiv@quotient:	
  1962                           ; 2 bytes @ 0x13
  1963                           
  1964                           
  1965                           ; 8 bytes @ 0x13
  1966     0033                     	ds	1
  1967     0034                     ??_pad:
  1968                           
  1969                           ; 1 bytes @ 0x14
  1970     0034                     	ds	1
  1971     0035                     ??_abs:
  1972     0035                     pad@i:	
  1973                           ; 1 bytes @ 0x15
  1974                           
  1975                           
  1976                           ; 2 bytes @ 0x15
  1977     0035                     	ds	2
  1978     0037                     pad@w:
  1979                           
  1980                           ; 2 bytes @ 0x17
  1981     0037                     	ds	2
  1982     0039                     pad@fp:
  1983                           
  1984                           ; 1 bytes @ 0x19
  1985     0039                     	ds	2
  1986     003B                     ?_dtoa:
  1987     003B                     dtoa@d:	
  1988                           ; 1 bytes @ 0x1B
  1989                           
  1990                           
  1991                           ; 8 bytes @ 0x1B
  1992     003B                     	ds	8
  1993     0043                     ??_dtoa:
  1994                           
  1995                           ; 1 bytes @ 0x23
  1996     0043                     	ds	1
  1997     0044                     _dtoa$1221:
  1998                           
  1999                           ; 2 bytes @ 0x24
  2000     0044                     	ds	2
  2001     0046                     dtoa@fp:
  2002                           
  2003                           ; 1 bytes @ 0x26
  2004     0046                     	ds	1
  2005     0047                     dtoa@p:
  2006                           
  2007                           ; 2 bytes @ 0x27
  2008     0047                     	ds	2
  2009     0049                     dtoa@w:
  2010                           
  2011                           ; 2 bytes @ 0x29
  2012     0049                     	ds	2
  2013     004B                     dtoa@n:
  2014                           
  2015                           ; 8 bytes @ 0x2B
  2016     004B                     	ds	8
  2017     0053                     dtoa@s:
  2018                           
  2019                           ; 1 bytes @ 0x33
  2020     0053                     	ds	1
  2021     0054                     dtoa@i:
  2022                           
  2023                           ; 2 bytes @ 0x34
  2024     0054                     	ds	2
  2025     0056                     ?_vfpfcnvrt:
  2026     0056                     vfpfcnvrt@fmt:	
  2027                           ; 1 bytes @ 0x36
  2028                           
  2029                           
  2030                           ; 1 bytes @ 0x36
  2031     0056                     	ds	1
  2032     0057                     vfpfcnvrt@ap:
  2033                           
  2034                           ; 1 bytes @ 0x37
  2035     0057                     	ds	1
  2036     0058                     ??_vfpfcnvrt:
  2037                           
  2038                           ; 1 bytes @ 0x38
  2039     0058                     	ds	4
  2040     005C                     vfpfcnvrt@convarg:
  2041                           
  2042                           ; 8 bytes @ 0x3C
  2043     005C                     	ds	8
  2044     0064                     vfpfcnvrt@fp:
  2045                           
  2046                           ; 1 bytes @ 0x44
  2047     0064                     	ds	1
  2048     0065                     vfpfcnvrt@c:
  2049                           
  2050                           ; 1 bytes @ 0x45
  2051     0065                     	ds	1
  2052     0066                     vfpfcnvrt@cp:
  2053                           
  2054                           ; 2 bytes @ 0x46
  2055     0066                     	ds	2
  2056     0068                     ?_vfprintf:
  2057     0068                     vfprintf@fmt:	
  2058                           ; 2 bytes @ 0x48
  2059                           
  2060                           
  2061                           ; 2 bytes @ 0x48
  2062     0068                     	ds	2
  2063     006A                     vfprintf@ap:
  2064                           
  2065                           ; 1 bytes @ 0x4A
  2066     006A                     	ds	1
  2067     006B                     ??_vfprintf:
  2068                           
  2069                           ; 1 bytes @ 0x4B
  2070     006B                     	ds	1
  2071     006C                     vfprintf@fp:
  2072                           
  2073                           ; 1 bytes @ 0x4C
  2074     006C                     	ds	1
  2075     006D                     vfprintf@cfmt:
  2076                           
  2077                           ; 2 bytes @ 0x4D
  2078     006D                     	ds	2
  2079     006F                     ??_printf:
  2080     006F                     printf@ap:	
  2081                           ; 1 bytes @ 0x4F
  2082                           
  2083                           
  2084                           ; 1 bytes @ 0x4F
  2085     006F                     	ds	1
  2086                           
  2087                           	psect	maintext
  2088     04E3                     __pmaintext:	
  2089 ;;
  2090 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2091 ;;
  2092 ;; *************** function _main *****************
  2093 ;; Defined at:
  2094 ;;		line 62 in file "main.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : B1F/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2108 ;;      Params:         0       0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0       0
  2110 ;;      Temps:          0       0       4       0       0       0
  2111 ;;      Totals:         0       0       4       0       0       0
  2112 ;;Total ram usage:        4 bytes
  2113 ;; Hardware stack levels required when called: 12
  2114 ;; This function calls:
  2115 ;;		_SYSTEM_Initialize
  2116 ;;		___aldiv
  2117 ;;		_printf
  2118 ;; This function is called by:
  2119 ;;		Startup code after reset
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123     04E3                     _main:	
  2124                           ;psect for function _main
  2125                           
  2126     04E3                     l2426:	
  2127                           ;incstack = 0
  2128                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2129                           
  2130                           
  2131                           ;main.c: 65:     SYSTEM_Initialize();
  2132     04E3  3186  26B6  3184   	fcall	_SYSTEM_Initialize
  2133     04E6                     l2428:
  2134                           
  2135                           ;main.c: 71:     (INTCONbits.GIE = 1);
  2136     04E6  178B               	bsf	11,7	;volatile
  2137     04E7                     l2430:
  2138                           
  2139                           ;main.c: 74:     (INTCONbits.PEIE = 1);
  2140     04E7  170B               	bsf	11,6	;volatile
  2141     04E8                     l2432:
  2142     04E8  0022               	movlb	2	; select bank2
  2143     04E9  168D               	bsf	13,5	;volatile
  2144     04EA                     l2434:
  2145     04EA  120D               	bcf	13,4	;volatile
  2146     04EB                     l2436:
  2147                           
  2148                           ;main.c: 86:     {;main.c: 96:          if (flag_blink){
  2149     04EB  0021               	movlb	1	; select bank1
  2150     04EC  082F               	movf	_flag_blink^(0+128),w
  2151     04ED  1903               	btfsc	3,2
  2152     04EE  2CF0               	goto	u1701
  2153     04EF  2CF1               	goto	u1700
  2154     04F0                     u1701:
  2155     04F0  2CFE               	goto	l2442
  2156     04F1                     u1700:
  2157     04F1                     l2438:
  2158                           
  2159                           ;main.c: 97:             flag_blink=0;
  2160     04F1  01AF               	clrf	_flag_blink^(0+128)
  2161     04F2                     l2440:
  2162     04F2  1003               	clrc
  2163     04F3  0022               	movlb	2	; select bank2
  2164     04F4  1E8D               	btfss	13,5	;volatile
  2165     04F5  1403               	setc
  2166     04F6  1803               	btfsc	3,0
  2167     04F7  2CF9               	goto	u1711
  2168     04F8  2CFC               	goto	u1710
  2169     04F9                     u1711:
  2170     04F9  0022               	movlb	2	; select bank2
  2171     04FA  168D               	bsf	13,5	;volatile
  2172     04FB  2CFE               	goto	u1724
  2173     04FC                     u1710:
  2174     04FC  0022               	movlb	2	; select bank2
  2175     04FD  128D               	bcf	13,5	;volatile
  2176     04FE                     u1724:
  2177     04FE                     l2442:
  2178                           
  2179                           ;main.c: 105:         if (flag_updateT)
  2180     04FE  0021               	movlb	1	; select bank1
  2181     04FF  082E               	movf	_flag_updateT^(0+128),w
  2182     0500  1903               	btfsc	3,2
  2183     0501  2D03               	goto	u1731
  2184     0502  2D04               	goto	u1730
  2185     0503                     u1731:
  2186     0503  2D05               	goto	l2446
  2187     0504                     u1730:
  2188     0504                     l2444:
  2189                           
  2190                           ;main.c: 106:         {;main.c: 107:             flag_updateT=0;
  2191     0504  01AE               	clrf	_flag_updateT^(0+128)
  2192     0505                     l2446:
  2193                           
  2194                           ;main.c: 114:         if(flag_startTX)
  2195     0505  0830               	movf	_flag_startTX^(0+128),w
  2196     0506  1903               	btfsc	3,2
  2197     0507  2D09               	goto	u1741
  2198     0508  2D0A               	goto	u1740
  2199     0509                     u1741:
  2200     0509  2CEB               	goto	l2436
  2201     050A                     u1740:
  2202     050A                     l2448:
  2203                           
  2204                           ;main.c: 115:         {;main.c: 117:           vel=(long)((long)2*314159200)/(T*(long)32
      +                          );
  2205     050A  0851               	movf	_T^(0+128),w
  2206     050B  00E5               	movwf	??_main^(0+128)
  2207     050C  0852               	movf	(_T+1)^(0+128),w
  2208     050D  00E6               	movwf	(??_main^(0+128)+1)
  2209     050E  01E7               	clrf	(??_main^(0+128)+2)
  2210     050F  01E8               	clrf	(??_main^(0+128)+3)
  2211     0510  3005               	movlw	5
  2212     0511                     u1755:
  2213     0511  35E5               	lslf	??_main^(0+128),f
  2214     0512  0DE6               	rlf	(??_main^(0+128)+1),f
  2215     0513  0DE7               	rlf	(??_main^(0+128)+2),f
  2216     0514  0DE8               	rlf	(??_main^(0+128)+3),f
  2217     0515                     u1750:
  2218     0515  0B89               	decfsz	9,f
  2219     0516  2D11               	goto	u1755
  2220     0517  0868               	movf	(??_main+3)^(0+128),w
  2221     0518  0020               	movlb	0	; select bank0
  2222     0519  00A3               	movwf	___aldiv@divisor+3
  2223     051A  0021               	movlb	1	; select bank1
  2224     051B  0867               	movf	(??_main+2)^(0+128),w
  2225     051C  0020               	movlb	0	; select bank0
  2226     051D  00A2               	movwf	___aldiv@divisor+2
  2227     051E  0021               	movlb	1	; select bank1
  2228     051F  0866               	movf	(??_main+1)^(0+128),w
  2229     0520  0020               	movlb	0	; select bank0
  2230     0521  00A1               	movwf	___aldiv@divisor+1
  2231     0522  0021               	movlb	1	; select bank1
  2232     0523  0865               	movf	??_main^(0+128),w
  2233     0524  0020               	movlb	0	; select bank0
  2234     0525  00A0               	movwf	___aldiv@divisor
  2235     0526  3025               	movlw	37
  2236     0527  00A7               	movwf	___aldiv@dividend+3
  2237     0528  3073               	movlw	115
  2238     0529  00A6               	movwf	___aldiv@dividend+2
  2239     052A  3060               	movlw	96
  2240     052B  00A5               	movwf	___aldiv@dividend+1
  2241     052C  30C0               	movlw	192
  2242     052D  00A4               	movwf	___aldiv@dividend
  2243     052E  3184  2453  3184   	fcall	___aldiv
  2244     0531  0020               	movlb	0	; select bank0
  2245     0532  0823               	movf	?___aldiv+3,w
  2246     0533  0021               	movlb	1	; select bank1
  2247     0534  00A3               	movwf	(_vel+3)^(0+128)
  2248     0535  0020               	movlb	0	; select bank0
  2249     0536  0822               	movf	?___aldiv+2,w
  2250     0537  0021               	movlb	1	; select bank1
  2251     0538  00A2               	movwf	(_vel+2)^(0+128)
  2252     0539  0020               	movlb	0	; select bank0
  2253     053A  0821               	movf	?___aldiv+1,w
  2254     053B  0021               	movlb	1	; select bank1
  2255     053C  00A1               	movwf	(_vel+1)^(0+128)
  2256     053D  0020               	movlb	0	; select bank0
  2257     053E  0820               	movf	?___aldiv,w
  2258     053F  0021               	movlb	1	; select bank1
  2259     0540  00A0               	movwf	_vel^(0+128)
  2260     0541                     l2450:
  2261                           
  2262                           ;main.c: 118:           printf("%d,",T);
  2263     0541  308A               	movlw	low (STR_1| (0+32768))
  2264     0542  00DF               	movwf	printf@fmt^(0+128)
  2265     0543  3087               	movlw	high (STR_1| (0+32768))
  2266     0544  00E0               	movwf	(printf@fmt^(0+128)+1)
  2267     0545  0852               	movf	(_T+1)^(0+128),w
  2268     0546  00E2               	movwf	((?_printf+1)^(0+128)+2)
  2269     0547  0851               	movf	_T^(0+128),w
  2270     0548  00E1               	movwf	(?_printf^(0+128)+2)
  2271     0549  3186  26E0  3184   	fcall	_printf
  2272     054C                     l2452:
  2273                           
  2274                           ;main.c: 119:           printf("%ld\r\n",vel);
  2275     054C  307E               	movlw	low (STR_2| (0+32768))
  2276     054D  0021               	movlb	1	; select bank1
  2277     054E  00DF               	movwf	printf@fmt^(0+128)
  2278     054F  3087               	movlw	high (STR_2| (0+32768))
  2279     0550  00E0               	movwf	(printf@fmt^(0+128)+1)
  2280     0551  0823               	movf	(_vel+3)^(0+128),w
  2281     0552  00E4               	movwf	((?_printf+3)^(0+128)+2)
  2282     0553  0822               	movf	(_vel+2)^(0+128),w
  2283     0554  00E3               	movwf	((?_printf+2)^(0+128)+2)
  2284     0555  0821               	movf	(_vel+1)^(0+128),w
  2285     0556  00E2               	movwf	((?_printf+1)^(0+128)+2)
  2286     0557  0820               	movf	_vel^(0+128),w
  2287     0558  00E1               	movwf	(?_printf^(0+128)+2)
  2288     0559  3186  26E0  3184   	fcall	_printf
  2289     055C                     l2454:
  2290                           
  2291                           ;main.c: 123:             flag_startTX=0;
  2292     055C  0021               	movlb	1	; select bank1
  2293     055D  01B0               	clrf	_flag_startTX^(0+128)
  2294     055E  2CEB               	goto	l2436
  2295     055F  3180  2826         	ljmp	start
  2296     0561                     __end_of_main:
  2297                           
  2298                           	psect	text1
  2299     06E0                     __ptext1:	
  2300 ;; *************** function _printf *****************
  2301 ;; Defined at:
  2302 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  2305 ;;		 -> STR_2(6), STR_1(4), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  ret             2    0        int 
  2308 ;;  ap              1   79[BANK0 ] PTR void [1]
  2309 ;;		 -> ?_printf(2), 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2    0[BANK1 ] int 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2319 ;;      Params:         0       0       6       0       0       0
  2320 ;;      Locals:         0       1       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0
  2322 ;;      Totals:         0       1       6       0       0       0
  2323 ;;Total ram usage:        7 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 11
  2326 ;; This function calls:
  2327 ;;		_vfprintf
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333     06E0                     _printf:	
  2334                           ;psect for function _printf
  2335                           
  2336     06E0                     l2270:	
  2337                           ;incstack = 0
  2338                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2339                           
  2340     06E0  30E1               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2341     06E1  0020               	movlb	0	; select bank0
  2342     06E2  00EF               	movwf	printf@ap
  2343     06E3                     l2272:
  2344     06E3  0021               	movlb	1	; select bank1
  2345     06E4  0860               	movf	(printf@fmt+1)^(0+128),w
  2346     06E5  0020               	movlb	0	; select bank0
  2347     06E6  00E9               	movwf	vfprintf@fmt+1
  2348     06E7  0021               	movlb	1	; select bank1
  2349     06E8  085F               	movf	printf@fmt^(0+128),w
  2350     06E9  0020               	movlb	0	; select bank0
  2351     06EA  00E8               	movwf	vfprintf@fmt
  2352     06EB  306F               	movlw	(low (printf@ap| 0))& (0+255)
  2353     06EC  00EA               	movwf	vfprintf@ap
  2354     06ED  3000               	movlw	0
  2355     06EE  3186  264D  3186   	fcall	_vfprintf
  2356     06F1                     l963:
  2357     06F1  0008               	return
  2358     06F2                     __end_of_printf:
  2359                           
  2360                           	psect	text2
  2361     064D                     __ptext2:	
  2362 ;; *************** function _vfprintf *****************
  2363 ;; Defined at:
  2364 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  fp              1    wreg     PTR struct _IO_FILE
  2367 ;;		 -> NULL(0), 
  2368 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  2369 ;;		 -> STR_2(6), STR_1(4), 
  2370 ;;  ap              1   74[BANK0 ] PTR PTR void 
  2371 ;;		 -> printf@ap(1), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  2374 ;;		 -> NULL(0), 
  2375 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
  2376 ;;		 -> STR_2(6), STR_1(4), 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2   72[BANK0 ] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2386 ;;      Params:         0       3       0       0       0       0
  2387 ;;      Locals:         0       3       0       0       0       0
  2388 ;;      Temps:          0       1       0       0       0       0
  2389 ;;      Totals:         0       7       0       0       0       0
  2390 ;;Total ram usage:        7 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 10
  2393 ;; This function calls:
  2394 ;;		_vfpfcnvrt
  2395 ;; This function is called by:
  2396 ;;		_printf
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400     064D                     _vfprintf:	
  2401                           ;psect for function _vfprintf
  2402                           
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2406                           ;vfprintf@fp stored from wreg
  2407     064D  0020               	movlb	0	; select bank0
  2408     064E  00EC               	movwf	vfprintf@fp
  2409     064F                     l2258:
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2412     064F  0869               	movf	vfprintf@fmt+1,w
  2413     0650  00EE               	movwf	vfprintf@cfmt+1
  2414     0651  0868               	movf	vfprintf@fmt,w
  2415     0652  00ED               	movwf	vfprintf@cfmt
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2418     0653  2E5C               	goto	l2262
  2419     0654                     l2260:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2422     0654  306D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2423     0655  00D6               	movwf	vfpfcnvrt@fmt
  2424     0656  086A               	movf	vfprintf@ap,w
  2425     0657  00D7               	movwf	vfpfcnvrt@ap
  2426     0658  086C               	movf	vfprintf@fp,w
  2427     0659  3182  226F  3186   	fcall	_vfpfcnvrt
  2428     065C                     l2262:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2431     065C  0020               	movlb	0	; select bank0
  2432     065D  086D               	movf	vfprintf@cfmt,w
  2433     065E  0084               	movwf	4
  2434     065F  086E               	movf	vfprintf@cfmt+1,w
  2435     0660  0085               	movwf	5
  2436     0661  0012               	moviw fsr0++
  2437     0662  1D03               	btfss	3,2
  2438     0663  2E65               	goto	u1431
  2439     0664  2E66               	goto	u1430
  2440     0665                     u1431:
  2441     0665  2E54               	goto	l2260
  2442     0666                     u1430:
  2443     0666                     l2264:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2446     0666  01E8               	clrf	?_vfprintf
  2447     0667  01E9               	clrf	?_vfprintf+1
  2448     0668                     l1031:
  2449     0668  0008               	return
  2450     0669                     __end_of_vfprintf:
  2451                           
  2452                           	psect	text3
  2453     026F                     __ptext3:	
  2454 ;; *************** function _vfpfcnvrt *****************
  2455 ;; Defined at:
  2456 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  fp              1    wreg     PTR struct _IO_FILE
  2459 ;;		 -> NULL(0), 
  2460 ;;  fmt             1   54[BANK0 ] PTR PTR unsigned char 
  2461 ;;		 -> vfprintf@cfmt(2), 
  2462 ;;  ap              1   55[BANK0 ] PTR PTR void 
  2463 ;;		 -> printf@ap(1), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  2466 ;;		 -> NULL(0), 
  2467 ;;  convarg         8   60[BANK0 ] struct .
  2468 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2469 ;;		 -> STR_2(6), STR_1(4), 
  2470 ;;  i               2    0        int 
  2471 ;;  done            2    0        int 
  2472 ;;  c               1   69[BANK0 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2482 ;;      Params:         0       2       0       0       0       0
  2483 ;;      Locals:         0      12       0       0       0       0
  2484 ;;      Temps:          0       4       0       0       0       0
  2485 ;;      Totals:         0      18       0       0       0       0
  2486 ;;Total ram usage:       18 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 9
  2489 ;; This function calls:
  2490 ;;		_dtoa
  2491 ;;		_fputc
  2492 ;; This function is called by:
  2493 ;;		_vfprintf
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497     026F                     _vfpfcnvrt:	
  2498                           ;psect for function _vfpfcnvrt
  2499                           
  2500                           
  2501                           ;incstack = 0
  2502                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2503                           ;vfpfcnvrt@fp stored from wreg
  2504     026F  0020               	movlb	0	; select bank0
  2505     0270  00E4               	movwf	vfpfcnvrt@fp
  2506     0271                     l2130:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2509     0271  0856               	movf	vfpfcnvrt@fmt,w
  2510     0272  0086               	movwf	6
  2511     0273  0187               	clrf	7
  2512     0274  3F40               	moviw [0]fsr1
  2513     0275  00D8               	movwf	??_vfpfcnvrt
  2514     0276  3F41               	moviw [1]fsr1
  2515     0277  00D9               	movwf	??_vfpfcnvrt+1
  2516     0278  0858               	movf	??_vfpfcnvrt,w
  2517     0279  0084               	movwf	4
  2518     027A  0859               	movf	??_vfpfcnvrt+1,w
  2519     027B  0085               	movwf	5
  2520     027C  0012               	moviw fsr0++
  2521     027D  3A25               	xorlw	37
  2522     027E  1D03               	btfss	3,2
  2523     027F  2A81               	goto	u1401
  2524     0280  2A82               	goto	u1400
  2525     0281                     u1401:
  2526     0281  2B4D               	goto	l2174
  2527     0282                     u1400:
  2528     0282                     l2132:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2531     0282  0856               	movf	vfpfcnvrt@fmt,w
  2532     0283  0086               	movwf	6
  2533     0284  0187               	clrf	7
  2534     0285  3001               	movlw	1
  2535     0286  0781               	addwf	1,f
  2536     0287  3141               	addfsr 1,1
  2537     0288  1803               	skipnc
  2538     0289  0A81               	incf	1,f
  2539     028A                     l2134:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2542     028A  0021               	movlb	1	; select bank1
  2543     028B  01A8               	clrf	_width^(0+128)
  2544     028C  01A9               	clrf	(_width+1)^(0+128)
  2545     028D  1003               	clrc
  2546     028E  3000               	movlw	0
  2547     028F  1803               	btfsc	3,0
  2548     0290  3001               	movlw	1
  2549     0291  00FB               	movwf	_flags
  2550     0292                     l2136:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2553     0292  30FF               	movlw	255
  2554     0293  00F7               	movwf	_prec
  2555     0294  30FF               	movlw	255
  2556     0295  00F8               	movwf	_prec+1
  2557     0296                     l2138:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2560     0296  0020               	movlb	0	; select bank0
  2561     0297  0856               	movf	vfpfcnvrt@fmt,w
  2562     0298  0086               	movwf	6
  2563     0299  0187               	clrf	7
  2564     029A  3F40               	moviw [0]fsr1
  2565     029B  00E6               	movwf	vfpfcnvrt@cp
  2566     029C  3F41               	moviw [1]fsr1
  2567     029D  00E7               	movwf	vfpfcnvrt@cp+1
  2568     029E                     l2140:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1119:   c = *cp;
  2571     029E  0866               	movf	vfpfcnvrt@cp,w
  2572     029F  0084               	movwf	4
  2573     02A0  0867               	movf	vfpfcnvrt@cp+1,w
  2574     02A1  0085               	movwf	5
  2575     02A2  0800               	movf	0,w	;code access
  2576     02A3  00E5               	movwf	vfpfcnvrt@c
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1120:   switch(c)
      +                           {
  2579     02A4  2AAF               	goto	l2150
  2580     02A5                     l2142:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1135:     cp++;
  2583     02A5  3001               	movlw	1
  2584     02A6  07E6               	addwf	vfpfcnvrt@cp,f
  2585     02A7  3000               	movlw	0
  2586     02A8  3DE7               	addwfc	vfpfcnvrt@cp+1,f
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1142:     break;
  2589     02A9  2AC2               	goto	l2152
  2590     02AA                     l2144:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1176:     c = 'i'
      +                          ;
  2593     02AA  3069               	movlw	105
  2594     02AB  00E5               	movwf	vfpfcnvrt@c
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1177:     break;
  2597     02AC  2AC2               	goto	l2152
  2598     02AD                     l2146:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1179:     c = 0;
  2601     02AD  01E5               	clrf	vfpfcnvrt@c
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1180:     break;
  2604     02AE  2AC2               	goto	l2152
  2605     02AF                     l2150:
  2606     02AF  0865               	movf	vfpfcnvrt@c,w
  2607     02B0  00D8               	movwf	??_vfpfcnvrt
  2608     02B1  01D9               	clrf	??_vfpfcnvrt+1
  2609                           
  2610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 1, Range of values is 0 to 0
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte            4     3 (average)
  2616                           ; direct_byte            8     6 (fixed)
  2617                           ; jumptable            260     6 (fixed)
  2618                           ;	Chosen strategy is simple_byte
  2619     02B2  0859               	movf	??_vfpfcnvrt+1,w
  2620     02B3  3A00               	xorlw	0	; case 0
  2621     02B4  1903               	skipnz
  2622     02B5  2AB7               	goto	l2496
  2623     02B6  2AAD               	goto	l2146
  2624     02B7                     l2496:
  2625                           
  2626                           ; Switch size 1, requested type "simple"
  2627                           ; Number of cases is 3, Range of values is 100 to 108
  2628                           ; switch strategies available:
  2629                           ; Name         Instructions Cycles
  2630                           ; simple_byte           10     6 (average)
  2631                           ; direct_byte           27     9 (fixed)
  2632                           ; jumptable            263     9 (fixed)
  2633                           ;	Chosen strategy is simple_byte
  2634     02B7  0858               	movf	??_vfpfcnvrt,w
  2635     02B8  3A64               	xorlw	100	; case 100
  2636     02B9  1903               	skipnz
  2637     02BA  2AAA               	goto	l2144
  2638     02BB  3A0D               	xorlw	13	; case 105
  2639     02BC  1903               	skipnz
  2640     02BD  2AAA               	goto	l2144
  2641     02BE  3A05               	xorlw	5	; case 108
  2642     02BF  1903               	skipnz
  2643     02C0  2AA5               	goto	l2142
  2644     02C1  2AAD               	goto	l2146
  2645     02C2                     l2152:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2648     02C2  0866               	movf	vfpfcnvrt@cp,w
  2649     02C3  0084               	movwf	4
  2650     02C4  0867               	movf	vfpfcnvrt@cp+1,w
  2651     02C5  0085               	movwf	5
  2652     02C6  0012               	moviw fsr0++
  2653     02C7  3A64               	xorlw	100
  2654     02C8  1903               	btfsc	3,2
  2655     02C9  2ACB               	goto	u1411
  2656     02CA  2ACC               	goto	u1410
  2657     02CB                     u1411:
  2658     02CB  2B11               	goto	l2162
  2659     02CC                     u1410:
  2660     02CC                     l2154:
  2661     02CC  0866               	movf	vfpfcnvrt@cp,w
  2662     02CD  0084               	movwf	4
  2663     02CE  0867               	movf	vfpfcnvrt@cp+1,w
  2664     02CF  0085               	movwf	5
  2665     02D0  0012               	moviw fsr0++
  2666     02D1  3A69               	xorlw	105
  2667     02D2  1D03               	btfss	3,2
  2668     02D3  2AD5               	goto	u1421
  2669     02D4  2AD6               	goto	u1420
  2670     02D5                     u1421:
  2671     02D5  2B43               	goto	l2170
  2672     02D6                     u1420:
  2673     02D6  2B11               	goto	l2162
  2674     02D7                     l2156:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1191:      convar
      +                          g.ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2677     02D7  0857               	movf	vfpfcnvrt@ap,w
  2678     02D8  0086               	movwf	6
  2679     02D9  0187               	clrf	7
  2680     02DA  0801               	movf	1,w
  2681     02DB  0084               	movwf	4
  2682     02DC  0185               	clrf	5
  2683     02DD  3002               	movlw	2
  2684     02DE  0781               	addwf	1,f
  2685     02DF  3F00               	moviw [0]fsr0
  2686     02E0  00D8               	movwf	??_vfpfcnvrt
  2687     02E1  3F01               	moviw [1]fsr0
  2688     02E2  00D9               	movwf	??_vfpfcnvrt+1
  2689     02E3  0858               	movf	??_vfpfcnvrt,w
  2690     02E4  00DC               	movwf	vfpfcnvrt@convarg
  2691     02E5  0859               	movf	??_vfpfcnvrt+1,w
  2692     02E6  00DD               	movwf	vfpfcnvrt@convarg+1
  2693     02E7  0D89               	rlf	9,f
  2694     02E8  3B89               	subwfb	9,f
  2695     02E9  0989               	comf	9,f
  2696     02EA  00DE               	movwf	vfpfcnvrt@convarg+2
  2697     02EB  00DF               	movwf	vfpfcnvrt@convarg+3
  2698     02EC  00E0               	movwf	vfpfcnvrt@convarg+4
  2699     02ED  00E1               	movwf	vfpfcnvrt@convarg+5
  2700     02EE  00E2               	movwf	vfpfcnvrt@convarg+6
  2701     02EF  00E3               	movwf	vfpfcnvrt@convarg+7
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1192:      break;
  2704     02F0  2B21               	goto	l2164
  2705     02F1                     l2158:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1205:      convar
      +                          g.ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  2708     02F1  0857               	movf	vfpfcnvrt@ap,w
  2709     02F2  0086               	movwf	6
  2710     02F3  0187               	clrf	7
  2711     02F4  0801               	movf	1,w
  2712     02F5  0084               	movwf	4
  2713     02F6  0185               	clrf	5
  2714     02F7  3004               	movlw	4
  2715     02F8  0781               	addwf	1,f
  2716     02F9  3F00               	moviw [0]fsr0
  2717     02FA  00D8               	movwf	??_vfpfcnvrt
  2718     02FB  3F01               	moviw [1]fsr0
  2719     02FC  00D9               	movwf	??_vfpfcnvrt+1
  2720     02FD  3F02               	moviw [2]fsr0
  2721     02FE  00DA               	movwf	??_vfpfcnvrt+2
  2722     02FF  3F03               	moviw [3]fsr0
  2723     0300  00DB               	movwf	??_vfpfcnvrt+3
  2724     0301  0858               	movf	??_vfpfcnvrt,w
  2725     0302  00DC               	movwf	vfpfcnvrt@convarg
  2726     0303  0859               	movf	??_vfpfcnvrt+1,w
  2727     0304  00DD               	movwf	vfpfcnvrt@convarg+1
  2728     0305  085A               	movf	??_vfpfcnvrt+2,w
  2729     0306  00DE               	movwf	vfpfcnvrt@convarg+2
  2730     0307  085B               	movf	??_vfpfcnvrt+3,w
  2731     0308  00DF               	movwf	vfpfcnvrt@convarg+3
  2732     0309  3000               	movlw	0
  2733     030A  1BDF               	btfsc	vfpfcnvrt@convarg+3,7
  2734     030B  30FF               	movlw	255
  2735     030C  00E0               	movwf	vfpfcnvrt@convarg+4
  2736     030D  00E1               	movwf	vfpfcnvrt@convarg+5
  2737     030E  00E2               	movwf	vfpfcnvrt@convarg+6
  2738     030F  00E3               	movwf	vfpfcnvrt@convarg+7
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1206:      break;
  2741     0310  2B21               	goto	l2164
  2742     0311                     l2162:
  2743     0311  0865               	movf	vfpfcnvrt@c,w
  2744     0312  00D8               	movwf	??_vfpfcnvrt
  2745     0313  01D9               	clrf	??_vfpfcnvrt+1
  2746                           
  2747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2748                           ; Switch size 1, requested type "simple"
  2749                           ; Number of cases is 1, Range of values is 0 to 0
  2750                           ; switch strategies available:
  2751                           ; Name         Instructions Cycles
  2752                           ; simple_byte            4     3 (average)
  2753                           ; direct_byte            8     6 (fixed)
  2754                           ; jumptable            260     6 (fixed)
  2755                           ;	Chosen strategy is simple_byte
  2756     0314  0859               	movf	??_vfpfcnvrt+1,w
  2757     0315  3A00               	xorlw	0	; case 0
  2758     0316  1903               	skipnz
  2759     0317  2B19               	goto	l2498
  2760     0318  2B21               	goto	l2164
  2761     0319                     l2498:
  2762                           
  2763                           ; Switch size 1, requested type "simple"
  2764                           ; Number of cases is 2, Range of values is 105 to 108
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte            7     4 (average)
  2768                           ; direct_byte           17     9 (fixed)
  2769                           ; jumptable            263     9 (fixed)
  2770                           ;	Chosen strategy is simple_byte
  2771     0319  0858               	movf	??_vfpfcnvrt,w
  2772     031A  3A69               	xorlw	105	; case 105
  2773     031B  1903               	skipnz
  2774     031C  2AD7               	goto	l2156
  2775     031D  3A05               	xorlw	5	; case 108
  2776     031E  1903               	skipnz
  2777     031F  2AF1               	goto	l2158
  2778     0320  2B21               	goto	l2164
  2779     0321                     l2164:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2782     0321  0866               	movf	vfpfcnvrt@cp,w
  2783     0322  3E01               	addlw	1
  2784     0323  00D8               	movwf	??_vfpfcnvrt
  2785     0324  3000               	movlw	0
  2786     0325  3D67               	addwfc	vfpfcnvrt@cp+1,w
  2787     0326  00D9               	movwf	??_vfpfcnvrt+1
  2788     0327  0856               	movf	vfpfcnvrt@fmt,w
  2789     0328  0086               	movwf	6
  2790     0329  0187               	clrf	7
  2791     032A  0858               	movf	??_vfpfcnvrt,w
  2792     032B  3FC0               	movwi [0]fsr1
  2793     032C  0859               	movf	??_vfpfcnvrt+1,w
  2794     032D  3FC1               	movwi [1]fsr1
  2795     032E                     l2166:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2798     032E  085C               	movf	vfpfcnvrt@convarg,w
  2799     032F  00BB               	movwf	dtoa@d
  2800     0330  085D               	movf	vfpfcnvrt@convarg+1,w
  2801     0331  00BC               	movwf	dtoa@d+1
  2802     0332  085E               	movf	vfpfcnvrt@convarg+2,w
  2803     0333  00BD               	movwf	dtoa@d+2
  2804     0334  085F               	movf	vfpfcnvrt@convarg+3,w
  2805     0335  00BE               	movwf	dtoa@d+3
  2806     0336  0860               	movf	vfpfcnvrt@convarg+4,w
  2807     0337  00BF               	movwf	dtoa@d+4
  2808     0338  0861               	movf	vfpfcnvrt@convarg+5,w
  2809     0339  00C0               	movwf	dtoa@d+5
  2810     033A  0862               	movf	vfpfcnvrt@convarg+6,w
  2811     033B  00C1               	movwf	dtoa@d+6
  2812     033C  0863               	movf	vfpfcnvrt@convarg+7,w
  2813     033D  00C2               	movwf	dtoa@d+7
  2814     033E  0864               	movf	vfpfcnvrt@fp,w
  2815     033F  3180  203A  3182   	fcall	_dtoa
  2816     0342  2B65               	goto	l1025
  2817     0343                     l2170:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2820     0343  0020               	movlb	0	; select bank0
  2821     0344  0856               	movf	vfpfcnvrt@fmt,w
  2822     0345  0086               	movwf	6
  2823     0346  0187               	clrf	7
  2824     0347  3001               	movlw	1
  2825     0348  0781               	addwf	1,f
  2826     0349  3141               	addfsr 1,1
  2827     034A  1803               	skipnc
  2828     034B  0A81               	incf	1,f
  2829     034C  2B65               	goto	l1025
  2830     034D                     l2174:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2833     034D  0856               	movf	vfpfcnvrt@fmt,w
  2834     034E  0086               	movwf	6
  2835     034F  0187               	clrf	7
  2836     0350  3F40               	moviw [0]fsr1
  2837     0351  00D8               	movwf	??_vfpfcnvrt
  2838     0352  3F41               	moviw [1]fsr1
  2839     0353  00D9               	movwf	??_vfpfcnvrt+1
  2840     0354  0858               	movf	??_vfpfcnvrt,w
  2841     0355  0084               	movwf	4
  2842     0356  0859               	movf	??_vfpfcnvrt+1,w
  2843     0357  0085               	movwf	5
  2844     0358  0800               	movf	0,w	;code access
  2845     0359  00DA               	movwf	??_vfpfcnvrt+2
  2846     035A  01DB               	clrf	??_vfpfcnvrt+3
  2847     035B  085A               	movf	??_vfpfcnvrt+2,w
  2848     035C  00A2               	movwf	fputc@c
  2849     035D  085B               	movf	??_vfpfcnvrt+3,w
  2850     035E  00A3               	movwf	fputc@c+1
  2851     035F  0864               	movf	vfpfcnvrt@fp,w
  2852     0360  00A4               	movwf	fputc@fp
  2853     0361  3185  2561  3182   	fcall	_fputc
  2854     0364  2B43               	goto	l2170
  2855     0365                     l1025:
  2856     0365  0008               	return
  2857     0366                     __end_of_vfpfcnvrt:
  2858                           
  2859                           	psect	text4
  2860     003A                     __ptext4:	
  2861 ;; *************** function _dtoa *****************
  2862 ;; Defined at:
  2863 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  fp              1    wreg     PTR struct _IO_FILE
  2866 ;;		 -> NULL(0), 
  2867 ;;  d               8   27[BANK0 ] long long 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  2870 ;;		 -> NULL(0), 
  2871 ;;  n               8   43[BANK0 ] long long 
  2872 ;;  i               2   52[BANK0 ] int 
  2873 ;;  w               2   41[BANK0 ] int 
  2874 ;;  p               2   39[BANK0 ] int 
  2875 ;;  s               1   51[BANK0 ] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2885 ;;      Params:         0       8       0       0       0       0
  2886 ;;      Locals:         0      18       0       0       0       0
  2887 ;;      Temps:          0       1       0       0       0       0
  2888 ;;      Totals:         0      27       0       0       0       0
  2889 ;;Total ram usage:       27 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 8
  2892 ;; This function calls:
  2893 ;;		___aodiv
  2894 ;;		___aomod
  2895 ;;		_abs
  2896 ;;		_pad
  2897 ;; This function is called by:
  2898 ;;		_vfpfcnvrt
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902     003A                     _dtoa:	
  2903                           ;psect for function _dtoa
  2904                           
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2908                           ;dtoa@fp stored from wreg
  2909     003A  0020               	movlb	0	; select bank0
  2910     003B  00C6               	movwf	dtoa@fp
  2911     003C                     l2070:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2914     003C  083B               	movf	dtoa@d,w
  2915     003D  00CB               	movwf	dtoa@n
  2916     003E  083C               	movf	dtoa@d+1,w
  2917     003F  00CC               	movwf	dtoa@n+1
  2918     0040  083D               	movf	dtoa@d+2,w
  2919     0041  00CD               	movwf	dtoa@n+2
  2920     0042  083E               	movf	dtoa@d+3,w
  2921     0043  00CE               	movwf	dtoa@n+3
  2922     0044  083F               	movf	dtoa@d+4,w
  2923     0045  00CF               	movwf	dtoa@n+4
  2924     0046  0840               	movf	dtoa@d+5,w
  2925     0047  00D0               	movwf	dtoa@n+5
  2926     0048  0841               	movf	dtoa@d+6,w
  2927     0049  00D1               	movwf	dtoa@n+6
  2928     004A  0842               	movf	dtoa@d+7,w
  2929     004B  00D2               	movwf	dtoa@n+7
  2930     004C                     l2072:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2933     004C  304B               	movlw	low dtoa@n
  2934     004D  0086               	movwf	6
  2935     004E  3000               	movlw	high dtoa@n
  2936     004F  0087               	movwf	7
  2937     0050  3F47               	moviw [7]fsr1
  2938     0051  00C3               	movwf	??_dtoa
  2939     0052  1BC3               	btfsc	??_dtoa,7
  2940     0053  2855               	goto	u1291
  2941     0054  2857               	goto	u1290
  2942     0055                     u1291:
  2943     0055  3001               	movlw	1
  2944     0056  2858               	goto	u1300
  2945     0057                     u1290:
  2946     0057  3000               	movlw	0
  2947     0058                     u1300:
  2948     0058  0020               	movlb	0	; select bank0
  2949     0059  00D3               	movwf	dtoa@s
  2950     005A                     l2074:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2953     005A  0853               	movf	dtoa@s,w
  2954     005B  1903               	btfsc	3,2
  2955     005C  285E               	goto	u1311
  2956     005D  285F               	goto	u1310
  2957     005E                     u1311:
  2958     005E  287D               	goto	l2078
  2959     005F                     u1310:
  2960     005F                     l2076:
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2963     005F  09CB               	comf	dtoa@n,f
  2964     0060  09CC               	comf	dtoa@n+1,f
  2965     0061  09CD               	comf	dtoa@n+2,f
  2966     0062  09CE               	comf	dtoa@n+3,f
  2967     0063  09CF               	comf	dtoa@n+4,f
  2968     0064  09D0               	comf	dtoa@n+5,f
  2969     0065  09D1               	comf	dtoa@n+6,f
  2970     0066  09D2               	comf	dtoa@n+7,f
  2971     0067  0ACB               	incf	dtoa@n,f
  2972     0068  1D03               	skipz
  2973     0069  287D               	goto	u132lld
  2974     006A  0ACC               	incf	dtoa@n+1,f
  2975     006B  1D03               	skipz
  2976     006C  287D               	goto	u132lld
  2977     006D  0ACD               	incf	dtoa@n+2,f
  2978     006E  1D03               	skipz
  2979     006F  287D               	goto	u132lld
  2980     0070  0ACE               	incf	dtoa@n+3,f
  2981     0071  1D03               	skipz
  2982     0072  287D               	goto	u132lld
  2983     0073  0ACF               	incf	dtoa@n+4,f
  2984     0074  1D03               	skipz
  2985     0075  287D               	goto	u132lld
  2986     0076  0AD0               	incf	dtoa@n+5,f
  2987     0077  1D03               	skipz
  2988     0078  287D               	goto	u132lld
  2989     0079  0AD1               	incf	dtoa@n+6,f
  2990     007A  1D03               	skipz
  2991     007B  287D               	goto	u132lld
  2992     007C  0AD2               	incf	dtoa@n+7,f
  2993     007D                     u132lld:
  2994     007D                     l2078:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2997     007D  0878               	movf	_prec+1,w
  2998     007E  3A80               	xorlw	128
  2999     007F  0020               	movlb	0	; select bank0
  3000     0080  00C3               	movwf	??_dtoa
  3001     0081  3080               	movlw	128
  3002     0082  0243               	subwf	??_dtoa,w
  3003     0083  1D03               	skipz
  3004     0084  2887               	goto	u1335
  3005     0085  3001               	movlw	1
  3006     0086  0277               	subwf	_prec,w
  3007     0087                     u1335:
  3008     0087  1803               	skipnc
  3009     0088  288A               	goto	u1331
  3010     0089  288B               	goto	u1330
  3011     008A                     u1331:
  3012     008A  2891               	goto	l2082
  3013     008B                     u1330:
  3014     008B                     l2080:
  3015     008B  3001               	movlw	1
  3016     008C  0020               	movlb	0	; select bank0
  3017     008D  00C7               	movwf	dtoa@p
  3018     008E  3000               	movlw	0
  3019     008F  00C8               	movwf	dtoa@p+1
  3020     0090  2896               	goto	l996
  3021     0091                     l2082:
  3022     0091  0878               	movf	_prec+1,w
  3023     0092  0020               	movlb	0	; select bank0
  3024     0093  00C8               	movwf	dtoa@p+1
  3025     0094  0877               	movf	_prec,w
  3026     0095  00C7               	movwf	dtoa@p
  3027     0096                     l996:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3030     0096  0021               	movlb	1	; select bank1
  3031     0097  0829               	movf	(_width+1)^(0+128),w
  3032     0098  0020               	movlb	0	; select bank0
  3033     0099  00CA               	movwf	dtoa@w+1
  3034     009A  0021               	movlb	1	; select bank1
  3035     009B  0828               	movf	_width^(0+128),w
  3036     009C  0020               	movlb	0	; select bank0
  3037     009D  00C9               	movwf	dtoa@w
  3038     009E                     l2084:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3041     009E  0853               	movf	dtoa@s,w
  3042     009F  1903               	btfsc	3,2
  3043     00A0  28A2               	goto	u1341
  3044     00A1  28A3               	goto	u1340
  3045     00A2                     u1341:
  3046     00A2  28B7               	goto	l997
  3047     00A3                     u1340:
  3048     00A3                     l2086:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3051     00A3  30FF               	movlw	255
  3052     00A4  07C9               	addwf	dtoa@w,f
  3053     00A5  30FF               	movlw	255
  3054     00A6  3DCA               	addwfc	dtoa@w+1,f
  3055     00A7                     l2088:
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3058     00A7  0853               	movf	dtoa@s,w
  3059     00A8  1D03               	btfss	3,2
  3060     00A9  28AB               	goto	u1351
  3061     00AA  28AC               	goto	u1350
  3062     00AB                     u1351:
  3063     00AB  28B1               	goto	l2092
  3064     00AC                     u1350:
  3065     00AC                     l2090:
  3066     00AC  302B               	movlw	43
  3067     00AD  00C4               	movwf	_dtoa$1221
  3068     00AE  3000               	movlw	0
  3069     00AF  00C5               	movwf	_dtoa$1221+1
  3070     00B0  28B5               	goto	l1001
  3071     00B1                     l2092:
  3072     00B1  302D               	movlw	45
  3073     00B2  00C4               	movwf	_dtoa$1221
  3074     00B3  3000               	movlw	0
  3075     00B4  00C5               	movwf	_dtoa$1221+1
  3076     00B5                     l1001:
  3077     00B5  0844               	movf	_dtoa$1221,w
  3078     00B6  00D3               	movwf	dtoa@s
  3079     00B7                     l997:	
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 471:     }
  3081                           
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3084     00B7  301F               	movlw	31
  3085     00B8  00D4               	movwf	dtoa@i
  3086     00B9  3000               	movlw	0
  3087     00BA  00D5               	movwf	dtoa@i+1
  3088     00BB                     l2094:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3091     00BB  0021               	movlb	1	; select bank1
  3092     00BC  01D0               	clrf	(_dbuf^(0+128)+31)
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3095     00BD  2926               	goto	l1002
  3096     00BE                     l2096:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3099     00BE  30FF               	movlw	255
  3100     00BF  0020               	movlb	0	; select bank0
  3101     00C0  07D4               	addwf	dtoa@i,f
  3102     00C1  30FF               	movlw	255
  3103     00C2  3DD5               	addwfc	dtoa@i+1,f
  3104     00C3                     l2098:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3107     00C3  300A               	movlw	10
  3108     00C4  00A0               	movwf	___aomod@divisor
  3109     00C5  01A1               	clrf	___aomod@divisor+1
  3110     00C6  01A2               	clrf	___aomod@divisor+2
  3111     00C7  01A3               	clrf	___aomod@divisor+3
  3112     00C8  01A4               	clrf	___aomod@divisor+4
  3113     00C9  01A5               	clrf	___aomod@divisor+5
  3114     00CA  01A6               	clrf	___aomod@divisor+6
  3115     00CB  01A7               	clrf	___aomod@divisor+7
  3116     00CC  084B               	movf	dtoa@n,w
  3117     00CD  00A8               	movwf	___aomod@dividend
  3118     00CE  084C               	movf	dtoa@n+1,w
  3119     00CF  00A9               	movwf	___aomod@dividend+1
  3120     00D0  084D               	movf	dtoa@n+2,w
  3121     00D1  00AA               	movwf	___aomod@dividend+2
  3122     00D2  084E               	movf	dtoa@n+3,w
  3123     00D3  00AB               	movwf	___aomod@dividend+3
  3124     00D4  084F               	movf	dtoa@n+4,w
  3125     00D5  00AC               	movwf	___aomod@dividend+4
  3126     00D6  0850               	movf	dtoa@n+5,w
  3127     00D7  00AD               	movwf	___aomod@dividend+5
  3128     00D8  0851               	movf	dtoa@n+6,w
  3129     00D9  00AE               	movwf	___aomod@dividend+6
  3130     00DA  0852               	movf	dtoa@n+7,w
  3131     00DB  00AF               	movwf	___aomod@dividend+7
  3132     00DC  3183  2366  3180   	fcall	___aomod
  3133     00DF  0020               	movlb	0	; select bank0
  3134     00E0  0821               	movf	?___aomod+1,w
  3135     00E1  00B4               	movwf	abs@a+1
  3136     00E2  0820               	movf	?___aomod,w
  3137     00E3  00B3               	movwf	abs@a
  3138     00E4  3186  2669  3180   	fcall	_abs
  3139     00E7  0020               	movlb	0	; select bank0
  3140     00E8  0833               	movf	?_abs,w
  3141     00E9  3E30               	addlw	48
  3142     00EA  00C3               	movwf	??_dtoa
  3143     00EB  0854               	movf	dtoa@i,w
  3144     00EC  3EB1               	addlw	(low (_dbuf| 0))& (0+255)
  3145     00ED  0086               	movwf	6
  3146     00EE  0187               	clrf	7
  3147     00EF  0843               	movf	??_dtoa,w
  3148     00F0  0081               	movwf	1
  3149     00F1                     l2100:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3152     00F1  30FF               	movlw	255
  3153     00F2  07C7               	addwf	dtoa@p,f
  3154     00F3  30FF               	movlw	255
  3155     00F4  3DC8               	addwfc	dtoa@p+1,f
  3156     00F5                     l2102:
  3157                           
  3158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3159     00F5  30FF               	movlw	255
  3160     00F6  07C9               	addwf	dtoa@w,f
  3161     00F7  30FF               	movlw	255
  3162     00F8  3DCA               	addwfc	dtoa@w+1,f
  3163     00F9                     l2104:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3166     00F9  300A               	movlw	10
  3167     00FA  00A0               	movwf	___aodiv@divisor
  3168     00FB  01A1               	clrf	___aodiv@divisor+1
  3169     00FC  01A2               	clrf	___aodiv@divisor+2
  3170     00FD  01A3               	clrf	___aodiv@divisor+3
  3171     00FE  01A4               	clrf	___aodiv@divisor+4
  3172     00FF  01A5               	clrf	___aodiv@divisor+5
  3173     0100  01A6               	clrf	___aodiv@divisor+6
  3174     0101  01A7               	clrf	___aodiv@divisor+7
  3175     0102  084B               	movf	dtoa@n,w
  3176     0103  00A8               	movwf	___aodiv@dividend
  3177     0104  084C               	movf	dtoa@n+1,w
  3178     0105  00A9               	movwf	___aodiv@dividend+1
  3179     0106  084D               	movf	dtoa@n+2,w
  3180     0107  00AA               	movwf	___aodiv@dividend+2
  3181     0108  084E               	movf	dtoa@n+3,w
  3182     0109  00AB               	movwf	___aodiv@dividend+3
  3183     010A  084F               	movf	dtoa@n+4,w
  3184     010B  00AC               	movwf	___aodiv@dividend+4
  3185     010C  0850               	movf	dtoa@n+5,w
  3186     010D  00AD               	movwf	___aodiv@dividend+5
  3187     010E  0851               	movf	dtoa@n+6,w
  3188     010F  00AE               	movwf	___aodiv@dividend+6
  3189     0110  0852               	movf	dtoa@n+7,w
  3190     0111  00AF               	movwf	___aodiv@dividend+7
  3191     0112  3181  216A  3180   	fcall	___aodiv
  3192     0115  0020               	movlb	0	; select bank0
  3193     0116  0820               	movf	?___aodiv,w
  3194     0117  00CB               	movwf	dtoa@n
  3195     0118  0821               	movf	?___aodiv+1,w
  3196     0119  00CC               	movwf	dtoa@n+1
  3197     011A  0822               	movf	?___aodiv+2,w
  3198     011B  00CD               	movwf	dtoa@n+2
  3199     011C  0823               	movf	?___aodiv+3,w
  3200     011D  00CE               	movwf	dtoa@n+3
  3201     011E  0824               	movf	?___aodiv+4,w
  3202     011F  00CF               	movwf	dtoa@n+4
  3203     0120  0825               	movf	?___aodiv+5,w
  3204     0121  00D0               	movwf	dtoa@n+5
  3205     0122  0826               	movf	?___aodiv+6,w
  3206     0123  00D1               	movwf	dtoa@n+6
  3207     0124  0827               	movf	?___aodiv+7,w
  3208     0125  00D2               	movwf	dtoa@n+7
  3209     0126                     l1002:	
  3210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 492:     }
  3211                           
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3214     0126  0020               	movlb	0	; select bank0
  3215     0127  0855               	movf	dtoa@i+1,w
  3216     0128  3A80               	xorlw	128
  3217     0129  00C3               	movwf	??_dtoa
  3218     012A  3080               	movlw	128
  3219     012B  0243               	subwf	??_dtoa,w
  3220     012C  1D03               	skipz
  3221     012D  2930               	goto	u1365
  3222     012E  3001               	movlw	1
  3223     012F  0254               	subwf	dtoa@i,w
  3224     0130                     u1365:
  3225     0130  1C03               	skipc
  3226     0131  2933               	goto	u1361
  3227     0132  2934               	goto	u1360
  3228     0133                     u1361:
  3229     0133  294E               	goto	l2110
  3230     0134                     u1360:
  3231     0134                     l2106:
  3232     0134  0020               	movlb	0	; select bank0
  3233     0135  084B               	movf	dtoa@n,w
  3234     0136  044C               	iorwf	dtoa@n+1,w
  3235     0137  044D               	iorwf	dtoa@n+2,w
  3236     0138  044E               	iorwf	dtoa@n+3,w
  3237     0139  044F               	iorwf	dtoa@n+4,w
  3238     013A  0450               	iorwf	dtoa@n+5,w
  3239     013B  0451               	iorwf	dtoa@n+6,w
  3240     013C  0452               	iorwf	dtoa@n+7,w
  3241     013D  1D03               	skipz
  3242     013E  2940               	goto	u1371
  3243     013F  2941               	goto	u1370
  3244     0140                     u1371:
  3245     0140  28BE               	goto	l2096
  3246     0141                     u1370:
  3247     0141                     l2108:
  3248     0141  0848               	movf	dtoa@p+1,w
  3249     0142  3A80               	xorlw	128
  3250     0143  00C3               	movwf	??_dtoa
  3251     0144  3080               	movlw	128
  3252     0145  0243               	subwf	??_dtoa,w
  3253     0146  1D03               	skipz
  3254     0147  294A               	goto	u1385
  3255     0148  3001               	movlw	1
  3256     0149  0247               	subwf	dtoa@p,w
  3257     014A                     u1385:
  3258     014A  1803               	skipnc
  3259     014B  294D               	goto	u1381
  3260     014C  294E               	goto	u1380
  3261     014D                     u1381:
  3262     014D  28BE               	goto	l2096
  3263     014E                     u1380:
  3264     014E                     l2110:
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3267     014E  0020               	movlb	0	; select bank0
  3268     014F  0853               	movf	dtoa@s,w
  3269     0150  1903               	btfsc	3,2
  3270     0151  2953               	goto	u1391
  3271     0152  2954               	goto	u1390
  3272     0153                     u1391:
  3273     0153  295E               	goto	l2116
  3274     0154                     u1390:
  3275     0154                     l2112:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3278     0154  30FF               	movlw	255
  3279     0155  07D4               	addwf	dtoa@i,f
  3280     0156  30FF               	movlw	255
  3281     0157  3DD5               	addwfc	dtoa@i+1,f
  3282     0158                     l2114:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3285     0158  0854               	movf	dtoa@i,w
  3286     0159  3EB1               	addlw	(low (_dbuf| 0))& (0+255)
  3287     015A  0086               	movwf	6
  3288     015B  0187               	clrf	7
  3289     015C  0853               	movf	dtoa@s,w
  3290     015D  0081               	movwf	1
  3291     015E                     l2116:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3294     015E  0854               	movf	dtoa@i,w
  3295     015F  3EB1               	addlw	(low (_dbuf| 0))& (0+255)
  3296     0160  00B1               	movwf	pad@buf
  3297     0161  084A               	movf	dtoa@w+1,w
  3298     0162  00B3               	movwf	pad@p+1
  3299     0163  0849               	movf	dtoa@w,w
  3300     0164  00B2               	movwf	pad@p
  3301     0165  0846               	movf	dtoa@fp,w
  3302     0166  3185  25A4  3180   	fcall	_pad
  3303     0169                     l1008:
  3304     0169  0008               	return
  3305     016A                     __end_of_dtoa:
  3306                           
  3307                           	psect	text5
  3308     05A4                     __ptext5:	
  3309 ;; *************** function _pad *****************
  3310 ;; Defined at:
  3311 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  fp              1    wreg     PTR struct _IO_FILE
  3314 ;;		 -> NULL(0), 
  3315 ;;  buf             1   17[BANK0 ] PTR unsigned char 
  3316 ;;		 -> dbuf(32), 
  3317 ;;  p               2   18[BANK0 ] int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  3320 ;;		 -> NULL(0), 
  3321 ;;  w               2   23[BANK0 ] int 
  3322 ;;  i               2   21[BANK0 ] int 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3332 ;;      Params:         0       3       0       0       0       0
  3333 ;;      Locals:         0       5       0       0       0       0
  3334 ;;      Temps:          0       1       0       0       0       0
  3335 ;;      Totals:         0       9       0       0       0       0
  3336 ;;Total ram usage:        9 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 7
  3339 ;; This function calls:
  3340 ;;		_fputc
  3341 ;;		_fputs
  3342 ;; This function is called by:
  3343 ;;		_dtoa
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347     05A4                     _pad:	
  3348                           ;psect for function _pad
  3349                           
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3353                           ;pad@fp stored from wreg
  3354     05A4  0020               	movlb	0	; select bank0
  3355     05A5  00B9               	movwf	pad@fp
  3356     05A6                     l2056:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3359     05A6  1BB3               	btfsc	pad@p+1,7
  3360     05A7  2DA9               	goto	u1271
  3361     05A8  2DAA               	goto	u1270
  3362     05A9                     u1271:
  3363     05A9  2DAF               	goto	l2060
  3364     05AA                     u1270:
  3365     05AA                     l2058:
  3366     05AA  0833               	movf	pad@p+1,w
  3367     05AB  00B8               	movwf	pad@w+1
  3368     05AC  0832               	movf	pad@p,w
  3369     05AD  00B7               	movwf	pad@w
  3370     05AE  2DB1               	goto	l985
  3371     05AF                     l2060:
  3372     05AF  01B7               	clrf	pad@w
  3373     05B0  01B8               	clrf	pad@w+1
  3374     05B1                     l985:
  3375                           
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3377     05B1  01B5               	clrf	pad@i
  3378     05B2  01B6               	clrf	pad@i+1
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3381     05B3  2DC3               	goto	l2066
  3382     05B4                     l2062:
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3385     05B4  3020               	movlw	32
  3386     05B5  0020               	movlb	0	; select bank0
  3387     05B6  00A2               	movwf	fputc@c
  3388     05B7  3000               	movlw	0
  3389     05B8  00A3               	movwf	fputc@c+1
  3390     05B9  0839               	movf	pad@fp,w
  3391     05BA  00A4               	movwf	fputc@fp
  3392     05BB  3185  2561  3185   	fcall	_fputc
  3393     05BE                     l2064:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3396     05BE  3001               	movlw	1
  3397     05BF  0020               	movlb	0	; select bank0
  3398     05C0  07B5               	addwf	pad@i,f
  3399     05C1  3000               	movlw	0
  3400     05C2  3DB6               	addwfc	pad@i+1,f
  3401     05C3                     l2066:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3404     05C3  0836               	movf	pad@i+1,w
  3405     05C4  3A80               	xorlw	128
  3406     05C5  00B4               	movwf	??_pad
  3407     05C6  0838               	movf	pad@w+1,w
  3408     05C7  3A80               	xorlw	128
  3409     05C8  0234               	subwf	??_pad,w
  3410     05C9  1D03               	skipz
  3411     05CA  2DCD               	goto	u1285
  3412     05CB  0837               	movf	pad@w,w
  3413     05CC  0235               	subwf	pad@i,w
  3414     05CD                     u1285:
  3415     05CD  1C03               	skipc
  3416     05CE  2DD0               	goto	u1281
  3417     05CF  2DD1               	goto	u1280
  3418     05D0                     u1281:
  3419     05D0  2DB4               	goto	l2062
  3420     05D1                     u1280:
  3421     05D1                     l2068:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3424     05D1  0020               	movlb	0	; select bank0
  3425     05D2  0839               	movf	pad@fp,w
  3426     05D3  00AA               	movwf	fputs@fp
  3427     05D4  0831               	movf	pad@buf,w
  3428     05D5  3186  2605  3185   	fcall	_fputs
  3429     05D8                     l989:
  3430     05D8  0008               	return
  3431     05D9                     __end_of_pad:
  3432                           
  3433                           	psect	text6
  3434     0605                     __ptext6:	
  3435 ;; *************** function _fputs *****************
  3436 ;; Defined at:
  3437 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  s               1    wreg     PTR const unsigned char 
  3440 ;;		 -> dbuf(32), 
  3441 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  3442 ;;		 -> NULL(0), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  3445 ;;		 -> dbuf(32), 
  3446 ;;  i               2   15[BANK0 ] int 
  3447 ;;  c               1   14[BANK0 ] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2   10[BANK0 ] int 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3457 ;;      Params:         0       1       0       0       0       0
  3458 ;;      Locals:         0       4       0       0       0       0
  3459 ;;      Temps:          0       2       0       0       0       0
  3460 ;;      Totals:         0       7       0       0       0       0
  3461 ;;Total ram usage:        7 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 6
  3464 ;; This function calls:
  3465 ;;		_fputc
  3466 ;; This function is called by:
  3467 ;;		_pad
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471     0605                     _fputs:	
  3472                           ;psect for function _fputs
  3473                           
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3477                           ;fputs@s stored from wreg
  3478     0605  0020               	movlb	0	; select bank0
  3479     0606  00AD               	movwf	fputs@s
  3480     0607                     l2048:
  3481     0607  01AF               	clrf	fputs@i
  3482     0608  01B0               	clrf	fputs@i+1
  3483     0609  2E1B               	goto	l2054
  3484     060A                     l2050:
  3485     060A  082E               	movf	fputs@c,w
  3486     060B  00AB               	movwf	??_fputs
  3487     060C  01AC               	clrf	??_fputs+1
  3488     060D  082B               	movf	??_fputs,w
  3489     060E  00A2               	movwf	fputc@c
  3490     060F  082C               	movf	??_fputs+1,w
  3491     0610  00A3               	movwf	fputc@c+1
  3492     0611  082A               	movf	fputs@fp,w
  3493     0612  00A4               	movwf	fputc@fp
  3494     0613  3185  2561  3186   	fcall	_fputc
  3495     0616                     l2052:
  3496     0616  3001               	movlw	1
  3497     0617  0020               	movlb	0	; select bank0
  3498     0618  07AF               	addwf	fputs@i,f
  3499     0619  3000               	movlw	0
  3500     061A  3DB0               	addwfc	fputs@i+1,f
  3501     061B                     l2054:
  3502     061B  082F               	movf	fputs@i,w
  3503     061C  072D               	addwf	fputs@s,w
  3504     061D  00AB               	movwf	??_fputs
  3505     061E  082B               	movf	??_fputs,w
  3506     061F  0086               	movwf	6
  3507     0620  0187               	clrf	7
  3508     0621  0801               	movf	1,w
  3509     0622  00AE               	movwf	fputs@c
  3510     0623  082E               	movf	fputs@c,w
  3511     0624  1D03               	btfss	3,2
  3512     0625  2E27               	goto	u1261
  3513     0626  2E28               	goto	u1260
  3514     0627                     u1261:
  3515     0627  2E0A               	goto	l2050
  3516     0628                     u1260:
  3517     0628                     l1058:
  3518     0628  0008               	return
  3519     0629                     __end_of_fputs:
  3520                           
  3521                           	psect	text7
  3522     0561                     __ptext7:	
  3523 ;; *************** function _fputc *****************
  3524 ;; Defined at:
  3525 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  c               2    2[BANK0 ] int 
  3528 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
  3529 ;;		 -> NULL(0), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    2[BANK0 ] int 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3541 ;;      Params:         0       3       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0
  3543 ;;      Temps:          0       5       0       0       0       0
  3544 ;;      Totals:         0       8       0       0       0       0
  3545 ;;Total ram usage:        8 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 5
  3548 ;; This function calls:
  3549 ;;		_putch
  3550 ;; This function is called by:
  3551 ;;		_pad
  3552 ;;		_vfpfcnvrt
  3553 ;;		_fputs
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557     0561                     _fputc:	
  3558                           ;psect for function _fputc
  3559                           
  3560     0561                     l2034:	
  3561                           ;incstack = 0
  3562                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3563                           
  3564     0561  0020               	movlb	0	; select bank0
  3565     0562  0824               	movf	fputc@fp,w
  3566     0563  1903               	btfsc	3,2
  3567     0564  2D66               	goto	u1221
  3568     0565  2D67               	goto	u1220
  3569     0566                     u1221:
  3570     0566  2D6C               	goto	l2038
  3571     0567                     u1220:
  3572     0567                     l2036:
  3573     0567  0824               	movf	fputc@fp,w
  3574     0568  1D03               	btfss	3,2
  3575     0569  2D6B               	goto	u1231
  3576     056A  2D6C               	goto	u1230
  3577     056B                     u1231:
  3578     056B  2D71               	goto	l2040
  3579     056C                     u1230:
  3580     056C                     l2038:
  3581     056C  0822               	movf	fputc@c,w
  3582     056D  3187  2770  3185   	fcall	_putch
  3583     0570  2DA3               	goto	l1050
  3584     0571                     l2040:
  3585     0571  0824               	movf	fputc@fp,w
  3586     0572  3E08               	addlw	8
  3587     0573  0086               	movwf	6
  3588     0574  0187               	clrf	7
  3589     0575  0016               	moviw fsr1++
  3590     0576  0401               	iorwf	1,w
  3591     0577  1903               	btfsc	3,2
  3592     0578  2D7A               	goto	u1241
  3593     0579  2D7B               	goto	u1240
  3594     057A                     u1241:
  3595     057A  2D99               	goto	l2044
  3596     057B                     u1240:
  3597     057B                     l2042:
  3598     057B  0824               	movf	fputc@fp,w
  3599     057C  3E08               	addlw	8
  3600     057D  0086               	movwf	6
  3601     057E  0187               	clrf	7
  3602     057F  3F40               	moviw [0]fsr1
  3603     0580  00A5               	movwf	??_fputc
  3604     0581  3F41               	moviw [1]fsr1
  3605     0582  00A6               	movwf	??_fputc+1
  3606     0583  0824               	movf	fputc@fp,w
  3607     0584  3E02               	addlw	2
  3608     0585  0086               	movwf	6
  3609     0586  0187               	clrf	7
  3610     0587  3F40               	moviw [0]fsr1
  3611     0588  00A7               	movwf	??_fputc+2
  3612     0589  3F41               	moviw [1]fsr1
  3613     058A  00A8               	movwf	??_fputc+3
  3614     058B  0828               	movf	??_fputc+3,w
  3615     058C  3A80               	xorlw	128
  3616     058D  00A9               	movwf	??_fputc+4
  3617     058E  0826               	movf	??_fputc+1,w
  3618     058F  3A80               	xorlw	128
  3619     0590  0229               	subwf	??_fputc+4,w
  3620     0591  1D03               	skipz
  3621     0592  2D95               	goto	u1255
  3622     0593  0825               	movf	??_fputc,w
  3623     0594  0227               	subwf	??_fputc+2,w
  3624     0595                     u1255:
  3625     0595  1803               	skipnc
  3626     0596  2D98               	goto	u1251
  3627     0597  2D99               	goto	u1250
  3628     0598                     u1251:
  3629     0598  2DA3               	goto	l1050
  3630     0599                     u1250:
  3631     0599                     l2044:
  3632     0599  0020               	movlb	0	; select bank0
  3633     059A  0824               	movf	fputc@fp,w
  3634     059B  3E02               	addlw	2
  3635     059C  0086               	movwf	6
  3636     059D  0187               	clrf	7
  3637     059E  3001               	movlw	1
  3638     059F  0781               	addwf	1,f
  3639     05A0  3141               	addfsr 1,1
  3640     05A1  1803               	skipnc
  3641     05A2  0A81               	incf	1,f
  3642     05A3                     l1050:
  3643     05A3  0008               	return
  3644     05A4                     __end_of_fputc:
  3645                           
  3646                           	psect	text8
  3647     0770                     __ptext8:	
  3648 ;; *************** function _putch *****************
  3649 ;; Defined at:
  3650 ;;		line 146 in file "mcc_generated_files/eusart.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  txData          1    wreg     unsigned char 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  txData          1    1[BANK0 ] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3664 ;;      Params:         0       0       0       0       0       0
  3665 ;;      Locals:         0       1       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0       0
  3667 ;;      Totals:         0       1       0       0       0       0
  3668 ;;Total ram usage:        1 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 4
  3671 ;; This function calls:
  3672 ;;		_EUSART_Write
  3673 ;; This function is called by:
  3674 ;;		_fputc
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678     0770                     _putch:	
  3679                           ;psect for function _putch
  3680                           
  3681                           
  3682                           ;incstack = 0
  3683                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3684                           ;putch@txData stored from wreg
  3685     0770  0020               	movlb	0	; select bank0
  3686     0771  00A1               	movwf	putch@txData
  3687     0772                     l2032:
  3688                           
  3689                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  3690     0772  0821               	movf	putch@txData,w
  3691     0773  3187  2739  3187   	fcall	_EUSART_Write
  3692     0776                     l203:
  3693     0776  0008               	return
  3694     0777                     __end_of_putch:
  3695                           
  3696                           	psect	text9
  3697     0739                     __ptext9:	
  3698 ;; *************** function _EUSART_Write *****************
  3699 ;; Defined at:
  3700 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  txData          1    wreg     unsigned char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  txData          1    0[BANK0 ] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3714 ;;      Params:         0       0       0       0       0       0
  3715 ;;      Locals:         0       1       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0
  3717 ;;      Totals:         0       1       0       0       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 3
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_putch
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728     0739                     _EUSART_Write:	
  3729                           ;psect for function _EUSART_Write
  3730                           
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in _EUSART_Write: [wreg]
  3734                           ;EUSART_Write@txData stored from wreg
  3735     0739  0020               	movlb	0	; select bank0
  3736     073A  00A0               	movwf	EUSART_Write@txData
  3737     073B                     l2028:
  3738     073B                     l194:	
  3739                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3740                           
  3741                           
  3742                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3743     073B  1E11               	btfss	17,4	;volatile
  3744     073C  2F3E               	goto	u1211
  3745     073D  2F3F               	goto	u1210
  3746     073E                     u1211:
  3747     073E  2F3B               	goto	l194
  3748     073F                     u1210:
  3749     073F                     l2030:
  3750                           
  3751                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3752     073F  0820               	movf	EUSART_Write@txData,w
  3753     0740  0023               	movlb	3	; select bank3
  3754     0741  009A               	movwf	26	;volatile
  3755     0742                     l197:
  3756     0742  0008               	return
  3757     0743                     __end_of_EUSART_Write:
  3758                           
  3759                           	psect	text10
  3760     0669                     __ptext10:	
  3761 ;; *************** function _abs *****************
  3762 ;; Defined at:
  3763 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  a               2   19[BANK0 ] int 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2   19[BANK0 ] int 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3777 ;;      Params:         0       2       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0
  3779 ;;      Temps:          0       2       0       0       0       0
  3780 ;;      Totals:         0       4       0       0       0       0
  3781 ;;Total ram usage:        4 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 3
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_dtoa
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791     0669                     _abs:	
  3792                           ;psect for function _abs
  3793                           
  3794     0669                     l1682:	
  3795                           ;incstack = 0
  3796                           ; Regs used in _abs: [wreg+status,2+status,0]
  3797                           
  3798     0669  0020               	movlb	0	; select bank0
  3799     066A  0834               	movf	abs@a+1,w
  3800     066B  3A80               	xorlw	128
  3801     066C  00B5               	movwf	??_abs
  3802     066D  3080               	movlw	128
  3803     066E  0235               	subwf	??_abs,w
  3804     066F  1D03               	skipz
  3805     0670  2E73               	goto	u905
  3806     0671  3001               	movlw	1
  3807     0672  0233               	subwf	abs@a,w
  3808     0673                     u905:
  3809     0673  1803               	skipnc
  3810     0674  2E76               	goto	u901
  3811     0675  2E77               	goto	u900
  3812     0676                     u901:
  3813     0676  2E84               	goto	l1035
  3814     0677                     u900:
  3815     0677                     l1684:
  3816     0677  0020               	movlb	0	; select bank0
  3817     0678  0933               	comf	abs@a,w
  3818     0679  00B5               	movwf	??_abs
  3819     067A  0934               	comf	abs@a+1,w
  3820     067B  00B6               	movwf	??_abs+1
  3821     067C  0AB5               	incf	??_abs,f
  3822     067D  1903               	skipnz
  3823     067E  0AB6               	incf	??_abs+1,f
  3824     067F  0835               	movf	??_abs,w
  3825     0680  00B3               	movwf	?_abs
  3826     0681  0836               	movf	??_abs+1,w
  3827     0682  00B4               	movwf	?_abs+1
  3828     0683  2E84               	goto	l1038
  3829     0684                     l1035:
  3830     0684                     l1038:
  3831     0684  0008               	return
  3832     0685                     __end_of_abs:
  3833                           
  3834                           	psect	text11
  3835     0366                     __ptext11:	
  3836 ;; *************** function ___aomod *****************
  3837 ;; Defined at:
  3838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  divisor         8    0[BANK0 ] long long 
  3841 ;;  dividend        8    8[BANK0 ] long long 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  sign            1   18[BANK0 ] unsigned char 
  3844 ;;  counter         1   17[BANK0 ] unsigned char 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  8    0[BANK0 ] long long 
  3847 ;; Registers used:
  3848 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3854 ;;      Params:         0      16       0       0       0       0
  3855 ;;      Locals:         0       2       0       0       0       0
  3856 ;;      Temps:          0       1       0       0       0       0
  3857 ;;      Totals:         0      19       0       0       0       0
  3858 ;;Total ram usage:       19 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 3
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_dtoa
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868     0366                     ___aomod:	
  3869                           ;psect for function ___aomod
  3870                           
  3871     0366                     l1638:	
  3872                           ;incstack = 0
  3873                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3874                           
  3875     0366  0020               	movlb	0	; select bank0
  3876     0367  01B2               	clrf	___aomod@sign
  3877     0368                     l1640:
  3878     0368  3028               	movlw	low ___aomod@dividend
  3879     0369  0086               	movwf	6
  3880     036A  3000               	movlw	high ___aomod@dividend
  3881     036B  0087               	movwf	7
  3882     036C  3F47               	moviw [7]fsr1
  3883     036D  00B0               	movwf	??___aomod
  3884     036E  1FB0               	btfss	??___aomod,7
  3885     036F  2B71               	goto	u781
  3886     0370  2B72               	goto	u780
  3887     0371                     u781:
  3888     0371  2B94               	goto	l1644
  3889     0372                     u780:
  3890     0372                     l1642:
  3891     0372  0020               	movlb	0	; select bank0
  3892     0373  09A8               	comf	___aomod@dividend,f
  3893     0374  09A9               	comf	___aomod@dividend+1,f
  3894     0375  09AA               	comf	___aomod@dividend+2,f
  3895     0376  09AB               	comf	___aomod@dividend+3,f
  3896     0377  09AC               	comf	___aomod@dividend+4,f
  3897     0378  09AD               	comf	___aomod@dividend+5,f
  3898     0379  09AE               	comf	___aomod@dividend+6,f
  3899     037A  09AF               	comf	___aomod@dividend+7,f
  3900     037B  0AA8               	incf	___aomod@dividend,f
  3901     037C  1D03               	skipz
  3902     037D  2B91               	goto	u79lld
  3903     037E  0AA9               	incf	___aomod@dividend+1,f
  3904     037F  1D03               	skipz
  3905     0380  2B91               	goto	u79lld
  3906     0381  0AAA               	incf	___aomod@dividend+2,f
  3907     0382  1D03               	skipz
  3908     0383  2B91               	goto	u79lld
  3909     0384  0AAB               	incf	___aomod@dividend+3,f
  3910     0385  1D03               	skipz
  3911     0386  2B91               	goto	u79lld
  3912     0387  0AAC               	incf	___aomod@dividend+4,f
  3913     0388  1D03               	skipz
  3914     0389  2B91               	goto	u79lld
  3915     038A  0AAD               	incf	___aomod@dividend+5,f
  3916     038B  1D03               	skipz
  3917     038C  2B91               	goto	u79lld
  3918     038D  0AAE               	incf	___aomod@dividend+6,f
  3919     038E  1D03               	skipz
  3920     038F  2B91               	goto	u79lld
  3921     0390  0AAF               	incf	___aomod@dividend+7,f
  3922     0391                     u79lld:
  3923     0391  0020               	movlb	0	; select bank0
  3924     0392  01B2               	clrf	___aomod@sign
  3925     0393  0AB2               	incf	___aomod@sign,f
  3926     0394                     l1644:
  3927     0394  3020               	movlw	low ___aomod@divisor
  3928     0395  0086               	movwf	6
  3929     0396  3000               	movlw	high ___aomod@divisor
  3930     0397  0087               	movwf	7
  3931     0398  3F47               	moviw [7]fsr1
  3932     0399  0020               	movlb	0	; select bank0
  3933     039A  00B0               	movwf	??___aomod
  3934     039B  1FB0               	btfss	??___aomod,7
  3935     039C  2B9E               	goto	u801
  3936     039D  2B9F               	goto	u800
  3937     039E                     u801:
  3938     039E  2BBE               	goto	l1648
  3939     039F                     u800:
  3940     039F                     l1646:
  3941     039F  0020               	movlb	0	; select bank0
  3942     03A0  09A0               	comf	___aomod@divisor,f
  3943     03A1  09A1               	comf	___aomod@divisor+1,f
  3944     03A2  09A2               	comf	___aomod@divisor+2,f
  3945     03A3  09A3               	comf	___aomod@divisor+3,f
  3946     03A4  09A4               	comf	___aomod@divisor+4,f
  3947     03A5  09A5               	comf	___aomod@divisor+5,f
  3948     03A6  09A6               	comf	___aomod@divisor+6,f
  3949     03A7  09A7               	comf	___aomod@divisor+7,f
  3950     03A8  0AA0               	incf	___aomod@divisor,f
  3951     03A9  1D03               	skipz
  3952     03AA  2BBE               	goto	u81lld
  3953     03AB  0AA1               	incf	___aomod@divisor+1,f
  3954     03AC  1D03               	skipz
  3955     03AD  2BBE               	goto	u81lld
  3956     03AE  0AA2               	incf	___aomod@divisor+2,f
  3957     03AF  1D03               	skipz
  3958     03B0  2BBE               	goto	u81lld
  3959     03B1  0AA3               	incf	___aomod@divisor+3,f
  3960     03B2  1D03               	skipz
  3961     03B3  2BBE               	goto	u81lld
  3962     03B4  0AA4               	incf	___aomod@divisor+4,f
  3963     03B5  1D03               	skipz
  3964     03B6  2BBE               	goto	u81lld
  3965     03B7  0AA5               	incf	___aomod@divisor+5,f
  3966     03B8  1D03               	skipz
  3967     03B9  2BBE               	goto	u81lld
  3968     03BA  0AA6               	incf	___aomod@divisor+6,f
  3969     03BB  1D03               	skipz
  3970     03BC  2BBE               	goto	u81lld
  3971     03BD  0AA7               	incf	___aomod@divisor+7,f
  3972     03BE                     u81lld:
  3973     03BE                     l1648:
  3974     03BE  0020               	movlb	0	; select bank0
  3975     03BF  0820               	movf	___aomod@divisor,w
  3976     03C0  0421               	iorwf	___aomod@divisor+1,w
  3977     03C1  0422               	iorwf	___aomod@divisor+2,w
  3978     03C2  0423               	iorwf	___aomod@divisor+3,w
  3979     03C3  0424               	iorwf	___aomod@divisor+4,w
  3980     03C4  0425               	iorwf	___aomod@divisor+5,w
  3981     03C5  0426               	iorwf	___aomod@divisor+6,w
  3982     03C6  0427               	iorwf	___aomod@divisor+7,w
  3983     03C7  1903               	skipnz
  3984     03C8  2BCA               	goto	u821
  3985     03C9  2BCB               	goto	u820
  3986     03CA                     u821:
  3987     03CA  2C1E               	goto	l1664
  3988     03CB                     u820:
  3989     03CB                     l1650:
  3990     03CB  01B1               	clrf	___aomod@counter
  3991     03CC  0AB1               	incf	___aomod@counter,f
  3992     03CD  2BDA               	goto	l1656
  3993     03CE                     l1652:
  3994     03CE  35A0               	lslf	___aomod@divisor,f
  3995     03CF  0DA1               	rlf	___aomod@divisor+1,f
  3996     03D0  0DA2               	rlf	___aomod@divisor+2,f
  3997     03D1  0DA3               	rlf	___aomod@divisor+3,f
  3998     03D2  0DA4               	rlf	___aomod@divisor+4,f
  3999     03D3  0DA5               	rlf	___aomod@divisor+5,f
  4000     03D4  0DA6               	rlf	___aomod@divisor+6,f
  4001     03D5  0DA7               	rlf	___aomod@divisor+7,f
  4002     03D6                     l1654:
  4003     03D6  3001               	movlw	1
  4004     03D7  00B0               	movwf	??___aomod
  4005     03D8  0830               	movf	??___aomod,w
  4006     03D9  07B1               	addwf	___aomod@counter,f
  4007     03DA                     l1656:
  4008     03DA  1FA7               	btfss	___aomod@divisor+7,7
  4009     03DB  2BDD               	goto	u831
  4010     03DC  2BDE               	goto	u830
  4011     03DD                     u831:
  4012     03DD  2BCE               	goto	l1652
  4013     03DE                     u830:
  4014     03DE                     l1658:
  4015     03DE  0827               	movf	___aomod@divisor+7,w
  4016     03DF  022F               	subwf	___aomod@dividend+7,w
  4017     03E0  1D03               	skipz
  4018     03E1  2BFC               	goto	u845
  4019     03E2  0826               	movf	___aomod@divisor+6,w
  4020     03E3  022E               	subwf	___aomod@dividend+6,w
  4021     03E4  1D03               	skipz
  4022     03E5  2BFC               	goto	u845
  4023     03E6  0825               	movf	___aomod@divisor+5,w
  4024     03E7  022D               	subwf	___aomod@dividend+5,w
  4025     03E8  1D03               	skipz
  4026     03E9  2BFC               	goto	u845
  4027     03EA  0824               	movf	___aomod@divisor+4,w
  4028     03EB  022C               	subwf	___aomod@dividend+4,w
  4029     03EC  1D03               	skipz
  4030     03ED  2BFC               	goto	u845
  4031     03EE  0823               	movf	___aomod@divisor+3,w
  4032     03EF  022B               	subwf	___aomod@dividend+3,w
  4033     03F0  1D03               	skipz
  4034     03F1  2BFC               	goto	u845
  4035     03F2  0822               	movf	___aomod@divisor+2,w
  4036     03F3  022A               	subwf	___aomod@dividend+2,w
  4037     03F4  1D03               	skipz
  4038     03F5  2BFC               	goto	u845
  4039     03F6  0821               	movf	___aomod@divisor+1,w
  4040     03F7  0229               	subwf	___aomod@dividend+1,w
  4041     03F8  1D03               	skipz
  4042     03F9  2BFC               	goto	u845
  4043     03FA  0820               	movf	___aomod@divisor,w
  4044     03FB  0228               	subwf	___aomod@dividend,w
  4045     03FC                     u845:
  4046     03FC  1C03               	skipc
  4047     03FD  2BFF               	goto	u841
  4048     03FE  2C00               	goto	u840
  4049     03FF                     u841:
  4050     03FF  2C10               	goto	l1662
  4051     0400                     u840:
  4052     0400                     l1660:
  4053     0400  0820               	movf	___aomod@divisor,w
  4054     0401  02A8               	subwf	___aomod@dividend,f
  4055     0402  0821               	movf	___aomod@divisor+1,w
  4056     0403  3BA9               	subwfb	___aomod@dividend+1,f
  4057     0404  0822               	movf	___aomod@divisor+2,w
  4058     0405  3BAA               	subwfb	___aomod@dividend+2,f
  4059     0406  0823               	movf	___aomod@divisor+3,w
  4060     0407  3BAB               	subwfb	___aomod@dividend+3,f
  4061     0408  0824               	movf	___aomod@divisor+4,w
  4062     0409  3BAC               	subwfb	___aomod@dividend+4,f
  4063     040A  0825               	movf	___aomod@divisor+5,w
  4064     040B  3BAD               	subwfb	___aomod@dividend+5,f
  4065     040C  0826               	movf	___aomod@divisor+6,w
  4066     040D  3BAE               	subwfb	___aomod@dividend+6,f
  4067     040E  0827               	movf	___aomod@divisor+7,w
  4068     040F  3BAF               	subwfb	___aomod@dividend+7,f
  4069     0410                     l1662:
  4070     0410  36A7               	lsrf	___aomod@divisor+7,f
  4071     0411  0CA6               	rrf	___aomod@divisor+6,f
  4072     0412  0CA5               	rrf	___aomod@divisor+5,f
  4073     0413  0CA4               	rrf	___aomod@divisor+4,f
  4074     0414  0CA3               	rrf	___aomod@divisor+3,f
  4075     0415  0CA2               	rrf	___aomod@divisor+2,f
  4076     0416  0CA1               	rrf	___aomod@divisor+1,f
  4077     0417  0CA0               	rrf	___aomod@divisor,f
  4078     0418  3001               	movlw	1
  4079     0419  02B1               	subwf	___aomod@counter,f
  4080     041A  1D03               	btfss	3,2
  4081     041B  2C1D               	goto	u851
  4082     041C  2C1E               	goto	u850
  4083     041D                     u851:
  4084     041D  2BDE               	goto	l1658
  4085     041E                     u850:
  4086     041E                     l1664:
  4087     041E  0832               	movf	___aomod@sign,w
  4088     041F  1903               	btfsc	3,2
  4089     0420  2C22               	goto	u861
  4090     0421  2C23               	goto	u860
  4091     0422                     u861:
  4092     0422  2C41               	goto	l613
  4093     0423                     u860:
  4094     0423                     l1666:
  4095     0423  09A8               	comf	___aomod@dividend,f
  4096     0424  09A9               	comf	___aomod@dividend+1,f
  4097     0425  09AA               	comf	___aomod@dividend+2,f
  4098     0426  09AB               	comf	___aomod@dividend+3,f
  4099     0427  09AC               	comf	___aomod@dividend+4,f
  4100     0428  09AD               	comf	___aomod@dividend+5,f
  4101     0429  09AE               	comf	___aomod@dividend+6,f
  4102     042A  09AF               	comf	___aomod@dividend+7,f
  4103     042B  0AA8               	incf	___aomod@dividend,f
  4104     042C  1D03               	skipz
  4105     042D  2C41               	goto	u87lld
  4106     042E  0AA9               	incf	___aomod@dividend+1,f
  4107     042F  1D03               	skipz
  4108     0430  2C41               	goto	u87lld
  4109     0431  0AAA               	incf	___aomod@dividend+2,f
  4110     0432  1D03               	skipz
  4111     0433  2C41               	goto	u87lld
  4112     0434  0AAB               	incf	___aomod@dividend+3,f
  4113     0435  1D03               	skipz
  4114     0436  2C41               	goto	u87lld
  4115     0437  0AAC               	incf	___aomod@dividend+4,f
  4116     0438  1D03               	skipz
  4117     0439  2C41               	goto	u87lld
  4118     043A  0AAD               	incf	___aomod@dividend+5,f
  4119     043B  1D03               	skipz
  4120     043C  2C41               	goto	u87lld
  4121     043D  0AAE               	incf	___aomod@dividend+6,f
  4122     043E  1D03               	skipz
  4123     043F  2C41               	goto	u87lld
  4124     0440  0AAF               	incf	___aomod@dividend+7,f
  4125     0441                     u87lld:
  4126     0441                     l613:
  4127     0441  0020               	movlb	0	; select bank0
  4128     0442  0828               	movf	___aomod@dividend,w
  4129     0443  00A0               	movwf	?___aomod
  4130     0444  0829               	movf	___aomod@dividend+1,w
  4131     0445  00A1               	movwf	?___aomod+1
  4132     0446  082A               	movf	___aomod@dividend+2,w
  4133     0447  00A2               	movwf	?___aomod+2
  4134     0448  082B               	movf	___aomod@dividend+3,w
  4135     0449  00A3               	movwf	?___aomod+3
  4136     044A  082C               	movf	___aomod@dividend+4,w
  4137     044B  00A4               	movwf	?___aomod+4
  4138     044C  082D               	movf	___aomod@dividend+5,w
  4139     044D  00A5               	movwf	?___aomod+5
  4140     044E  082E               	movf	___aomod@dividend+6,w
  4141     044F  00A6               	movwf	?___aomod+6
  4142     0450  082F               	movf	___aomod@dividend+7,w
  4143     0451  00A7               	movwf	?___aomod+7
  4144     0452                     l614:
  4145     0452  0008               	return
  4146     0453                     __end_of___aomod:
  4147                           
  4148                           	psect	text12
  4149     016A                     __ptext12:	
  4150 ;; *************** function ___aodiv *****************
  4151 ;; Defined at:
  4152 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  divisor         8    0[BANK0 ] long long 
  4155 ;;  dividend        8    8[BANK0 ] long long 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  quotient        8   19[BANK0 ] long long 
  4158 ;;  sign            1   18[BANK0 ] unsigned char 
  4159 ;;  counter         1   17[BANK0 ] unsigned char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  8    0[BANK0 ] long long 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4169 ;;      Params:         0      16       0       0       0       0
  4170 ;;      Locals:         0      10       0       0       0       0
  4171 ;;      Temps:          0       1       0       0       0       0
  4172 ;;      Totals:         0      27       0       0       0       0
  4173 ;;Total ram usage:       27 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 3
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_dtoa
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183     016A                     ___aodiv:	
  4184                           ;psect for function ___aodiv
  4185                           
  4186     016A                     l1600:	
  4187                           ;incstack = 0
  4188                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4189                           
  4190     016A  0020               	movlb	0	; select bank0
  4191     016B  01B2               	clrf	___aodiv@sign
  4192     016C                     l1602:
  4193     016C  3020               	movlw	low ___aodiv@divisor
  4194     016D  0086               	movwf	6
  4195     016E  3000               	movlw	high ___aodiv@divisor
  4196     016F  0087               	movwf	7
  4197     0170  3F47               	moviw [7]fsr1
  4198     0171  00B0               	movwf	??___aodiv
  4199     0172  1FB0               	btfss	??___aodiv,7
  4200     0173  2975               	goto	u671
  4201     0174  2976               	goto	u670
  4202     0175                     u671:
  4203     0175  2998               	goto	l1606
  4204     0176                     u670:
  4205     0176                     l1604:
  4206     0176  0020               	movlb	0	; select bank0
  4207     0177  09A0               	comf	___aodiv@divisor,f
  4208     0178  09A1               	comf	___aodiv@divisor+1,f
  4209     0179  09A2               	comf	___aodiv@divisor+2,f
  4210     017A  09A3               	comf	___aodiv@divisor+3,f
  4211     017B  09A4               	comf	___aodiv@divisor+4,f
  4212     017C  09A5               	comf	___aodiv@divisor+5,f
  4213     017D  09A6               	comf	___aodiv@divisor+6,f
  4214     017E  09A7               	comf	___aodiv@divisor+7,f
  4215     017F  0AA0               	incf	___aodiv@divisor,f
  4216     0180  1D03               	skipz
  4217     0181  2995               	goto	u68lld
  4218     0182  0AA1               	incf	___aodiv@divisor+1,f
  4219     0183  1D03               	skipz
  4220     0184  2995               	goto	u68lld
  4221     0185  0AA2               	incf	___aodiv@divisor+2,f
  4222     0186  1D03               	skipz
  4223     0187  2995               	goto	u68lld
  4224     0188  0AA3               	incf	___aodiv@divisor+3,f
  4225     0189  1D03               	skipz
  4226     018A  2995               	goto	u68lld
  4227     018B  0AA4               	incf	___aodiv@divisor+4,f
  4228     018C  1D03               	skipz
  4229     018D  2995               	goto	u68lld
  4230     018E  0AA5               	incf	___aodiv@divisor+5,f
  4231     018F  1D03               	skipz
  4232     0190  2995               	goto	u68lld
  4233     0191  0AA6               	incf	___aodiv@divisor+6,f
  4234     0192  1D03               	skipz
  4235     0193  2995               	goto	u68lld
  4236     0194  0AA7               	incf	___aodiv@divisor+7,f
  4237     0195                     u68lld:
  4238     0195  0020               	movlb	0	; select bank0
  4239     0196  01B2               	clrf	___aodiv@sign
  4240     0197  0AB2               	incf	___aodiv@sign,f
  4241     0198                     l1606:
  4242     0198  3028               	movlw	low ___aodiv@dividend
  4243     0199  0086               	movwf	6
  4244     019A  3000               	movlw	high ___aodiv@dividend
  4245     019B  0087               	movwf	7
  4246     019C  3F47               	moviw [7]fsr1
  4247     019D  0020               	movlb	0	; select bank0
  4248     019E  00B0               	movwf	??___aodiv
  4249     019F  1FB0               	btfss	??___aodiv,7
  4250     01A0  29A2               	goto	u691
  4251     01A1  29A3               	goto	u690
  4252     01A2                     u691:
  4253     01A2  29C7               	goto	l1612
  4254     01A3                     u690:
  4255     01A3                     l1608:
  4256     01A3  0020               	movlb	0	; select bank0
  4257     01A4  09A8               	comf	___aodiv@dividend,f
  4258     01A5  09A9               	comf	___aodiv@dividend+1,f
  4259     01A6  09AA               	comf	___aodiv@dividend+2,f
  4260     01A7  09AB               	comf	___aodiv@dividend+3,f
  4261     01A8  09AC               	comf	___aodiv@dividend+4,f
  4262     01A9  09AD               	comf	___aodiv@dividend+5,f
  4263     01AA  09AE               	comf	___aodiv@dividend+6,f
  4264     01AB  09AF               	comf	___aodiv@dividend+7,f
  4265     01AC  0AA8               	incf	___aodiv@dividend,f
  4266     01AD  1D03               	skipz
  4267     01AE  29C2               	goto	u70lld
  4268     01AF  0AA9               	incf	___aodiv@dividend+1,f
  4269     01B0  1D03               	skipz
  4270     01B1  29C2               	goto	u70lld
  4271     01B2  0AAA               	incf	___aodiv@dividend+2,f
  4272     01B3  1D03               	skipz
  4273     01B4  29C2               	goto	u70lld
  4274     01B5  0AAB               	incf	___aodiv@dividend+3,f
  4275     01B6  1D03               	skipz
  4276     01B7  29C2               	goto	u70lld
  4277     01B8  0AAC               	incf	___aodiv@dividend+4,f
  4278     01B9  1D03               	skipz
  4279     01BA  29C2               	goto	u70lld
  4280     01BB  0AAD               	incf	___aodiv@dividend+5,f
  4281     01BC  1D03               	skipz
  4282     01BD  29C2               	goto	u70lld
  4283     01BE  0AAE               	incf	___aodiv@dividend+6,f
  4284     01BF  1D03               	skipz
  4285     01C0  29C2               	goto	u70lld
  4286     01C1  0AAF               	incf	___aodiv@dividend+7,f
  4287     01C2                     u70lld:
  4288     01C2                     l1610:
  4289     01C2  3001               	movlw	1
  4290     01C3  0020               	movlb	0	; select bank0
  4291     01C4  00B0               	movwf	??___aodiv
  4292     01C5  0830               	movf	??___aodiv,w
  4293     01C6  06B2               	xorwf	___aodiv@sign,f
  4294     01C7                     l1612:
  4295     01C7  3033               	movlw	low ___aodiv@quotient
  4296     01C8  0086               	movwf	6
  4297     01C9  3000               	movlw	high ___aodiv@quotient
  4298     01CA  0087               	movwf	7
  4299     01CB  3008               	movlw	8
  4300     01CC  0020               	movlb	0	; select bank0
  4301     01CD  00B0               	movwf	??___aodiv
  4302     01CE  3000               	movlw	0
  4303     01CF                     u710:
  4304     01CF  001E               	movwi fsr1++
  4305     01D0  0BB0               	decfsz	??___aodiv,f
  4306     01D1  29CF               	goto	u710
  4307     01D2                     l1614:
  4308     01D2  0820               	movf	___aodiv@divisor,w
  4309     01D3  0421               	iorwf	___aodiv@divisor+1,w
  4310     01D4  0422               	iorwf	___aodiv@divisor+2,w
  4311     01D5  0423               	iorwf	___aodiv@divisor+3,w
  4312     01D6  0424               	iorwf	___aodiv@divisor+4,w
  4313     01D7  0425               	iorwf	___aodiv@divisor+5,w
  4314     01D8  0426               	iorwf	___aodiv@divisor+6,w
  4315     01D9  0427               	iorwf	___aodiv@divisor+7,w
  4316     01DA  1903               	skipnz
  4317     01DB  29DD               	goto	u721
  4318     01DC  29DE               	goto	u720
  4319     01DD                     u721:
  4320     01DD  2A3A               	goto	l1634
  4321     01DE                     u720:
  4322     01DE                     l1616:
  4323     01DE  01B1               	clrf	___aodiv@counter
  4324     01DF  0AB1               	incf	___aodiv@counter,f
  4325     01E0  29ED               	goto	l1622
  4326     01E1                     l1618:
  4327     01E1  35A0               	lslf	___aodiv@divisor,f
  4328     01E2  0DA1               	rlf	___aodiv@divisor+1,f
  4329     01E3  0DA2               	rlf	___aodiv@divisor+2,f
  4330     01E4  0DA3               	rlf	___aodiv@divisor+3,f
  4331     01E5  0DA4               	rlf	___aodiv@divisor+4,f
  4332     01E6  0DA5               	rlf	___aodiv@divisor+5,f
  4333     01E7  0DA6               	rlf	___aodiv@divisor+6,f
  4334     01E8  0DA7               	rlf	___aodiv@divisor+7,f
  4335     01E9                     l1620:
  4336     01E9  3001               	movlw	1
  4337     01EA  00B0               	movwf	??___aodiv
  4338     01EB  0830               	movf	??___aodiv,w
  4339     01EC  07B1               	addwf	___aodiv@counter,f
  4340     01ED                     l1622:
  4341     01ED  1FA7               	btfss	___aodiv@divisor+7,7
  4342     01EE  29F0               	goto	u731
  4343     01EF  29F1               	goto	u730
  4344     01F0                     u731:
  4345     01F0  29E1               	goto	l1618
  4346     01F1                     u730:
  4347     01F1                     l1624:
  4348     01F1  35B3               	lslf	___aodiv@quotient,f
  4349     01F2  0DB4               	rlf	___aodiv@quotient+1,f
  4350     01F3  0DB5               	rlf	___aodiv@quotient+2,f
  4351     01F4  0DB6               	rlf	___aodiv@quotient+3,f
  4352     01F5  0DB7               	rlf	___aodiv@quotient+4,f
  4353     01F6  0DB8               	rlf	___aodiv@quotient+5,f
  4354     01F7  0DB9               	rlf	___aodiv@quotient+6,f
  4355     01F8  0DBA               	rlf	___aodiv@quotient+7,f
  4356     01F9                     l1626:
  4357     01F9  0827               	movf	___aodiv@divisor+7,w
  4358     01FA  022F               	subwf	___aodiv@dividend+7,w
  4359     01FB  1D03               	skipz
  4360     01FC  2A17               	goto	u745
  4361     01FD  0826               	movf	___aodiv@divisor+6,w
  4362     01FE  022E               	subwf	___aodiv@dividend+6,w
  4363     01FF  1D03               	skipz
  4364     0200  2A17               	goto	u745
  4365     0201  0825               	movf	___aodiv@divisor+5,w
  4366     0202  022D               	subwf	___aodiv@dividend+5,w
  4367     0203  1D03               	skipz
  4368     0204  2A17               	goto	u745
  4369     0205  0824               	movf	___aodiv@divisor+4,w
  4370     0206  022C               	subwf	___aodiv@dividend+4,w
  4371     0207  1D03               	skipz
  4372     0208  2A17               	goto	u745
  4373     0209  0823               	movf	___aodiv@divisor+3,w
  4374     020A  022B               	subwf	___aodiv@dividend+3,w
  4375     020B  1D03               	skipz
  4376     020C  2A17               	goto	u745
  4377     020D  0822               	movf	___aodiv@divisor+2,w
  4378     020E  022A               	subwf	___aodiv@dividend+2,w
  4379     020F  1D03               	skipz
  4380     0210  2A17               	goto	u745
  4381     0211  0821               	movf	___aodiv@divisor+1,w
  4382     0212  0229               	subwf	___aodiv@dividend+1,w
  4383     0213  1D03               	skipz
  4384     0214  2A17               	goto	u745
  4385     0215  0820               	movf	___aodiv@divisor,w
  4386     0216  0228               	subwf	___aodiv@dividend,w
  4387     0217                     u745:
  4388     0217  1C03               	skipc
  4389     0218  2A1A               	goto	u741
  4390     0219  2A1B               	goto	u740
  4391     021A                     u741:
  4392     021A  2A2C               	goto	l1632
  4393     021B                     u740:
  4394     021B                     l1628:
  4395     021B  0820               	movf	___aodiv@divisor,w
  4396     021C  02A8               	subwf	___aodiv@dividend,f
  4397     021D  0821               	movf	___aodiv@divisor+1,w
  4398     021E  3BA9               	subwfb	___aodiv@dividend+1,f
  4399     021F  0822               	movf	___aodiv@divisor+2,w
  4400     0220  3BAA               	subwfb	___aodiv@dividend+2,f
  4401     0221  0823               	movf	___aodiv@divisor+3,w
  4402     0222  3BAB               	subwfb	___aodiv@dividend+3,f
  4403     0223  0824               	movf	___aodiv@divisor+4,w
  4404     0224  3BAC               	subwfb	___aodiv@dividend+4,f
  4405     0225  0825               	movf	___aodiv@divisor+5,w
  4406     0226  3BAD               	subwfb	___aodiv@dividend+5,f
  4407     0227  0826               	movf	___aodiv@divisor+6,w
  4408     0228  3BAE               	subwfb	___aodiv@dividend+6,f
  4409     0229  0827               	movf	___aodiv@divisor+7,w
  4410     022A  3BAF               	subwfb	___aodiv@dividend+7,f
  4411     022B                     l1630:
  4412     022B  1433               	bsf	___aodiv@quotient,0
  4413     022C                     l1632:
  4414     022C  36A7               	lsrf	___aodiv@divisor+7,f
  4415     022D  0CA6               	rrf	___aodiv@divisor+6,f
  4416     022E  0CA5               	rrf	___aodiv@divisor+5,f
  4417     022F  0CA4               	rrf	___aodiv@divisor+4,f
  4418     0230  0CA3               	rrf	___aodiv@divisor+3,f
  4419     0231  0CA2               	rrf	___aodiv@divisor+2,f
  4420     0232  0CA1               	rrf	___aodiv@divisor+1,f
  4421     0233  0CA0               	rrf	___aodiv@divisor,f
  4422     0234  3001               	movlw	1
  4423     0235  02B1               	subwf	___aodiv@counter,f
  4424     0236  1D03               	btfss	3,2
  4425     0237  2A39               	goto	u751
  4426     0238  2A3A               	goto	u750
  4427     0239                     u751:
  4428     0239  29F1               	goto	l1624
  4429     023A                     u750:
  4430     023A                     l1634:
  4431     023A  0832               	movf	___aodiv@sign,w
  4432     023B  1903               	btfsc	3,2
  4433     023C  2A3E               	goto	u761
  4434     023D  2A3F               	goto	u760
  4435     023E                     u761:
  4436     023E  2A5D               	goto	l600
  4437     023F                     u760:
  4438     023F                     l1636:
  4439     023F  09B3               	comf	___aodiv@quotient,f
  4440     0240  09B4               	comf	___aodiv@quotient+1,f
  4441     0241  09B5               	comf	___aodiv@quotient+2,f
  4442     0242  09B6               	comf	___aodiv@quotient+3,f
  4443     0243  09B7               	comf	___aodiv@quotient+4,f
  4444     0244  09B8               	comf	___aodiv@quotient+5,f
  4445     0245  09B9               	comf	___aodiv@quotient+6,f
  4446     0246  09BA               	comf	___aodiv@quotient+7,f
  4447     0247  0AB3               	incf	___aodiv@quotient,f
  4448     0248  1D03               	skipz
  4449     0249  2A5D               	goto	u77lld
  4450     024A  0AB4               	incf	___aodiv@quotient+1,f
  4451     024B  1D03               	skipz
  4452     024C  2A5D               	goto	u77lld
  4453     024D  0AB5               	incf	___aodiv@quotient+2,f
  4454     024E  1D03               	skipz
  4455     024F  2A5D               	goto	u77lld
  4456     0250  0AB6               	incf	___aodiv@quotient+3,f
  4457     0251  1D03               	skipz
  4458     0252  2A5D               	goto	u77lld
  4459     0253  0AB7               	incf	___aodiv@quotient+4,f
  4460     0254  1D03               	skipz
  4461     0255  2A5D               	goto	u77lld
  4462     0256  0AB8               	incf	___aodiv@quotient+5,f
  4463     0257  1D03               	skipz
  4464     0258  2A5D               	goto	u77lld
  4465     0259  0AB9               	incf	___aodiv@quotient+6,f
  4466     025A  1D03               	skipz
  4467     025B  2A5D               	goto	u77lld
  4468     025C  0ABA               	incf	___aodiv@quotient+7,f
  4469     025D                     u77lld:
  4470     025D                     l600:
  4471     025D  0020               	movlb	0	; select bank0
  4472     025E  0833               	movf	___aodiv@quotient,w
  4473     025F  00A0               	movwf	?___aodiv
  4474     0260  0834               	movf	___aodiv@quotient+1,w
  4475     0261  00A1               	movwf	?___aodiv+1
  4476     0262  0835               	movf	___aodiv@quotient+2,w
  4477     0263  00A2               	movwf	?___aodiv+2
  4478     0264  0836               	movf	___aodiv@quotient+3,w
  4479     0265  00A3               	movwf	?___aodiv+3
  4480     0266  0837               	movf	___aodiv@quotient+4,w
  4481     0267  00A4               	movwf	?___aodiv+4
  4482     0268  0838               	movf	___aodiv@quotient+5,w
  4483     0269  00A5               	movwf	?___aodiv+5
  4484     026A  0839               	movf	___aodiv@quotient+6,w
  4485     026B  00A6               	movwf	?___aodiv+6
  4486     026C  083A               	movf	___aodiv@quotient+7,w
  4487     026D  00A7               	movwf	?___aodiv+7
  4488     026E                     l601:
  4489     026E  0008               	return
  4490     026F                     __end_of___aodiv:
  4491                           
  4492                           	psect	text13
  4493     0453                     __ptext13:	
  4494 ;; *************** function ___aldiv *****************
  4495 ;; Defined at:
  4496 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  divisor         4    0[BANK0 ] long 
  4499 ;;  dividend        4    4[BANK0 ] long 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  quotient        4   11[BANK0 ] long 
  4502 ;;  sign            1   10[BANK0 ] unsigned char 
  4503 ;;  counter         1    9[BANK0 ] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  4    0[BANK0 ] long 
  4506 ;; Registers used:
  4507 ;;		wreg, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4513 ;;      Params:         0       8       0       0       0       0
  4514 ;;      Locals:         0       6       0       0       0       0
  4515 ;;      Temps:          0       1       0       0       0       0
  4516 ;;      Totals:         0      15       0       0       0       0
  4517 ;;Total ram usage:       15 bytes
  4518 ;; Hardware stack levels used: 1
  4519 ;; Hardware stack levels required when called: 3
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527     0453                     ___aldiv:	
  4528                           ;psect for function ___aldiv
  4529                           
  4530     0453                     l2386:	
  4531                           ;incstack = 0
  4532                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4533                           
  4534     0453  0020               	movlb	0	; select bank0
  4535     0454  01AA               	clrf	___aldiv@sign
  4536     0455                     l2388:
  4537     0455  1FA3               	btfss	___aldiv@divisor+3,7
  4538     0456  2C58               	goto	u1601
  4539     0457  2C59               	goto	u1600
  4540     0458                     u1601:
  4541     0458  2C66               	goto	l565
  4542     0459                     u1600:
  4543     0459                     l2390:
  4544     0459  09A0               	comf	___aldiv@divisor,f
  4545     045A  09A1               	comf	___aldiv@divisor+1,f
  4546     045B  09A2               	comf	___aldiv@divisor+2,f
  4547     045C  09A3               	comf	___aldiv@divisor+3,f
  4548     045D  0AA0               	incf	___aldiv@divisor,f
  4549     045E  1903               	skipnz
  4550     045F  0AA1               	incf	___aldiv@divisor+1,f
  4551     0460  1903               	skipnz
  4552     0461  0AA2               	incf	___aldiv@divisor+2,f
  4553     0462  1903               	skipnz
  4554     0463  0AA3               	incf	___aldiv@divisor+3,f
  4555     0464  01AA               	clrf	___aldiv@sign
  4556     0465  0AAA               	incf	___aldiv@sign,f
  4557     0466                     l565:
  4558     0466  1FA7               	btfss	___aldiv@dividend+3,7
  4559     0467  2C69               	goto	u1611
  4560     0468  2C6A               	goto	u1610
  4561     0469                     u1611:
  4562     0469  2C79               	goto	l2396
  4563     046A                     u1610:
  4564     046A                     l2392:
  4565     046A  09A4               	comf	___aldiv@dividend,f
  4566     046B  09A5               	comf	___aldiv@dividend+1,f
  4567     046C  09A6               	comf	___aldiv@dividend+2,f
  4568     046D  09A7               	comf	___aldiv@dividend+3,f
  4569     046E  0AA4               	incf	___aldiv@dividend,f
  4570     046F  1903               	skipnz
  4571     0470  0AA5               	incf	___aldiv@dividend+1,f
  4572     0471  1903               	skipnz
  4573     0472  0AA6               	incf	___aldiv@dividend+2,f
  4574     0473  1903               	skipnz
  4575     0474  0AA7               	incf	___aldiv@dividend+3,f
  4576     0475                     l2394:
  4577     0475  3001               	movlw	1
  4578     0476  00A8               	movwf	??___aldiv
  4579     0477  0828               	movf	??___aldiv,w
  4580     0478  06AA               	xorwf	___aldiv@sign,f
  4581     0479                     l2396:
  4582     0479  3000               	movlw	0
  4583     047A  00AE               	movwf	___aldiv@quotient+3
  4584     047B  3000               	movlw	0
  4585     047C  00AD               	movwf	___aldiv@quotient+2
  4586     047D  3000               	movlw	0
  4587     047E  00AC               	movwf	___aldiv@quotient+1
  4588     047F  3000               	movlw	0
  4589     0480  00AB               	movwf	___aldiv@quotient
  4590     0481                     l2398:
  4591     0481  0823               	movf	___aldiv@divisor+3,w
  4592     0482  0422               	iorwf	___aldiv@divisor+2,w
  4593     0483  0421               	iorwf	___aldiv@divisor+1,w
  4594     0484  0420               	iorwf	___aldiv@divisor,w
  4595     0485  1903               	skipnz
  4596     0486  2C88               	goto	u1621
  4597     0487  2C89               	goto	u1620
  4598     0488                     u1621:
  4599     0488  2CCA               	goto	l2418
  4600     0489                     u1620:
  4601     0489                     l2400:
  4602     0489  01A9               	clrf	___aldiv@counter
  4603     048A  0AA9               	incf	___aldiv@counter,f
  4604     048B  2C97               	goto	l2404
  4605     048C                     l2402:
  4606     048C  3001               	movlw	1
  4607     048D                     u1635:
  4608     048D  35A0               	lslf	___aldiv@divisor,f
  4609     048E  0DA1               	rlf	___aldiv@divisor+1,f
  4610     048F  0DA2               	rlf	___aldiv@divisor+2,f
  4611     0490  0DA3               	rlf	___aldiv@divisor+3,f
  4612     0491  0B89               	decfsz	9,f
  4613     0492  2C8D               	goto	u1635
  4614     0493  3001               	movlw	1
  4615     0494  00A8               	movwf	??___aldiv
  4616     0495  0828               	movf	??___aldiv,w
  4617     0496  07A9               	addwf	___aldiv@counter,f
  4618     0497                     l2404:
  4619     0497  1FA3               	btfss	___aldiv@divisor+3,7
  4620     0498  2C9A               	goto	u1641
  4621     0499  2C9B               	goto	u1640
  4622     049A                     u1641:
  4623     049A  2C8C               	goto	l2402
  4624     049B                     u1640:
  4625     049B                     l2406:
  4626     049B  3001               	movlw	1
  4627     049C                     u1655:
  4628     049C  35AB               	lslf	___aldiv@quotient,f
  4629     049D  0DAC               	rlf	___aldiv@quotient+1,f
  4630     049E  0DAD               	rlf	___aldiv@quotient+2,f
  4631     049F  0DAE               	rlf	___aldiv@quotient+3,f
  4632     04A0  0B89               	decfsz	9,f
  4633     04A1  2C9C               	goto	u1655
  4634     04A2                     l2408:
  4635     04A2  0823               	movf	___aldiv@divisor+3,w
  4636     04A3  0227               	subwf	___aldiv@dividend+3,w
  4637     04A4  1D03               	skipz
  4638     04A5  2CB0               	goto	u1665
  4639     04A6  0822               	movf	___aldiv@divisor+2,w
  4640     04A7  0226               	subwf	___aldiv@dividend+2,w
  4641     04A8  1D03               	skipz
  4642     04A9  2CB0               	goto	u1665
  4643     04AA  0821               	movf	___aldiv@divisor+1,w
  4644     04AB  0225               	subwf	___aldiv@dividend+1,w
  4645     04AC  1D03               	skipz
  4646     04AD  2CB0               	goto	u1665
  4647     04AE  0820               	movf	___aldiv@divisor,w
  4648     04AF  0224               	subwf	___aldiv@dividend,w
  4649     04B0                     u1665:
  4650     04B0  1C03               	skipc
  4651     04B1  2CB3               	goto	u1661
  4652     04B2  2CB4               	goto	u1660
  4653     04B3                     u1661:
  4654     04B3  2CBD               	goto	l2414
  4655     04B4                     u1660:
  4656     04B4                     l2410:
  4657     04B4  0820               	movf	___aldiv@divisor,w
  4658     04B5  02A4               	subwf	___aldiv@dividend,f
  4659     04B6  0821               	movf	___aldiv@divisor+1,w
  4660     04B7  3BA5               	subwfb	___aldiv@dividend+1,f
  4661     04B8  0822               	movf	___aldiv@divisor+2,w
  4662     04B9  3BA6               	subwfb	___aldiv@dividend+2,f
  4663     04BA  0823               	movf	___aldiv@divisor+3,w
  4664     04BB  3BA7               	subwfb	___aldiv@dividend+3,f
  4665     04BC                     l2412:
  4666     04BC  142B               	bsf	___aldiv@quotient,0
  4667     04BD                     l2414:
  4668     04BD  3001               	movlw	1
  4669     04BE                     u1675:
  4670     04BE  36A3               	lsrf	___aldiv@divisor+3,f
  4671     04BF  0CA2               	rrf	___aldiv@divisor+2,f
  4672     04C0  0CA1               	rrf	___aldiv@divisor+1,f
  4673     04C1  0CA0               	rrf	___aldiv@divisor,f
  4674     04C2  0B89               	decfsz	9,f
  4675     04C3  2CBE               	goto	u1675
  4676     04C4                     l2416:
  4677     04C4  3001               	movlw	1
  4678     04C5  02A9               	subwf	___aldiv@counter,f
  4679     04C6  1D03               	btfss	3,2
  4680     04C7  2CC9               	goto	u1681
  4681     04C8  2CCA               	goto	u1680
  4682     04C9                     u1681:
  4683     04C9  2C9B               	goto	l2406
  4684     04CA                     u1680:
  4685     04CA                     l2418:
  4686     04CA  082A               	movf	___aldiv@sign,w
  4687     04CB  1903               	btfsc	3,2
  4688     04CC  2CCE               	goto	u1691
  4689     04CD  2CCF               	goto	u1690
  4690     04CE                     u1691:
  4691     04CE  2CDA               	goto	l2422
  4692     04CF                     u1690:
  4693     04CF                     l2420:
  4694     04CF  09AB               	comf	___aldiv@quotient,f
  4695     04D0  09AC               	comf	___aldiv@quotient+1,f
  4696     04D1  09AD               	comf	___aldiv@quotient+2,f
  4697     04D2  09AE               	comf	___aldiv@quotient+3,f
  4698     04D3  0AAB               	incf	___aldiv@quotient,f
  4699     04D4  1903               	skipnz
  4700     04D5  0AAC               	incf	___aldiv@quotient+1,f
  4701     04D6  1903               	skipnz
  4702     04D7  0AAD               	incf	___aldiv@quotient+2,f
  4703     04D8  1903               	skipnz
  4704     04D9  0AAE               	incf	___aldiv@quotient+3,f
  4705     04DA                     l2422:
  4706     04DA  082E               	movf	___aldiv@quotient+3,w
  4707     04DB  00A3               	movwf	?___aldiv+3
  4708     04DC  082D               	movf	___aldiv@quotient+2,w
  4709     04DD  00A2               	movwf	?___aldiv+2
  4710     04DE  082C               	movf	___aldiv@quotient+1,w
  4711     04DF  00A1               	movwf	?___aldiv+1
  4712     04E0  082B               	movf	___aldiv@quotient,w
  4713     04E1  00A0               	movwf	?___aldiv
  4714     04E2                     l575:
  4715     04E2  0008               	return
  4716     04E3                     __end_of___aldiv:
  4717                           
  4718                           	psect	text14
  4719     06B6                     __ptext14:	
  4720 ;; *************** function _SYSTEM_Initialize *****************
  4721 ;; Defined at:
  4722 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4736 ;;      Params:         0       0       0       0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0
  4739 ;;      Totals:         0       0       0       0       0       0
  4740 ;;Total ram usage:        0 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 5
  4743 ;; This function calls:
  4744 ;;		_CCP3_Initialize
  4745 ;;		_EUSART_Initialize
  4746 ;;		_OSCILLATOR_Initialize
  4747 ;;		_PIN_MANAGER_Initialize
  4748 ;;		_TMR0_Initialize
  4749 ;;		_TMR1_Initialize
  4750 ;;		_WDT_Initialize
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756     06B6                     _SYSTEM_Initialize:	
  4757                           ;psect for function _SYSTEM_Initialize
  4758                           
  4759     06B6                     l2268:	
  4760                           ;incstack = 0
  4761                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4762                           
  4763                           
  4764                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4765     06B6  3186  269F  3186   	fcall	_PIN_MANAGER_Initialize
  4766                           
  4767                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4768     06B9  3187  2777  3186   	fcall	_OSCILLATOR_Initialize
  4769                           
  4770                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4771     06BC  3187  278E  3186   	fcall	_WDT_Initialize
  4772                           
  4773                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  4774     06BF  3187  2704  3186   	fcall	_CCP3_Initialize
  4775                           
  4776                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  4777     06C2  3186  26F2  3186   	fcall	_TMR1_Initialize
  4778                           
  4779                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  4780     06C5  3186  26CC  3186   	fcall	_TMR0_Initialize
  4781                           
  4782                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  4783     06C8  3186  2629  3186   	fcall	_EUSART_Initialize
  4784     06CB                     l121:
  4785     06CB  0008               	return
  4786     06CC                     __end_of_SYSTEM_Initialize:
  4787                           
  4788                           	psect	text15
  4789     078E                     __ptext15:	
  4790 ;; *************** function _WDT_Initialize *****************
  4791 ;; Defined at:
  4792 ;;		line 72 in file "mcc_generated_files/mcc.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4806 ;;      Params:         0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 3
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_SYSTEM_Initialize
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820     078E                     _WDT_Initialize:	
  4821                           ;psect for function _WDT_Initialize
  4822                           
  4823     078E                     l2220:	
  4824                           ;incstack = 0
  4825                           ; Regs used in _WDT_Initialize: [wreg]
  4826                           
  4827                           
  4828                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  4829     078E  3016               	movlw	22
  4830     078F  0021               	movlb	1	; select bank1
  4831     0790  0097               	movwf	23	;volatile
  4832     0791                     l127:
  4833     0791  0008               	return
  4834     0792                     __end_of_WDT_Initialize:
  4835                           
  4836                           	psect	text16
  4837     06F2                     __ptext16:	
  4838 ;; *************** function _TMR1_Initialize *****************
  4839 ;; Defined at:
  4840 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4854 ;;      Params:         0       0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0
  4857 ;;      Totals:         0       0       0       0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 3
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_SYSTEM_Initialize
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868     06F2                     _TMR1_Initialize:	
  4869                           ;psect for function _TMR1_Initialize
  4870                           
  4871     06F2                     l2234:	
  4872                           ;incstack = 0
  4873                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  4874                           
  4875                           
  4876                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  4877     06F2  0020               	movlb	0	; select bank0
  4878     06F3  0199               	clrf	25	;volatile
  4879     06F4                     l2236:
  4880                           
  4881                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0xE1;
  4882     06F4  30E1               	movlw	225
  4883     06F5  0097               	movwf	23	;volatile
  4884     06F6                     l2238:
  4885                           
  4886                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x7B;
  4887     06F6  307B               	movlw	123
  4888     06F7  0096               	movwf	22	;volatile
  4889     06F8                     l2240:
  4890                           
  4891                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  4892     06F8  1011               	bcf	17,0	;volatile
  4893     06F9                     l2242:
  4894                           
  4895                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4896     06F9  0817               	movf	23,w	;volatile
  4897     06FA  0021               	movlb	1	; select bank1
  4898     06FB  00D6               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  4899     06FC  0020               	movlb	0	; select bank0
  4900     06FD  0816               	movf	22,w	;volatile
  4901     06FE  0021               	movlb	1	; select bank1
  4902     06FF  00D5               	movwf	_timer1ReloadVal^(0+128)	;volatile
  4903     0700                     l2244:
  4904                           
  4905                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  4906     0700  3031               	movlw	49
  4907     0701  0020               	movlb	0	; select bank0
  4908     0702  0098               	movwf	24	;volatile
  4909     0703                     l240:
  4910     0703  0008               	return
  4911     0704                     __end_of_TMR1_Initialize:
  4912                           
  4913                           	psect	text17
  4914     06CC                     __ptext17:	
  4915 ;; *************** function _TMR0_Initialize *****************
  4916 ;; Defined at:
  4917 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0, pclath, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4931 ;;      Params:         0       0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0
  4934 ;;      Totals:         0       0       0       0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 4
  4938 ;; This function calls:
  4939 ;;		_TMR0_SetInterruptHandler
  4940 ;; This function is called by:
  4941 ;;		_SYSTEM_Initialize
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945     06CC                     _TMR0_Initialize:	
  4946                           ;psect for function _TMR0_Initialize
  4947                           
  4948     06CC                     l2202:	
  4949                           ;incstack = 0
  4950                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4951                           
  4952                           
  4953                           ;mcc_generated_files/tmr0.c: 73:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4954     06CC  0021               	movlb	1	; select bank1
  4955     06CD  0815               	movf	21,w	;volatile
  4956     06CE  39C0               	andlw	192
  4957     06CF  3817               	iorlw	23
  4958     06D0  0095               	movwf	21	;volatile
  4959     06D1                     l2204:
  4960                           
  4961                           ;mcc_generated_files/tmr0.c: 76:     TMR0 = 0x0C;
  4962     06D1  300C               	movlw	12
  4963     06D2  0020               	movlb	0	; select bank0
  4964     06D3  0095               	movwf	21	;volatile
  4965     06D4                     l2206:
  4966                           
  4967                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal= 12;
  4968     06D4  300C               	movlw	12
  4969     06D5  00FD               	movwf	_timer0ReloadVal	;volatile
  4970     06D6                     l2208:
  4971                           
  4972                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  4973     06D6  110B               	bcf	11,2	;volatile
  4974     06D7                     l2210:
  4975                           
  4976                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  4977     06D7  168B               	bsf	11,5	;volatile
  4978     06D8                     l2212:
  4979                           
  4980                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4981     06D8  3085               	movlw	low _TMR0_DefaultInterruptHandler
  4982     06D9  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4983     06DA  3006               	movlw	high _TMR0_DefaultInterruptHandler
  4984     06DB  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4985     06DC  3187  2743  3186   	fcall	_TMR0_SetInterruptHandler
  4986     06DF                     l74:
  4987     06DF  0008               	return
  4988     06E0                     __end_of_TMR0_Initialize:
  4989                           
  4990                           	psect	text18
  4991     0743                     __ptext18:	
  4992 ;; *************** function _TMR0_SetInterruptHandler *****************
  4993 ;; Defined at:
  4994 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4997 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5009 ;;      Params:         0       2       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0
  5012 ;;      Totals:         0       2       0       0       0       0
  5013 ;;Total ram usage:        2 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 3
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_TMR0_Initialize
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023     0743                     _TMR0_SetInterruptHandler:	
  5024                           ;psect for function _TMR0_SetInterruptHandler
  5025                           
  5026     0743                     l2120:	
  5027                           ;incstack = 0
  5028                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5029                           
  5030                           
  5031                           ;mcc_generated_files/tmr0.c: 130:     TMR0_InterruptHandler = InterruptHandler;
  5032     0743  0020               	movlb	0	; select bank0
  5033     0744  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5034     0745  0021               	movlb	1	; select bank1
  5035     0746  00DE               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5036     0747  0020               	movlb	0	; select bank0
  5037     0748  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5038     0749  0021               	movlb	1	; select bank1
  5039     074A  00DD               	movwf	_TMR0_InterruptHandler^(0+128)
  5040     074B                     l90:
  5041     074B  0008               	return
  5042     074C                     __end_of_TMR0_SetInterruptHandler:
  5043                           
  5044                           	psect	text19
  5045     069F                     __ptext19:	
  5046 ;; *************** function _PIN_MANAGER_Initialize *****************
  5047 ;; Defined at:
  5048 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5062 ;;      Params:         0       0       0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0       0
  5065 ;;      Totals:         0       0       0       0       0       0
  5066 ;;Total ram usage:        0 bytes
  5067 ;; Hardware stack levels used: 1
  5068 ;; Hardware stack levels required when called: 3
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_SYSTEM_Initialize
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076     069F                     _PIN_MANAGER_Initialize:	
  5077                           ;psect for function _PIN_MANAGER_Initialize
  5078                           
  5079     069F                     l2188:	
  5080                           ;incstack = 0
  5081                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5082                           
  5083                           
  5084                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5085     069F  0022               	movlb	2	; select bank2
  5086     06A0  018C               	clrf	12	;volatile
  5087                           
  5088                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5089     06A1  018D               	clrf	13	;volatile
  5090     06A2                     l2190:
  5091                           
  5092                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  5093     06A2  30FF               	movlw	255
  5094     06A3  0021               	movlb	1	; select bank1
  5095     06A4  008C               	movwf	12	;volatile
  5096     06A5                     l2192:
  5097                           
  5098                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xCF;
  5099     06A5  30CF               	movlw	207
  5100     06A6  008D               	movwf	13	;volatile
  5101     06A7                     l2194:
  5102                           
  5103                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF4;
  5104     06A7  30F4               	movlw	244
  5105     06A8  0023               	movlb	3	; select bank3
  5106     06A9  008D               	movwf	13	;volatile
  5107     06AA                     l2196:
  5108                           
  5109                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  5110     06AA  301F               	movlw	31
  5111     06AB  008C               	movwf	12	;volatile
  5112                           
  5113                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  5114     06AC  0024               	movlb	4	; select bank4
  5115     06AD  018D               	clrf	13	;volatile
  5116                           
  5117                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  5118     06AE  018C               	clrf	12	;volatile
  5119     06AF                     l2198:
  5120                           
  5121                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  5122     06AF  0021               	movlb	1	; select bank1
  5123     06B0  1795               	bsf	21,7	;volatile
  5124                           
  5125                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  5126     06B1  0022               	movlb	2	; select bank2
  5127     06B2  019D               	clrf	29	;volatile
  5128     06B3                     l2200:
  5129                           
  5130                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  5131     06B3  3001               	movlw	1
  5132     06B4  009E               	movwf	30	;volatile
  5133     06B5                     l48:
  5134     06B5  0008               	return
  5135     06B6                     __end_of_PIN_MANAGER_Initialize:
  5136                           
  5137                           	psect	text20
  5138     0777                     __ptext20:	
  5139 ;; *************** function _OSCILLATOR_Initialize *****************
  5140 ;; Defined at:
  5141 ;;		line 62 in file "mcc_generated_files/mcc.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5155 ;;      Params:         0       0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0       0
  5158 ;;      Totals:         0       0       0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; Hardware stack levels required when called: 3
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_SYSTEM_Initialize
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169     0777                     _OSCILLATOR_Initialize:	
  5170                           ;psect for function _OSCILLATOR_Initialize
  5171                           
  5172     0777                     l2214:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5175                           
  5176                           
  5177                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x58;
  5178     0777  3058               	movlw	88
  5179     0778  0021               	movlb	1	; select bank1
  5180     0779  0099               	movwf	25	;volatile
  5181     077A                     l2216:
  5182                           
  5183                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  5184     077A  0198               	clrf	24	;volatile
  5185     077B                     l2218:
  5186                           
  5187                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  5188     077B  0022               	movlb	2	; select bank2
  5189     077C  0196               	clrf	22	;volatile
  5190     077D                     l124:
  5191     077D  0008               	return
  5192     077E                     __end_of_OSCILLATOR_Initialize:
  5193                           
  5194                           	psect	text21
  5195     0629                     __ptext21:	
  5196 ;; *************** function _EUSART_Initialize *****************
  5197 ;; Defined at:
  5198 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5212 ;;      Params:         0       0       0       0       0       0
  5213 ;;      Locals:         0       0       0       0       0       0
  5214 ;;      Temps:          0       0       0       0       0       0
  5215 ;;      Totals:         0       0       0       0       0       0
  5216 ;;Total ram usage:        0 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 4
  5219 ;; This function calls:
  5220 ;;		_EUSART_SetErrorHandler
  5221 ;;		_EUSART_SetFramingErrorHandler
  5222 ;;		_EUSART_SetOverrunErrorHandler
  5223 ;; This function is called by:
  5224 ;;		_SYSTEM_Initialize
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228     0629                     _EUSART_Initialize:	
  5229                           ;psect for function _EUSART_Initialize
  5230                           
  5231     0629                     l2246:	
  5232                           ;incstack = 0
  5233                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5234                           
  5235                           
  5236                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  5237     0629  3008               	movlw	8
  5238     062A  0023               	movlb	3	; select bank3
  5239     062B  009F               	movwf	31	;volatile
  5240                           
  5241                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  5242     062C  3090               	movlw	144
  5243     062D  009D               	movwf	29	;volatile
  5244                           
  5245                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x04;
  5246     062E  3004               	movlw	4
  5247     062F  009E               	movwf	30	;volatile
  5248                           
  5249                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x19;
  5250     0630  3019               	movlw	25
  5251     0631  009B               	movwf	27	;volatile
  5252     0632                     l2248:
  5253                           
  5254                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5255     0632  019C               	clrf	28	;volatile
  5256     0633                     l2250:
  5257                           
  5258                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5259     0633  3000               	movlw	0
  5260     0634  0020               	movlb	0	; select bank0
  5261     0635  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5262     0636  3000               	movlw	0
  5263     0637  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5264     0638  3187  2755  3186   	fcall	_EUSART_SetFramingErrorHandler
  5265     063B                     l2252:
  5266                           
  5267                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5268     063B  3000               	movlw	0
  5269     063C  0020               	movlb	0	; select bank0
  5270     063D  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5271     063E  3000               	movlw	0
  5272     063F  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5273     0640  3187  274C  3186   	fcall	_EUSART_SetOverrunErrorHandler
  5274     0643                     l2254:
  5275                           
  5276                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5277     0643  3000               	movlw	0
  5278     0644  0020               	movlb	0	; select bank0
  5279     0645  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5280     0646  3000               	movlw	0
  5281     0647  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5282     0648  3187  275E  3186   	fcall	_EUSART_SetErrorHandler
  5283     064B                     l2256:
  5284                           
  5285                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5286     064B  01FC               	clrf	_eusartRxLastError	;volatile
  5287     064C                     l170:
  5288     064C  0008               	return
  5289     064D                     __end_of_EUSART_Initialize:
  5290                           
  5291                           	psect	text22
  5292     074C                     __ptext22:	
  5293 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5294 ;; Defined at:
  5295 ;;		line 170 in file "mcc_generated_files/eusart.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5298 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5310 ;;      Params:         0       2       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0
  5313 ;;      Totals:         0       2       0       0       0       0
  5314 ;;Total ram usage:        2 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 3
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_EUSART_Initialize
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324     074C                     _EUSART_SetOverrunErrorHandler:	
  5325                           ;psect for function _EUSART_SetOverrunErrorHandler
  5326                           
  5327     074C                     l2124:	
  5328                           ;incstack = 0
  5329                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5330                           
  5331                           
  5332                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  5333     074C  0020               	movlb	0	; select bank0
  5334     074D  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5335     074E  0021               	movlb	1	; select bank1
  5336     074F  00DA               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5337     0750  0020               	movlb	0	; select bank0
  5338     0751  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5339     0752  0021               	movlb	1	; select bank1
  5340     0753  00D9               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5341     0754                     l218:
  5342     0754  0008               	return
  5343     0755                     __end_of_EUSART_SetOverrunErrorHandler:
  5344                           
  5345                           	psect	text23
  5346     0755                     __ptext23:	
  5347 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5348 ;; Defined at:
  5349 ;;		line 166 in file "mcc_generated_files/eusart.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5352 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5364 ;;      Params:         0       2       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0
  5367 ;;      Totals:         0       2       0       0       0       0
  5368 ;;Total ram usage:        2 bytes
  5369 ;; Hardware stack levels used: 1
  5370 ;; Hardware stack levels required when called: 3
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_EUSART_Initialize
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378     0755                     _EUSART_SetFramingErrorHandler:	
  5379                           ;psect for function _EUSART_SetFramingErrorHandler
  5380                           
  5381     0755                     l2122:	
  5382                           ;incstack = 0
  5383                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5384                           
  5385                           
  5386                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  5387     0755  0020               	movlb	0	; select bank0
  5388     0756  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5389     0757  0021               	movlb	1	; select bank1
  5390     0758  00DC               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5391     0759  0020               	movlb	0	; select bank0
  5392     075A  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5393     075B  0021               	movlb	1	; select bank1
  5394     075C  00DB               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5395     075D                     l215:
  5396     075D  0008               	return
  5397     075E                     __end_of_EUSART_SetFramingErrorHandler:
  5398                           
  5399                           	psect	text24
  5400     075E                     __ptext24:	
  5401 ;; *************** function _EUSART_SetErrorHandler *****************
  5402 ;; Defined at:
  5403 ;;		line 174 in file "mcc_generated_files/eusart.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  5406 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5418 ;;      Params:         0       2       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0
  5421 ;;      Totals:         0       2       0       0       0       0
  5422 ;;Total ram usage:        2 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 3
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_EUSART_Initialize
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432     075E                     _EUSART_SetErrorHandler:	
  5433                           ;psect for function _EUSART_SetErrorHandler
  5434                           
  5435     075E                     l2126:	
  5436                           ;incstack = 0
  5437                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5438                           
  5439                           
  5440                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  5441     075E  0020               	movlb	0	; select bank0
  5442     075F  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5443     0760  0021               	movlb	1	; select bank1
  5444     0761  00D8               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5445     0762  0020               	movlb	0	; select bank0
  5446     0763  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5447     0764  0021               	movlb	1	; select bank1
  5448     0765  00D7               	movwf	_EUSART_ErrorHandler^(0+128)
  5449     0766                     l221:
  5450     0766  0008               	return
  5451     0767                     __end_of_EUSART_SetErrorHandler:
  5452                           
  5453                           	psect	text25
  5454     0704                     __ptext25:	
  5455 ;; *************** function _CCP3_Initialize *****************
  5456 ;; Defined at:
  5457 ;;		line 104 in file "mcc_generated_files/ccp3.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, pclath, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5471 ;;      Params:         0       0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0
  5474 ;;      Totals:         0       0       0       0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 4
  5478 ;; This function calls:
  5479 ;;		_CCP3_SetCallBack
  5480 ;; This function is called by:
  5481 ;;		_SYSTEM_Initialize
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485     0704                     _CCP3_Initialize:	
  5486                           ;psect for function _CCP3_Initialize
  5487                           
  5488     0704                     l2222:	
  5489                           ;incstack = 0
  5490                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5491                           
  5492                           
  5493                           ;mcc_generated_files/ccp3.c: 109:  CCP3CON = 0x04;
  5494     0704  3004               	movlw	4
  5495     0705  0026               	movlb	6	; select bank6
  5496     0706  0093               	movwf	19	;volatile
  5497     0707                     l2224:
  5498                           
  5499                           ;mcc_generated_files/ccp3.c: 112:  CCPR3L = 0x00;
  5500     0707  0191               	clrf	17	;volatile
  5501     0708                     l2226:
  5502                           
  5503                           ;mcc_generated_files/ccp3.c: 115:  CCPR3H = 0x00;
  5504     0708  0192               	clrf	18	;volatile
  5505     0709                     l2228:
  5506                           
  5507                           ;mcc_generated_files/ccp3.c: 118:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  5508     0709  30D9               	movlw	low _CCP3_DefaultCallBack
  5509     070A  0020               	movlb	0	; select bank0
  5510     070B  00A0               	movwf	CCP3_SetCallBack@customCallBack
  5511     070C  3005               	movlw	high _CCP3_DefaultCallBack
  5512     070D  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  5513     070E  3187  2767  3187   	fcall	_CCP3_SetCallBack
  5514     0711                     l2230:
  5515                           
  5516                           ;mcc_generated_files/ccp3.c: 122:     PIR3bits.CCP3IF = 0;
  5517     0711  0020               	movlb	0	; select bank0
  5518     0712  1213               	bcf	19,4	;volatile
  5519     0713                     l2232:
  5520                           
  5521                           ;mcc_generated_files/ccp3.c: 125:     PIE3bits.CCP3IE = 1;
  5522     0713  0021               	movlb	1	; select bank1
  5523     0714  1613               	bsf	19,4	;volatile
  5524     0715                     l307:
  5525     0715  0008               	return
  5526     0716                     __end_of_CCP3_Initialize:
  5527                           
  5528                           	psect	text26
  5529     0767                     __ptext26:	
  5530 ;; *************** function _CCP3_SetCallBack *****************
  5531 ;; Defined at:
  5532 ;;		line 143 in file "mcc_generated_files/ccp3.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  5535 ;;		 -> CCP3_DefaultCallBack(1), 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5547 ;;      Params:         0       2       0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0
  5550 ;;      Totals:         0       2       0       0       0       0
  5551 ;;Total ram usage:        2 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 3
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_CCP3_Initialize
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561     0767                     _CCP3_SetCallBack:	
  5562                           ;psect for function _CCP3_SetCallBack
  5563                           
  5564     0767                     l2128:	
  5565                           ;incstack = 0
  5566                           ; Regs used in _CCP3_SetCallBack: [wreg]
  5567                           
  5568                           
  5569                           ;mcc_generated_files/ccp3.c: 144:     CCP3_CallBack = customCallBack;
  5570     0767  0020               	movlb	0	; select bank0
  5571     0768  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
  5572     0769  0021               	movlb	1	; select bank1
  5573     076A  00D4               	movwf	(_CCP3_CallBack+1)^(0+128)
  5574     076B  0020               	movlb	0	; select bank0
  5575     076C  0820               	movf	CCP3_SetCallBack@customCallBack,w
  5576     076D  0021               	movlb	1	; select bank1
  5577     076E  00D3               	movwf	_CCP3_CallBack^(0+128)
  5578     076F                     l313:
  5579     076F  0008               	return
  5580     0770                     __end_of_CCP3_SetCallBack:
  5581                           
  5582                           	psect	intentry
  5583     0004                     __pintentry:	
  5584 ;; *************** function _INTERRUPT_InterruptManager *****************
  5585 ;; Defined at:
  5586 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0, pclath, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5600 ;;      Params:         0       0       0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 2
  5607 ;; This function calls:
  5608 ;;		_CCP3_CaptureISR
  5609 ;;		_TMR0_ISR
  5610 ;; This function is called by:
  5611 ;;		Interrupt level 1
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615     0004                     _INTERRUPT_InterruptManager:
  5616                           
  5617                           ;incstack = 0
  5618     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5619                           
  5620                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5621     0005  3180               	pagesel	$
  5622     0006                     i1l1944:
  5623                           
  5624                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5625     0006  1E8B               	btfss	11,5	;volatile
  5626     0007  2809               	goto	u110_21
  5627     0008  280A               	goto	u110_20
  5628     0009                     u110_21:
  5629     0009  2812               	goto	i1l17
  5630     000A                     u110_20:
  5631     000A                     i1l1946:
  5632     000A  1D0B               	btfss	11,2	;volatile
  5633     000B  280D               	goto	u111_21
  5634     000C  280E               	goto	u111_20
  5635     000D                     u111_21:
  5636     000D  2812               	goto	i1l17
  5637     000E                     u111_20:
  5638     000E                     i1l1948:
  5639                           
  5640                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5641     000E  3187  2728  3180   	fcall	_TMR0_ISR
  5642                           
  5643                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5644     0011  2824               	goto	i1l23
  5645     0012                     i1l17:	
  5646                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5647                           
  5648     0012  1F0B               	btfss	11,6	;volatile
  5649     0013  2815               	goto	u112_21
  5650     0014  2816               	goto	u112_20
  5651     0015                     u112_21:
  5652     0015  2824               	goto	i1l23
  5653     0016                     u112_20:
  5654     0016                     i1l1950:
  5655                           
  5656                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.CCP3IE == 1 && PIR3bits.CCP3IF == 1)
  5657     0016  0021               	movlb	1	; select bank1
  5658     0017  1E13               	btfss	19,4	;volatile
  5659     0018  281A               	goto	u113_21
  5660     0019  281B               	goto	u113_20
  5661     001A                     u113_21:
  5662     001A  2824               	goto	i1l22
  5663     001B                     u113_20:
  5664     001B                     i1l1952:
  5665     001B  0020               	movlb	0	; select bank0
  5666     001C  1E13               	btfss	19,4	;volatile
  5667     001D  281F               	goto	u114_21
  5668     001E  2820               	goto	u114_20
  5669     001F                     u114_21:
  5670     001F  2824               	goto	i1l22
  5671     0020                     u114_20:
  5672     0020                     i1l1954:
  5673                           
  5674                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             CCP3_CaptureISR();
  5675     0020  3187  2716  3180   	fcall	_CCP3_CaptureISR
  5676                           
  5677                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5678     0023  2824               	goto	i1l23
  5679     0024                     i1l22:	
  5680                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  5681                           
  5682     0024                     i1l23:
  5683     0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5684     0025  0009               	retfie
  5685     0026                     __end_of_INTERRUPT_InterruptManager:
  5686                           
  5687                           	psect	text28
  5688     0728                     __ptext28:	
  5689 ;; *************** function _TMR0_ISR *****************
  5690 ;; Defined at:
  5691 ;;		line 112 in file "mcc_generated_files/tmr0.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;		None
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      void 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0, pclath, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5705 ;;      Params:         0       0       0       0       0       0
  5706 ;;      Locals:         0       0       0       0       0       0
  5707 ;;      Temps:          0       0       0       0       0       0
  5708 ;;      Totals:         0       0       0       0       0       0
  5709 ;;Total ram usage:        0 bytes
  5710 ;; Hardware stack levels used: 1
  5711 ;; Hardware stack levels required when called: 1
  5712 ;; This function calls:
  5713 ;;		Absolute function
  5714 ;;		_TMR0_DefaultInterruptHandler
  5715 ;; This function is called by:
  5716 ;;		_INTERRUPT_InterruptManager
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720     0728                     _TMR0_ISR:	
  5721                           ;psect for function _TMR0_ISR
  5722                           
  5723     0728                     i1l1908:	
  5724                           ;incstack = 0
  5725                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5726                           
  5727                           
  5728                           ;mcc_generated_files/tmr0.c: 116:     INTCONbits.TMR0IF = 0;
  5729     0728  110B               	bcf	11,2	;volatile
  5730     0729                     i1l1910:
  5731                           
  5732                           ;mcc_generated_files/tmr0.c: 118:     TMR0 = timer0ReloadVal;
  5733     0729  087D               	movf	_timer0ReloadVal,w	;volatile
  5734     072A  0020               	movlb	0	; select bank0
  5735     072B  0095               	movwf	21	;volatile
  5736     072C                     i1l1912:
  5737                           
  5738                           ;mcc_generated_files/tmr0.c: 120:     if(TMR0_InterruptHandler)
  5739     072C  0021               	movlb	1	; select bank1
  5740     072D  085D               	movf	_TMR0_InterruptHandler^(0+128),w
  5741     072E  045E               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  5742     072F  1903               	btfsc	3,2
  5743     0730  2F32               	goto	u108_21
  5744     0731  2F33               	goto	u108_20
  5745     0732                     u108_21:
  5746     0732  2F38               	goto	i1l87
  5747     0733                     u108_20:
  5748     0733                     i1l1914:
  5749                           
  5750                           ;mcc_generated_files/tmr0.c: 121:     {;mcc_generated_files/tmr0.c: 122:         TMR0_In
      +                          terruptHandler();
  5751     0733  085E               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  5752     0734  008A               	movwf	10
  5753     0735  085D               	movf	_TMR0_InterruptHandler^(0+128),w
  5754     0736  000A               	callw
  5755     0737  3187               	pagesel	$
  5756     0738                     i1l87:
  5757     0738  0008               	return
  5758     0739                     __end_of_TMR0_ISR:
  5759                           
  5760                           	psect	text29
  5761     0685                     __ptext29:	
  5762 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5763 ;; Defined at:
  5764 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5778 ;;      Params:         0       0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0       0
  5780 ;;      Temps:          1       0       0       0       0       0
  5781 ;;      Totals:         1       0       0       0       0       0
  5782 ;;Total ram usage:        1 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_TMR0_Initialize
  5788 ;;		_TMR0_ISR
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792     0685                     _TMR0_DefaultInterruptHandler:	
  5793                           ;psect for function _TMR0_DefaultInterruptHandler
  5794                           
  5795     0685                     i1l1830:	
  5796                           ;incstack = 0
  5797                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2]
  5798                           
  5799                           
  5800                           ;mcc_generated_files/tmr0.c: 137:     flag_startTX=1;
  5801     0685  0021               	movlb	1	; select bank1
  5802     0686  01B0               	clrf	_flag_startTX^(0+128)
  5803     0687  0AB0               	incf	_flag_startTX^(0+128),f
  5804     0688                     i1l1832:
  5805                           
  5806                           ;mcc_generated_files/tmr0.c: 139:     interrupt_count++;
  5807     0688  3001               	movlw	1
  5808     0689  07F9               	addwf	_interrupt_count,f
  5809     068A  3000               	movlw	0
  5810     068B  3DFA               	addwfc	_interrupt_count+1,f
  5811                           
  5812                           ;mcc_generated_files/tmr0.c: 140:     if(interrupt_count >=4){
  5813     068C  087A               	movf	_interrupt_count+1,w
  5814     068D  3A80               	xorlw	128
  5815     068E  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  5816     068F  3080               	movlw	128
  5817     0690  0270               	subwf	??_TMR0_DefaultInterruptHandler,w
  5818     0691  1D03               	skipz
  5819     0692  2E95               	goto	u105_25
  5820     0693  3004               	movlw	4
  5821     0694  0279               	subwf	_interrupt_count,w
  5822     0695                     u105_25:
  5823     0695  1C03               	skipc
  5824     0696  2E98               	goto	u105_21
  5825     0697  2E99               	goto	u105_20
  5826     0698                     u105_21:
  5827     0698  2E9E               	goto	i1l94
  5828     0699                     u105_20:
  5829     0699                     i1l1834:
  5830                           
  5831                           ;mcc_generated_files/tmr0.c: 141:         flag_blink=1;
  5832     0699  0021               	movlb	1	; select bank1
  5833     069A  01AF               	clrf	_flag_blink^(0+128)
  5834     069B  0AAF               	incf	_flag_blink^(0+128),f
  5835     069C                     i1l1836:
  5836                           
  5837                           ;mcc_generated_files/tmr0.c: 143:         interrupt_count=0;
  5838     069C  01F9               	clrf	_interrupt_count
  5839     069D  01FA               	clrf	_interrupt_count+1
  5840     069E                     i1l94:
  5841     069E  0008               	return
  5842     069F                     __end_of_TMR0_DefaultInterruptHandler:
  5843                           
  5844                           	psect	text30
  5845     0716                     __ptext30:	
  5846 ;; *************** function _CCP3_CaptureISR *****************
  5847 ;; Defined at:
  5848 ;;		line 128 in file "mcc_generated_files/ccp3.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  module          2    5[COMMON] struct CCPR3Reg_tag
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, pclath, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5862 ;;      Params:         0       0       0       0       0       0
  5863 ;;      Locals:         2       0       0       0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0
  5865 ;;      Totals:         2       0       0       0       0       0
  5866 ;;Total ram usage:        2 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 1
  5869 ;; This function calls:
  5870 ;;		Absolute function
  5871 ;;		_CCP3_DefaultCallBack
  5872 ;; This function is called by:
  5873 ;;		_INTERRUPT_InterruptManager
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877     0716                     _CCP3_CaptureISR:	
  5878                           ;psect for function _CCP3_CaptureISR
  5879                           
  5880     0716                     i1l1916:	
  5881                           ;incstack = 0
  5882                           ; Regs used in _CCP3_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  5883                           
  5884                           
  5885                           ;mcc_generated_files/ccp3.c: 130:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 133:     PIR3bits.CCP3IF = 0;
  5886     0716  0020               	movlb	0	; select bank0
  5887     0717  1213               	bcf	19,4	;volatile
  5888     0718                     i1l1918:
  5889                           
  5890                           ;mcc_generated_files/ccp3.c: 136:     module.ccpr3l = CCPR3L;
  5891     0718  0026               	movlb	6	; select bank6
  5892     0719  0811               	movf	17,w	;volatile
  5893     071A  00F5               	movwf	CCP3_CaptureISR@module
  5894                           
  5895                           ;mcc_generated_files/ccp3.c: 137:     module.ccpr3h = CCPR3H;
  5896     071B  0812               	movf	18,w	;volatile
  5897     071C  00F6               	movwf	CCP3_CaptureISR@module+1
  5898     071D                     i1l1920:
  5899                           
  5900                           ;mcc_generated_files/ccp3.c: 140:     CCP3_CallBack(module.ccpr3_16Bit);
  5901     071D  0876               	movf	CCP3_CaptureISR@module+1,w
  5902     071E  00F1               	movwf	CCP3_DefaultCallBack@capturedValue+1
  5903     071F  0875               	movf	CCP3_CaptureISR@module,w
  5904     0720  00F0               	movwf	CCP3_DefaultCallBack@capturedValue
  5905     0721  0021               	movlb	1	; select bank1
  5906     0722  0854               	movf	(_CCP3_CallBack+1)^(0+128),w
  5907     0723  008A               	movwf	10
  5908     0724  0853               	movf	_CCP3_CallBack^(0+128),w
  5909     0725  000A               	callw
  5910     0726  3187               	pagesel	$
  5911     0727                     i1l310:
  5912     0727  0008               	return
  5913     0728                     __end_of_CCP3_CaptureISR:
  5914                           
  5915                           	psect	text31
  5916     05D9                     __ptext31:	
  5917 ;; *************** function _CCP3_DefaultCallBack *****************
  5918 ;; Defined at:
  5919 ;;		line 79 in file "mcc_generated_files/ccp3.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  capturedValu    2    0[COMMON] unsigned short 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5933 ;;      Params:         2       0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0
  5935 ;;      Temps:          3       0       0       0       0       0
  5936 ;;      Totals:         5       0       0       0       0       0
  5937 ;;Total ram usage:        5 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_CCP3_Initialize
  5943 ;;		_CCP3_CaptureISR
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947     05D9                     _CCP3_DefaultCallBack:	
  5948                           ;psect for function _CCP3_DefaultCallBack
  5949                           
  5950     05D9                     i1l1882:	
  5951                           ;incstack = 0
  5952                           ; Regs used in _CCP3_DefaultCallBack: [wreg+status,2+status,0]
  5953                           
  5954                           
  5955                           ;mcc_generated_files/ccp3.c: 79: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 80: {;mcc_generated_files/ccp3.c: 84:     pulses++;
  5956     05D9  3001               	movlw	1
  5957     05DA  0021               	movlb	1	; select bank1
  5958     05DB  07AC               	addwf	_pulses^(0+128),f
  5959     05DC  3000               	movlw	0
  5960     05DD  3DAD               	addwfc	(_pulses+1)^(0+128),f
  5961     05DE                     i1l1884:
  5962                           
  5963                           ;mcc_generated_files/ccp3.c: 85:     dir=PORTBbits.RB3;
  5964     05DE  0020               	movlb	0	; select bank0
  5965     05DF  0C0D               	rrf	13,w	;volatile
  5966     05E0  00F2               	movwf	??_CCP3_DefaultCallBack
  5967     05E1  0CF2               	rrf	??_CCP3_DefaultCallBack,f
  5968     05E2  0C72               	rrf	??_CCP3_DefaultCallBack,w
  5969     05E3  3901               	andlw	1
  5970     05E4  00F3               	movwf	??_CCP3_DefaultCallBack+1
  5971     05E5  01F4               	clrf	??_CCP3_DefaultCallBack+2
  5972     05E6  0873               	movf	??_CCP3_DefaultCallBack+1,w
  5973     05E7  0021               	movlb	1	; select bank1
  5974     05E8  00AA               	movwf	_dir^(0+128)
  5975     05E9  0874               	movf	??_CCP3_DefaultCallBack+2,w
  5976     05EA  00AB               	movwf	(_dir+1)^(0+128)
  5977     05EB                     i1l1886:
  5978                           
  5979                           ;mcc_generated_files/ccp3.c: 87:     if(pulses>=408)
  5980     05EB  082D               	movf	(_pulses+1)^(0+128),w
  5981     05EC  3A80               	xorlw	128
  5982     05ED  00F2               	movwf	??_CCP3_DefaultCallBack
  5983     05EE  3081               	movlw	129
  5984     05EF  0272               	subwf	??_CCP3_DefaultCallBack,w
  5985     05F0  1D03               	skipz
  5986     05F1  2DF4               	goto	u106_25
  5987     05F2  3098               	movlw	152
  5988     05F3  022C               	subwf	_pulses^(0+128),w
  5989     05F4                     u106_25:
  5990     05F4  1C03               	skipc
  5991     05F5  2DF7               	goto	u106_21
  5992     05F6  2DF8               	goto	u106_20
  5993     05F7                     u106_21:
  5994     05F7  2E04               	goto	i1l304
  5995     05F8                     u106_20:
  5996     05F8                     i1l1888:
  5997                           
  5998                           ;mcc_generated_files/ccp3.c: 88:     {;mcc_generated_files/ccp3.c: 89:         flag_upda
      +                          teT=1;
  5999     05F8  0021               	movlb	1	; select bank1
  6000     05F9  01AE               	clrf	_flag_updateT^(0+128)
  6001     05FA  0AAE               	incf	_flag_updateT^(0+128),f
  6002     05FB                     i1l1890:
  6003                           
  6004                           ;mcc_generated_files/ccp3.c: 90:         pulses=0;
  6005     05FB  01AC               	clrf	_pulses^(0+128)
  6006     05FC  01AD               	clrf	(_pulses+1)^(0+128)
  6007     05FD                     i1l1892:
  6008                           
  6009                           ;mcc_generated_files/ccp3.c: 92:         T=capturedValue;
  6010     05FD  0871               	movf	CCP3_DefaultCallBack@capturedValue+1,w
  6011     05FE  00D2               	movwf	(_T+1)^(0+128)
  6012     05FF  0870               	movf	CCP3_DefaultCallBack@capturedValue,w
  6013     0600  00D1               	movwf	_T^(0+128)
  6014     0601                     i1l1894:
  6015                           
  6016                           ;mcc_generated_files/ccp3.c: 95:         TMR1H = 0X00;
  6017     0601  0020               	movlb	0	; select bank0
  6018     0602  0197               	clrf	23	;volatile
  6019     0603                     i1l1896:
  6020                           
  6021                           ;mcc_generated_files/ccp3.c: 96:         TMR1L = 0X00;
  6022     0603  0196               	clrf	22	;volatile
  6023     0604                     i1l304:	
  6024                           ;mcc_generated_files/ccp3.c: 99:     }
  6025                           
  6026     0604  0008               	return
  6027     0605                     __end_of_CCP3_DefaultCallBack:
  6028     007E                     btemp	set	126	;btemp
  6029     007E                     int$flags	set	126
  6030     007E                     wtemp0	set	126
  6031                           
  6032                           	psect	config
  6033                           
  6034                           ;Config register CONFIG1 @ 0x8007
  6035                           ;	Oscillator Selection
  6036                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6037                           ;	Watchdog Timer Enable
  6038                           ;	WDTE = OFF, WDT disabled
  6039                           ;	Power-up Timer Enable
  6040                           ;	PWRTE = OFF, PWRT disabled
  6041                           ;	MCLR Pin Function Select
  6042                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6043                           ;	Flash Program Memory Code Protection
  6044                           ;	CP = OFF, Program memory code protection is disabled
  6045                           ;	Data Memory Code Protection
  6046                           ;	CPD = OFF, Data memory code protection is disabled
  6047                           ;	Brown-out Reset Enable
  6048                           ;	BOREN = ON, Brown-out Reset enabled
  6049                           ;	Clock Out Enable
  6050                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6051                           ;	Internal/External Switchover
  6052                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6053                           ;	Fail-Safe Clock Monitor Enable
  6054                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6055     8007                     	org	32775
  6056     8007  3FE4               	dw	16356
  6057                           
  6058                           ;Config register CONFIG2 @ 0x8008
  6059                           ;	Flash Memory Self-Write Protection
  6060                           ;	WRT = OFF, Write protection off
  6061                           ;	PLL Enable
  6062                           ;	PLLEN = OFF, 4x PLL disabled
  6063                           ;	Stack Overflow/Underflow Reset Enable
  6064                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6065                           ;	Brown-out Reset Voltage Selection
  6066                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6067                           ;	Low-Voltage Programming Enable
  6068                           ;	LVP = ON, Low-voltage programming enabled
  6069     8008                     	org	32776
  6070     8008  3EFF               	dw	16127

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         57
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     10      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1153$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S1153$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1193$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7257
                                              6 BANK1      4     4      0
                  _SYSTEM_Initialize
                            ___aldiv
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               9     3      6    6570
                                             79 BANK0      1     1      0
                                              0 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    6303
                                             72 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           22    20      2    5877
                                             54 BANK0     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                27    19      8    4237
                                             27 BANK0     27    19      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2382
                                             17 BANK0      9     6      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1    1092
                                             10 BANK0      7     6      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     826
                                              2 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              1 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8      82
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                    _CCP3_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0     121
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     122
                    _CCP3_CaptureISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CCP3_CaptureISR                                     2     2      0     122
                                              5 COMMON     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP3_DefaultCallBack                                5     3      2      75
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _WDT_Initialize
   ___aldiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _CCP3_CaptureISR
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A      49       8       91.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      A7      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 05 08:42:19 2023

                       ??_CCP3_DefaultCallBack 0072                                              _T 00D1  
                                            _a 00A4                                             l48 06B5  
                                           l90 074B                                             l74 06DF  
                              _timer0ReloadVal 007D                                            l121 06CB  
                                          l203 0776                                            l124 077D  
                                          l221 0766                                            l215 075D  
                                          l127 0791                                            l240 0703  
                                          l313 076F                                            l218 0754  
                                          l170 064C                                            l307 0715  
                                          l600 025D                                            l601 026E  
                                          l194 073B                                            l613 0441  
                                          l197 0742                                            l614 0452  
                                          l565 0466                                            l575 04E2  
                                          l963 06F1                                            l985 05B1  
                                          l996 0096                                            l989 05D8  
                                          l997 00B7                                            u710 01CF  
                                          u720 01DE                                            u800 039F  
                                          u721 01DD                                            u801 039E  
                                          u730 01F1                                            u731 01F0  
                                          u740 021B                                            u820 03CB  
                                          u900 0677                                            u741 021A  
                                          u821 03CA                                            u901 0676  
                                          u750 023A                                            u670 0176  
                                          u830 03DE                                            u751 0239  
                                          u671 0175                                            u831 03DD  
                                          u760 023F                                            u840 0400  
                                          u761 023E                                            u745 0217  
                                          u841 03FF                                            u905 0673  
                                          u690 01A3                                            u850 041E  
                                          u691 01A2                                            u851 041D  
                                          u860 0423                                            u780 0372  
                                          u861 0422                                            u845 03FC  
                                          u781 0371                                _timer1ReloadVal 00D5  
                                          _abs 0669                                            _dir 00AA  
                                          _pad 05A4                                            _vel 00A0  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1001 00B5                                           l1002 0126  
                                         l1031 0668                                           l1008 0169  
                                         l1025 0365                                           l1050 05A3  
                                         l1035 0684                                           ?_abs 0033  
                                         l2100 00F1                                           l1038 0684  
                                         l2030 073F                                           l2110 014E  
                                         l2102 00F5                                           l2200 06B3  
                                         l2120 0743                                           l2032 0772  
                                         l2040 0571                                           l2112 0154  
                                         l2104 00F9                                           l2122 0755  
                                         l2210 06D7                                           l2202 06CC  
                                         l2042 057B                                           l2034 0561  
                                         l1058 0628                                           l2050 060A  
                                         l2114 0158                                           l2106 0134  
                                         l2130 0271                                           l2124 074C  
                                         l2212 06D8                                           l2204 06D1  
                                         l2220 078E                                           l2028 073B  
                                         l2044 0599                                           l2036 0567  
                                         l2052 0616                                           l2060 05AF  
                                         l2116 015E                                           l2108 0141  
                                         l2140 029E                                           l2132 0282  
                                         l2230 0711                                           l2222 0704  
                                         l2126 075E                                           l2214 0777  
                                         l2206 06D4                                           l2038 056C  
                                         l2054 061B                                           l2062 05B4  
                                         l2070 003C                                           l2142 02A5  
                                         l2150 02AF                                           l2134 028A  
                                         l2128 0767                                           l2232 0713  
                                         l2224 0707                                           l2216 077A  
                                         l2208 06D6                                           l2240 06F8  
                                         l2400 0489                                           l1600 016A  
                                         l2048 0607                                           l2064 05BE  
                                         l2056 05A6                                           l2080 008B  
                                         l2072 004C                                           l2144 02AA  
                                         l2152 02C2                                           l2136 0292  
                                         l2226 0708                                           l2250 0633  
                                         l2218 077B                                           l2242 06F9  
                                         l2234 06F2                                           l2410 04B4  
                                         l2402 048C                                           l1610 01C2  
                                         l1602 016C                                           l2066 05C3  
                                         l2058 05AA                                           l2090 00AC  
                                         l2082 0091                                           l2074 005A  
                                         l2170 0343                                           l2154 02CC  
                                         l2162 0311                                           l2146 02AD  
                                         l2138 0296                                           l2228 0709  
                                         l2252 063B                                           l2244 0700  
                                         l2236 06F4                                           l2420 04CF  
                                         l2412 04BC                                           l2404 0497  
                                         l1620 01E9                                           l1612 01C7  
                                         l1604 0176                                           l2068 05D1  
                                         l2092 00B1                                           l2084 009E  
                                         l2076 005F                                           l2164 0321  
                                         l2156 02D7                                           l2260 0654  
                                         l2254 0643                                           l2246 0629  
                                         l2190 06A2                                           l2238 06F6  
                                         l2422 04DA                                           l2414 04BD  
                                         l2406 049B                                           l1630 022B  
                                         l1622 01ED                                           l1614 01D2  
                                         l1606 0198                                           l2094 00BB  
                                         l2086 00A3                                           l2078 007D  
                                         l2166 032E                                           l2158 02F1  
                                         l2174 034D                                           l2262 065C  
                                         l2270 06E0                                           l2430 04E7  
                                         l2256 064B                                           l2248 0632  
                                         l2192 06A5                                           l2416 04C4  
                                         l2408 04A2                                           l1632 022C  
                                         l1624 01F1                                           l1616 01DE  
                                         l1608 01A3                                           l1640 0368  
                                         l2096 00BE                                           l2088 00A7  
                                         l2264 0666                                           l2272 06E3  
                                         l2440 04F2                                           l2432 04E8  
                                         l2194 06A7                                           l2418 04CA  
                                         l1626 01F9                                           l1618 01E1  
                                         l1634 023A                                           l1650 03CB  
                                         l1642 0372                                           l2098 00C3  
                                         l2258 064F                                           l2450 0541  
                                         l2442 04FE                                           l2434 04EA  
                                         l2426 04E3                                           l2196 06AA  
                                         l2188 069F                                           l2268 06B6  
                                         l1636 023F                                           l1628 021B  
                                         l1660 0400                                           l1652 03CE  
                                         l1644 0394                                           l2452 054C  
                                         l2444 0504                                           l2436 04EB  
                                         l2428 04E6                                           l2198 06AF  
                                         l2390 0459                                           l1662 0410  
                                         l1654 03D6                                           l1646 039F  
                                         l1638 0366                                           l2454 055C  
                                         l2446 0505                                           l2438 04F1  
                                         l2392 046A                                           l1656 03DA  
                                         l1664 041E                                           l1648 03BE  
                                         l2448 050A                                           l2394 0475  
                                         l2386 0453                                           l1666 0423  
                                         l1658 03DE                                           l1682 0669  
                                         l2396 0479                                           l2388 0455  
                                         l1684 0677                                           l2398 0481  
                                         l2496 02B7                                           l2498 0319  
                                         ?_pad 0031                                           STR_1 078A  
                                         STR_2 077E                                           u1210 073F  
                                         u1211 073E                                           u1220 0567  
                                         u1300 0058                                           u1221 0566  
                                         u1230 056C                                           u1310 005F  
                                         u1231 056B                                           u1311 005E  
                                         u1240 057B                                           u1400 0282  
                                         u1241 057A                                           u1401 0281  
                                         u1250 0599                                           u1330 008B  
                                         u1410 02CC                                           u1251 0598  
                                         u1331 008A                                           u1411 02CB  
                                         u1260 0628                                           u1340 00A3  
                                         u1420 02D6                                           u1261 0627  
                                         u1341 00A2                                           u1421 02D5  
                                         _LATA 010C                                           u1270 05AA  
                                         u1350 00AC                                           u1430 0666  
                                         _LATB 010D                                           u1255 0595  
                                         u1271 05A9                                           u1351 00AB  
                                         u1335 0087                                           u1431 0665  
                                         u1600 0459                                           u1280 05D1  
                                         u1360 0134                                           u1601 0458  
                                         u1281 05D0                                           u1361 0133  
                                         u1610 046A                                           u1370 0141  
                                         u1290 0057                                           u1611 0469  
                                         u1371 0140                                           u1291 0055  
                                         u1620 0489                                           u1380 014E  
                                         u1700 04F1                                           u1621 0488  
                                         u1285 05CD                                           u1381 014D  
                                         u1365 0130                                           u1701 04F0  
                                         u1390 0154                                           u1710 04FC  
                                         u1391 0153                                           u1711 04F9  
                                         u1640 049B                                           u1641 049A  
                                         u1385 014A                                           u1730 0504  
                                         u1635 048D                                           u1731 0503  
                                         u1660 04B4                                           u1740 050A  
                                         u1724 04FE                                           u1661 04B3  
                                         u1741 0509                                           u1750 0515  
                                         u1655 049C                                           u1680 04CA  
                                         u1681 04C9                                           u1665 04B0  
                                         u1690 04CF                                           u1691 04CE  
                                         u1675 04BE                                           u1755 0511  
                                         i1l22 0024                                           i1l23 0024  
                                         i1l17 0012                                           i1l94 069E  
                                         i1l87 0738                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         abs@a 0033                                           _dbuf 00B1  
                                         _main 04E3                                           _dtoa 003A  
                                         _prec 0077                                           pad@i 0035  
                                         pad@p 0032                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0037  
                                         btemp 007E                                           start 0026  
                                        ??_abs 0035                                          ??_pad 0034  
                      __end_of_TMR0_Initialize 06E0                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 077E  
                              __end_of___aldiv 04E3                                __end_of___aodiv 026F  
                      __end_of_CCP3_Initialize 0716                                          ?_main 0070  
                                        ?_dtoa 003B                                __end_of___aomod 0453  
                                        _T1CON 0018                                          i1l310 0727  
                                        i1l304 0604                                          _RCREG 0199  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 0056  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        u70lld 01C2                                          u81lld 03BE  
                    ?_TMR0_SetInterruptHandler 0020                                          u68lld 0195  
                                        u77lld 025D                                          u87lld 0441  
                                        u79lld 0391                               __end_of_TMR0_ISR 0739  
                                        _flags 007B                                 _WDT_Initialize 078E  
                                        _fputc 0561                                          _fputs 0605  
                                        pad@fp 0039                                          _width 00A8  
                                        _putch 0770                                          dtoa@d 003B  
                                        dtoa@i 0054                                          dtoa@n 004B  
                                        dtoa@p 0047                                          dtoa@s 0053  
                                        dtoa@w 0049                        __end_of_TMR1_Initialize 0704  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 0028  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 0561  
                                 __end_of_dtoa 016A                                 ??_EUSART_Write 0020  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00E5  
                                       ??_dtoa 0043                         __end_of_WDT_Initialize 0792  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 00D9  
                                       ?_fputc 0022                                         ?_fputs 002A  
                                       _CCPR3H 0312                                         _CCPR3L 0311  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                                         u110_20 000A  
                                       u110_21 0009                                         u111_20 000E  
                                       u111_21 000D                                         u112_20 0016  
                                       u112_21 0015                                         u105_20 0699  
                                       u113_20 001B                                         u105_21 0698  
                                       u113_21 001A                                         u105_25 0695  
                                       i1l1830 0685                                         i1l1910 0729  
                                       u106_20 05F8                                         i1l1920 071D  
                                       i1l1832 0688                                         i1l1912 072C  
                                       u114_20 0020                                         u106_21 05F7  
                                       u114_21 001F                                         i1l1834 0699  
                                       i1l1914 0733                                         i1l1916 0716  
                                       i1l1836 069C                                         i1l1908 0728  
                                       u106_25 05F4                                         i1l1918 0718  
                                       i1l1950 0016                                         i1l1952 001B  
                                       i1l1944 0006                                         i1l1890 05FB  
                                       i1l1882 05D9                                         i1l1954 0020  
                                       i1l1946 000A                                         i1l1892 05FD  
                                       i1l1884 05DE                                         i1l1948 000E  
                                       i1l1894 0601                                         i1l1886 05EB  
                                       i1l1896 0603                                         i1l1888 05F8  
                                       u108_20 0733                                         u108_21 0732  
                                       _OSCCON 0099                                         u132lld 007D  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                       __end_of_CCP3_SetCallBack 0770  
                                 vfprintf@cfmt 006D                                      ??___aldiv 0028  
                                    ??___aodiv 0030                                      ??___aomod 0030  
                                _CCP3_CallBack 00D3                               ?_TMR0_Initialize 0070  
                                       _printf 06E0                                         pad@buf 0031  
                                       _pulses 00AC                                         dtoa@fp 0046  
                             ?_CCP3_Initialize 0070                                         fputc@c 0022  
                                       fputs@c 002E                                         fputs@i 002F  
                                       fputs@s 002D                                ?_WDT_Initialize 0070  
                             __end_of_vfprintf 0669       TMR0_SetInterruptHandler@InterruptHandler 0020  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 06B6  
                      __end_of__initialization 0036                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR0_ISR 0070                                  __end_of_fputc 05A4  
                                __end_of_fputs 0629                                  __end_of_putch 0777  
                        CCP3_CaptureISR@module 0075                                 _OPTION_REGbits 0095  
               CCP3_SetCallBack@customCallBack 0020                ??_EUSART_SetOverrunErrorHandler 0022  
                                      ??_fputc 0025                      __end_of_SYSTEM_Initialize 06CC  
                                      ??_fputs 002B                                        ??_putch 0021  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0743  
                                   __pnvCOMMON 007D                                     __pmaintext 04E3  
             __end_of_TMR0_SetInterruptHandler 074C                                     ??_TMR0_ISR 0071  
                                   __pintentry 0004                                        _CCP3CON 0313  
                                      _BAUDCON 019F                                     _flag_blink 00AF  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_printf 00DF                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0022                                        ___aldiv 0453  
                                      ___aodiv 016A                                        ___aomod 0366  
                                 _flag_updateT 00AE                                   _flag_startTX 00B0  
                                    ?_vfprintf 0068                                        __ptext1 06E0  
                                      __ptext2 064D                                        __ptext3 026F  
                                      __ptext4 003A                                        __ptext5 05A4  
                                      __ptext6 0605                                        __ptext7 0561  
                                      __ptext8 0770                                        __ptext9 0739  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0777  
                             ___aldiv@dividend 0024                       ??_PIN_MANAGER_Initialize 0020  
                                      clrloop0 0785                           end_of_initialization 0036  
        __end_of_EUSART_SetOverrunErrorHandler 0755                  _EUSART_SetOverrunErrorHandler 074C  
                                      fputc@fp 0024                                        fputs@fp 002A  
                            _EUSART_Initialize 0629                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0366                              ?_CCP3_SetCallBack 0020  
                                    _RCSTAbits 019D                               ___aldiv@quotient 002B  
                             vfpfcnvrt@convarg 005C                             ??_CCP3_SetCallBack 0022  
                                   ??_vfprintf 006B                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                       _TMR0_SetInterruptHandler 0743  
                                    _PORTBbits 000D                      __end_of_EUSART_Initialize 064D  
                                    _TXSTAbits 019E                     _EUSART_DefaultErrorHandler 0000  
                                  vfpfcnvrt@ap 0057                                    vfpfcnvrt@cp 0066  
                                  vfpfcnvrt@fp 0064                                   _EUSART_Write 0739  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 06F2  
                          start_initialization 0028                                    __end_of_abs 0685  
                                  __end_of_pad 05D9                                    putch@txData 0021  
               ?_EUSART_SetOverrunErrorHandler 0020                                    vfprintf@fmt 0068  
                   _EUSART_FramingErrorHandler 00DB                         _EUSART_SetErrorHandler 075E  
                                     ??_printf 006F                                    __pbssCOMMON 0077  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DF                               ___aodiv@dividend 0028  
                            ??_CCP3_CaptureISR 0075                   __end_of_CCP3_DefaultCallBack 0605  
                        _TMR0_InterruptHandler 00DD                                      __pnvBANK1 00D3  
                       _PIN_MANAGER_Initialize 069F                                      _dtoa$1221 0044  
                                     ?___aldiv 0020                                       ?___aodiv 0020  
                                     ?___aomod 0020                               ___aodiv@quotient 0033  
            CCP3_DefaultCallBack@capturedValue 0070                   ??_INTERRUPT_InterruptManager 0077  
                              ___aldiv@divisor 0020                              ??_TMR0_Initialize 0022  
                              ___aldiv@counter 0029         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                      clear_ram0 0784  
                            ??_CCP3_Initialize 0022                                       _PIE3bits 0093  
                            _eusartRxLastError 007C                     ??_TMR0_SetInterruptHandler 0022  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _PIR3bits 0013                                       _TMR0_ISR 0728  
            _EUSART_DefaultOverrunErrorHandler 0000                                      _vfpfcnvrt 026F  
                            ??_TMR1_Initialize 0020                                     vfpfcnvrt@c 0065  
                                   vfprintf@ap 006A                                     vfprintf@fp 006C  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00D7  
                         _CCP3_DefaultCallBack 05D9                                     ?_vfpfcnvrt 0056  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0031  
                                     __ptext10 0669                                       __ptext11 0366  
                                     __ptext20 0777                                       __ptext12 016A  
                                     __ptext21 0629                                       __ptext13 0453  
                                   _T1GCONbits 0019                                       __ptext30 0716  
                                     __ptext22 074C                                       __ptext14 06B6  
                                     __ptext31 05D9                                       __ptext23 0755  
                                     __ptext15 078E                                       __ptext24 075E  
                                     __ptext16 06F2                                       __ptext25 0704  
                                     __ptext17 06CC                                       __ptext26 0767  
                                     __ptext18 0743                                       __ptext19 069F  
                                     __ptext28 0728                                       __ptext29 0685  
         __end_of_TMR0_DefaultInterruptHandler 069F                   _TMR0_DefaultInterruptHandler 0685  
                      ?_EUSART_SetErrorHandler 0020  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                                     int$flags 007E                          ?_CCP3_DefaultCallBack 0070  
                                     _vfprintf 064D             __end_of_INTERRUPT_InterruptManager 0026  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 00DF  
        __end_of_EUSART_SetFramingErrorHandler 075E                  _EUSART_SetFramingErrorHandler 0755  
                              _CCP3_CaptureISR 0716                               ___aomod@dividend 0028  
                                   _INTCONbits 000B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0767  
                              _interrupt_count 0079                  ?_TMR0_DefaultInterruptHandler 0070  
                                     printf@ap 006F  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                              ___aomod@divisor 0020                                    ??_vfpfcnvrt 0058  
                              ___aomod@counter 0031                                  __pstringtext1 077E  
                                __pstringtext2 078A                                  __pstringtext3 0000  
                                   _OPTION_REG 0095                                _TMR0_Initialize 06CC  
                             _CCP3_SetCallBack 0767                                   ___aldiv@sign 002A  
                              _CCP3_Initialize 0704                             EUSART_Write@txData 0020  
                                 ___aodiv@sign 0032                 __end_of_PIN_MANAGER_Initialize 06B6  
                                 ___aomod@sign 0032                                _TMR1_Initialize 06F2  
                      __end_of_CCP3_CaptureISR 0728  
